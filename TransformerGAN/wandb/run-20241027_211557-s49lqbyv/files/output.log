/home/ymax29os/GANs/ams_project-2/transformer_GAN/transformer_model.py:95: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler()
/home/ymax29os/.local/lib/python3.9/site-packages/torch/amp/grad_scaler.py:132: UserWarning: torch.cuda.amp.GradScaler is enabled, but CUDA is not available.  Disabling.
  warnings.warn(
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]]])
/home/ymax29os/GANs/ams_project-2/transformer_GAN/transformer_model.py:134: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
/home/ymax29os/.local/lib/python3.9/site-packages/torch/amp/autocast_mode.py:265: UserWarning: User provided device_type of 'cuda', but CUDA is not available. Disabling
  warnings.warn(
fake_data torch.Size([64, 50, 17]) tensor([[[-1.2857, -0.8294, -0.7232,  ...,  1.0706, -0.2863,  0.9557],
         [-0.0059, -0.5606,  1.4043,  ..., -0.3261, -0.1681, -0.3490],
         [ 0.2187, -0.0470, -1.0099,  ..., -0.0611, -0.2660, -0.5446],
         ...,
         [ 0.4485, -0.5326,  0.1437,  ...,  0.5709,  0.0195,  0.2182],
         [-0.0493,  0.3273, -0.0506,  ...,  0.2234,  0.0297, -1.2670],
         [ 0.5966, -1.0894, -0.4839,  ..., -0.0790, -1.5353,  0.8394]],

        [[-0.6071, -1.3283, -1.3098,  ...,  0.3360,  0.0044, -0.4167],
         [-0.3897, -0.4008,  0.6506,  ..., -0.2110, -0.5942, -0.0269],
         [-0.0855, -0.3267, -0.5402,  ..., -0.2616, -0.2604, -0.7132],
         ...,
         [ 0.5117, -0.2764,  0.1576,  ..., -0.5033, -0.3432, -0.2457],
         [ 0.9199,  0.0342,  0.6659,  ..., -0.4415, -0.8360, -0.1485],
         [-0.3246,  0.2603,  0.1235,  ...,  0.0088, -1.1842, -0.1472]],

        [[-0.0262,  0.0052, -0.2908,  ...,  0.8595, -0.1991,  0.5150],
         [-0.4984, -0.1999,  0.6897,  ..., -0.4481, -1.5314,  0.1898],
         [-0.1973, -0.2205, -0.7614,  ...,  0.2377, -0.6364, -0.4297],
         ...,
         [ 0.6376, -0.8520,  1.0031,  ..., -0.2570, -0.6154,  0.5006],
         [ 0.2111, -0.2611, -0.0819,  ..., -0.1895, -0.1979, -0.0350],
         [ 0.6996, -0.0311,  0.0866,  ..., -0.4180, -0.2030, -0.6201]],

        ...,

        [[-0.1531, -1.0361, -0.3325,  ...,  0.2057, -0.4141, -0.0180],
         [-0.0779, -0.5035,  0.3700,  ...,  0.8789, -0.0425,  0.2249],
         [ 0.2840, -0.1058,  0.3820,  ...,  0.0665, -1.1247, -0.5191],
         ...,
         [ 0.2701, -0.4772, -1.2527,  ...,  1.3572,  0.3325,  0.2655],
         [ 0.0169, -0.6967, -0.2647,  ...,  0.1419, -0.2195,  0.3097],
         [ 0.7733, -0.7128,  0.8976,  ..., -0.0187, -0.7868,  0.0880]],

        [[-0.0129, -1.0616, -0.9015,  ...,  0.6597, -0.2899,  0.9329],
         [ 0.2526, -0.5714, -0.0260,  ..., -0.0593, -0.4591,  0.5276],
         [ 0.4038,  0.1828, -1.0444,  ...,  0.8580, -0.8471, -0.5724],
         ...,
         [ 0.3630,  0.1504, -0.3644,  ...,  1.2602,  0.4917, -0.8162],
         [ 0.6904, -0.4674,  0.6015,  ...,  0.3635, -0.2011,  0.1207],
         [ 0.2617,  0.0484,  0.4971,  ...,  0.7463, -0.4318,  0.5298]],

        [[-0.6120, -0.9461, -1.1330,  ...,  0.2809, -0.8167,  1.1800],
         [ 0.2499, -0.1836,  0.0122,  ...,  0.0527, -0.9562,  0.1256],
         [ 0.3168,  0.4378, -0.4448,  ..., -0.1346, -0.0873, -0.9981],
         ...,
         [ 0.5735, -0.2453,  0.1065,  ...,  1.0654,  0.6282, -0.5549],
         [-0.0254, -0.0551,  0.5007,  ...,  0.0619, -1.0020,  0.4845],
         [ 0.4156, -1.2840, -0.4277,  ...,  0.8871, -0.6197,  0.6424]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.4408, -0.5162, -1.2655,  ..., -0.1948, -0.6027,  0.1254],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3121,  0.1320, -1.1363,  ..., -0.2692,  0.0145,  0.0731],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8090, grad_fn=<DivBackward0>)
/home/ymax29os/GANs/ams_project-2/transformer_GAN/transformer_model.py:155: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():


 output torch.Size([3200]) tensor([ 0.7391,  1.0540, -0.5523,  ..., -0.6122, -0.2465, -0.5380],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.6968, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.4342, -1.3587, -1.0894,  ...,  0.2201, -0.2619,  0.0900],
         [-0.5183, -0.4779,  0.4559,  ...,  0.2423, -0.5391,  0.2888],
         [ 0.5796, -0.3904, -1.0715,  ..., -0.1611, -0.8482, -0.3433],
         ...,
         [ 0.5238,  0.2037,  0.0957,  ..., -1.2632, -0.7399,  0.5193],
         [-0.3961, -0.4096, -0.3601,  ..., -0.0190, -0.5749, -0.4685],
         [ 0.1470, -0.0342, -0.6437,  ...,  0.1159, -1.5857,  0.2651]],

        [[-0.8747, -0.7376, -0.9429,  ...,  0.6244, -0.2961,  0.2847],
         [-0.3781,  0.6444, -0.3591,  ...,  0.4465, -0.6800, -0.2946],
         [ 0.2182,  0.1146, -0.3180,  ...,  0.1203, -1.6558, -0.3824],
         ...,
         [ 0.9134, -0.9335,  1.2636,  ..., -0.1335, -0.1566,  0.0385],
         [ 0.5593, -0.3929, -0.0480,  ...,  0.0382, -0.7042,  0.4669],
         [-0.1465, -0.9442, -0.7413,  ..., -0.0358, -0.2586,  0.8386]],

        [[-0.2989,  0.0229, -0.9413,  ...,  0.3822,  0.0388, -0.5745],
         [-0.7327,  0.2822,  0.4736,  ...,  0.3820, -0.8317, -0.5490],
         [ 0.6126, -0.2966, -0.8297,  ..., -0.3111, -0.9490, -0.8790],
         ...,
         [ 0.4971, -0.2280, -0.3298,  ..., -0.2546,  0.2228,  0.4093],
         [-0.0997,  0.6180,  0.1338,  ...,  0.8005, -1.0853, -0.7696],
         [ 0.2588, -0.9326, -1.0654,  ..., -0.1069, -0.8743,  1.0429]],

        ...,

        [[-0.1212, -0.6797, -0.6562,  ...,  0.3759, -1.2697,  0.1367],
         [ 0.2813,  0.2946, -0.0103,  ...,  0.3976, -0.0643, -1.5339],
         [ 0.3171, -0.1364, -0.3487,  ...,  0.0815, -0.9858, -0.8428],
         ...,
         [ 1.4230, -0.9343,  0.1800,  ..., -0.1080, -0.1967,  0.1925],
         [ 0.2931, -0.7874, -0.5559,  ...,  0.9828, -0.1413, -0.0469],
         [ 0.4028, -0.3399, -0.2806,  ...,  0.2158, -1.0316, -0.0737]],

        [[-0.6537, -0.2452, -0.5953,  ...,  0.7298, -0.4387,  0.5861],
         [ 0.2071, -0.9497, -0.4046,  ...,  0.1853, -0.1360,  0.2815],
         [-0.9152, -0.1989, -0.7799,  ...,  0.5565, -1.3571, -0.1693],
         ...,
         [ 0.6943, -1.0677,  0.6163,  ..., -0.0034, -0.3280,  0.6389],
         [ 0.6385, -0.7743,  0.0086,  ..., -0.2042, -1.3918, -0.0979],
         [ 0.3552, -0.7162,  0.8757,  ..., -0.1095,  0.1117,  0.0911]],

        [[-0.7453, -0.1491, -0.2655,  ...,  1.8571, -0.5155,  0.6169],
         [-1.0621, -0.2499,  0.3344,  ..., -0.0047, -0.7502,  0.1148],
         [-0.7336,  0.2425, -0.0559,  ...,  0.4438, -0.7643, -0.3755],
         ...,
         [ 0.8785, -0.2122, -0.3345,  ...,  0.6593, -0.3258,  0.4414],
         [ 0.0806,  0.3276,  0.0788,  ...,  0.0896, -0.3360,  1.0238],
         [ 0.8471, -0.2962,  0.0325,  ..., -0.5416, -0.1921, -0.2389]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.4557, -0.2057, -0.7236,  ..., -1.0922,  0.0500, -1.0224],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 1.3078,  0.5280, -0.5118,  ..., -0.5873,  1.2801, -0.5306],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7914, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.7213, -0.2546, -0.9303,  ..., -0.4896,  0.1128, -0.1547],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.6861, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636],
         [0.0000, 0.0000, 0.4585,  ..., 0.8462, 0.5555, 0.8917]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8800, -0.7185, -1.2123,  ..., -0.0643, -0.7022,  0.0735],
         [-0.1556, -0.9246,  0.2996,  ..., -0.3049, -0.1256, -0.7980],
         [ 0.0407,  0.0498, -0.5001,  ..., -0.2621, -0.6241, -1.2421],
         ...,
         [ 1.4222, -1.0744,  0.3594,  ..., -0.2631, -0.1714,  0.3779],
         [ 0.2312, -0.5655, -0.1638,  ..., -0.0806, -1.5778,  1.1535],
         [ 0.1959, -0.7828, -0.5639,  ..., -0.5630, -0.2892, -0.4397]],

        [[-0.2351, -0.6255, -1.2123,  ...,  0.6191, -0.4333,  0.9305],
         [-0.4976,  0.0083,  0.3315,  ..., -0.4565, -0.4721,  0.7457],
         [-0.0201, -0.3173, -0.0995,  ..., -1.0688, -0.3900, -0.1493],
         ...,
         [ 0.8453, -0.4791, -1.2204,  ...,  0.0476, -0.2087, -0.5126],
         [ 0.2660, -0.4793, -0.3278,  ..., -0.0142, -0.6908,  0.1393],
         [ 0.3620, -0.8920, -0.6296,  ...,  0.4856, -0.5275,  0.8957]],

        [[-0.4459, -1.0761, -1.0903,  ...,  0.3858, -0.4884,  0.3587],
         [ 0.1187, -0.3559, -0.0566,  ..., -0.2069, -0.2445, -0.6108],
         [ 0.1085,  0.4570, -0.7418,  ...,  0.8126, -1.7024, -0.3892],
         ...,
         [ 0.4580, -0.7248,  0.1976,  ...,  0.0899,  0.5931, -0.6494],
         [-0.3677, -0.9824,  0.4019,  ...,  0.0370, -1.3280,  0.7178],
         [-0.4145,  0.0722, -0.3256,  ...,  0.1423, -0.0318, -0.3103]],

        ...,

        [[ 0.0656,  0.1621, -0.3607,  ...,  1.0615,  0.1420, -0.0030],
         [-1.0364, -0.7159,  0.6291,  ..., -0.4137, -0.5979,  0.1461],
         [ 0.6481, -0.9272, -0.6154,  ..., -0.5762, -0.0683, -0.0677],
         ...,
         [ 0.8320,  0.2587, -0.7211,  ...,  0.2752, -0.0814, -0.3487],
         [ 0.5812,  0.0774, -0.2481,  ..., -0.1458, -0.3323, -0.5350],
         [ 0.6387, -0.2399,  0.4392,  ...,  0.3046, -0.9041, -0.6298]],

        [[-0.7665, -0.1334, -1.5393,  ...,  0.9047,  0.2214,  0.1491],
         [-0.4731, -0.1231, -0.1820,  ...,  0.3365, -0.9019, -0.2044],
         [-0.0456,  0.1283, -1.4986,  ...,  0.1189, -0.2417,  0.2867],
         ...,
         [ 0.0714, -0.5074, -0.5198,  ..., -0.2142, -0.1587, -0.5756],
         [ 0.4124, -0.4905,  0.4278,  ..., -0.0636, -1.2115,  0.7501],
         [ 0.2635, -0.0568, -0.2112,  ..., -0.8446, -0.5048, -0.1111]],

        [[-0.9825, -1.4849, -0.2610,  ...,  0.3193, -0.2422,  1.1177],
         [ 0.0387,  0.5277, -0.0142,  ...,  0.1982, -0.9216,  0.0207],
         [ 0.3341, -0.5184, -1.0836,  ..., -0.8630, -0.6153, -0.1503],
         ...,
         [ 0.8930, -0.6383, -0.2108,  ..., -0.3453, -0.3802,  0.9779],
         [ 0.7024, -0.3374, -0.5595,  ...,  0.4585, -1.1463, -0.2550],
         [-0.3460,  0.1649, -0.3686,  ..., -0.3707, -0.6621, -0.4247]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.1611,  0.9226, -0.6633,  ..., -0.3178, -0.3173,  0.0581],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.3092,  0.9542, -0.2510,  ..., -0.5759,  0.1754,  0.2160],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7678, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.1151,  1.4387, -0.9041,  ..., -0.4585,  1.0175,  1.2617],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.6830, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-9.4445e-01, -1.7375e-01, -1.3407e+00,  ...,  1.1455e+00,
           1.1544e-01,  4.9271e-01],
         [-2.8481e-01, -3.6488e-01, -6.4028e-02,  ..., -3.0272e-01,
          -1.1483e+00, -2.9841e-01],
         [ 2.5316e-01,  8.1039e-02, -7.8974e-01,  ...,  6.9466e-01,
          -8.3361e-01, -6.2002e-01],
         ...,
         [ 7.7827e-01, -4.9161e-01,  6.2947e-01,  ..., -8.0985e-01,
          -1.5711e-01,  8.9511e-01],
         [ 5.5050e-01, -4.8946e-01, -1.2478e-01,  ..., -9.4014e-01,
          -1.2106e+00,  2.9109e-01],
         [ 1.7227e-01, -2.1381e-01, -8.0382e-01,  ...,  5.0698e-01,
          -9.6414e-01,  4.5555e-01]],

        [[-5.6400e-01,  2.4968e-01, -8.4067e-01,  ...,  6.8906e-01,
           1.1762e-01,  9.6305e-01],
         [-5.7982e-01,  7.5342e-02,  1.6770e-01,  ..., -3.2131e-01,
          -3.7080e-02, -4.5748e-01],
         [-8.5439e-01, -3.8109e-01, -8.7378e-01,  ..., -3.9075e-01,
          -7.9404e-01, -1.9992e-01],
         ...,
         [ 1.1601e+00, -2.3845e-01, -1.4314e-01,  ...,  1.3028e+00,
           4.3875e-01,  1.3017e+00],
         [ 1.0420e-01, -2.0031e-01, -1.7101e-01,  ...,  3.2472e-01,
           1.0507e-02,  2.2815e-01],
         [ 8.5946e-01, -2.9045e-03, -2.6301e-01,  ..., -2.1453e-01,
          -1.9896e-01,  1.1097e+00]],

        [[-7.1234e-01, -8.6943e-01, -4.9307e-01,  ...,  9.9390e-01,
          -4.7403e-02,  7.7901e-01],
         [-6.7486e-01, -3.4028e-01,  3.1473e-01,  ..., -3.4171e-01,
          -5.3928e-02, -5.6835e-01],
         [-3.2060e-01,  9.5144e-02, -5.5937e-01,  ..., -9.4741e-01,
          -3.0759e-01,  8.9003e-02],
         ...,
         [ 1.7180e-01, -4.0759e-01, -5.3267e-01,  ..., -1.4792e-02,
           2.5420e-01, -8.5095e-01],
         [ 2.2995e-01, -3.3980e-01,  2.0302e-01,  ..., -1.1833e-01,
          -3.4994e-01, -1.8269e-01],
         [ 7.1012e-01, -1.1985e+00, -2.4091e-01,  ..., -9.7708e-01,
          -1.3689e-01,  7.9957e-01]],

        ...,

        [[-8.0505e-01, -6.7517e-01, -1.0421e+00,  ...,  7.6672e-01,
          -1.4576e+00,  7.8990e-01],
         [-6.4544e-01, -2.5392e-01, -2.9245e-01,  ...,  1.0025e-02,
          -1.0823e+00,  6.7636e-02],
         [-2.0004e-01, -7.4345e-01, -5.0233e-01,  ..., -1.8183e-01,
          -1.7849e+00,  1.8054e-01],
         ...,
         [ 1.0562e+00, -1.0586e+00, -3.8884e-01,  ..., -3.6088e-01,
          -6.8868e-01, -8.5880e-02],
         [-1.9538e-02, -8.4806e-01, -2.5387e-01,  ..., -3.4990e-01,
          -9.3544e-01,  2.6947e-01],
         [ 1.3351e-01, -8.8176e-01, -2.9847e-01,  ..., -6.4936e-01,
          -1.8108e+00,  4.6211e-01]],

        [[-9.1648e-01, -1.1923e+00, -1.2537e-01,  ...,  5.9780e-01,
          -8.8572e-01,  8.9596e-01],
         [-7.7825e-01, -6.3462e-02, -8.8075e-03,  ..., -7.4261e-01,
          -1.2380e+00,  3.6984e-01],
         [ 3.1480e-01, -4.0144e-01, -6.2258e-01,  ..., -6.4324e-01,
          -1.3214e+00, -2.8952e-01],
         ...,
         [ 1.0277e+00,  8.1115e-02, -6.4283e-01,  ...,  1.7856e-01,
          -6.0207e-01,  1.0885e+00],
         [ 3.1618e-01, -2.7235e-01,  6.5972e-01,  ..., -5.4074e-02,
          -5.5977e-01,  9.8052e-04],
         [ 3.9722e-01, -8.1812e-01, -9.5217e-01,  ..., -1.2296e-01,
           5.3518e-02,  4.1635e-01]],

        [[-9.9699e-01, -6.3768e-01, -1.0848e+00,  ...,  1.5506e+00,
          -4.0273e-01,  1.1018e+00],
         [-1.6609e-01, -6.0336e-01, -6.8649e-01,  ...,  3.1257e-01,
          -7.0776e-01,  4.9760e-01],
         [ 3.5626e-01, -4.2658e-01, -7.1876e-01,  ..., -5.0693e-01,
          -8.5594e-01, -1.5317e-01],
         ...,
         [-6.7424e-02, -7.1807e-02, -1.4950e-01,  ...,  1.1921e-01,
          -5.4512e-01,  1.5047e-01],
         [ 4.5650e-02, -1.3292e+00,  7.0879e-01,  ...,  1.8418e-01,
          -5.0616e-01,  4.8216e-01],
         [ 3.5422e-01,  4.3543e-01,  5.4510e-02,  ..., -4.1959e-01,
          -5.1075e-01,  3.4708e-02]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.8541,  0.3623, -0.5566,  ...,  0.5124,  0.1018,  0.0569],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 1.4555,  0.5354, -0.5757,  ...,  0.2850, -0.2395, -0.5128],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7517, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 1.1231,  0.3522, -0.0581,  ..., -0.8670, -0.1716,  0.3951],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.6911, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        ...,

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8631, -0.1257, -1.1180,  ...,  0.3963, -0.9404,  0.8394],
         [-0.9802, -0.7749,  0.0340,  ..., -0.6953,  0.1176,  0.0738],
         [ 0.6447, -0.5759, -1.2100,  ...,  0.7307, -1.1610,  0.0944],
         ...,
         [ 0.0224, -0.3275, -1.3034,  ...,  0.2832,  0.8646, -0.0654],
         [ 0.2776,  0.5139, -0.1482,  ...,  0.6262, -0.8534,  0.4446],
         [ 0.1753, -0.9730, -1.2429,  ...,  0.2546, -1.8449,  0.9568]],

        [[-0.6966, -1.5317, -1.4017,  ..., -0.3252, -0.3312,  0.5311],
         [ 0.0796, -0.6507, -0.5977,  ...,  0.2715, -0.9514, -0.0692],
         [ 0.3246, -0.2715, -0.2837,  ..., -0.5846, -2.0496, -0.1724],
         ...,
         [ 1.3693, -0.0629,  0.1937,  ...,  0.5450,  0.2752, -0.2254],
         [ 0.0982,  0.1875,  0.0495,  ..., -0.0121, -1.3419,  0.2695],
         [ 0.1768, -0.3982, -0.0993,  ..., -0.4435, -0.5827, -0.3005]],

        [[-1.0987, -1.0871, -1.5118,  ...,  0.7331, -0.4400,  1.4926],
         [-0.5226,  0.1069,  0.0230,  ..., -0.0104, -0.9168, -0.6977],
         [ 0.1352, -0.0269, -1.6520,  ..., -0.2720, -0.6375,  0.5482],
         ...,
         [ 0.7322, -0.4505, -0.6904,  ..., -0.3836, -0.4953,  0.2811],
         [ 0.2924, -0.6136,  0.3989,  ...,  0.4278, -0.2711,  0.3058],
         [ 0.0377, -0.0969, -0.9273,  ...,  0.1638, -1.2855,  0.6679]],

        ...,

        [[-0.1969, -1.5051, -1.3767,  ...,  1.1195, -0.7649,  0.5323],
         [-0.0550, -0.9106, -0.5583,  ...,  0.1010, -0.2751,  0.4032],
         [-0.6280, -0.2022, -1.4432,  ...,  0.1092, -1.3345, -0.2228],
         ...,
         [ 0.3484, -0.4029, -0.0144,  ..., -0.0148, -0.3531,  0.2674],
         [-0.0309, -0.0682, -0.4672,  ...,  0.3910, -0.5719,  0.4113],
         [ 0.0497, -0.6846,  0.1600,  ...,  0.0597, -0.0875,  0.5662]],

        [[-0.4545, -0.4550, -1.3403,  ...,  0.3671, -0.0207,  1.1279],
         [-0.8491,  0.1010, -1.6119,  ..., -0.9542, -0.1097, -0.3009],
         [-0.5766, -0.2980, -1.3961,  ..., -0.5207, -1.0379, -0.4663],
         ...,
         [-0.2351, -0.5466, -0.1876,  ..., -0.4689, -0.4997,  1.3023],
         [ 0.2977, -0.4944, -0.0177,  ...,  0.0620, -0.9200,  0.5246],
         [ 0.2774, -0.3244, -1.4380,  ...,  0.4241, -0.7401,  0.1541]],

        [[-1.0653, -1.2130, -0.8649,  ...,  0.8641, -0.7904,  1.1575],
         [-0.1522, -0.3210, -0.1566,  ...,  0.3399, -0.5980,  0.0027],
         [ 0.0889, -0.2111, -0.5925,  ..., -0.4679, -0.6410, -0.6118],
         ...,
         [ 0.3699, -0.7321, -0.5735,  ...,  0.2994, -0.2877,  0.4955],
         [ 0.3864, -0.0287,  0.0760,  ..., -0.1704, -0.1062,  0.2903],
         [ 0.1328,  0.2867, -0.1990,  ..., -0.6446, -0.2011,  0.6182]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.6332, -0.2699, -0.6400,  ..., -0.1168,  0.1317,  0.3723],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.1621,  0.7277, -0.8304,  ..., -0.4015, -0.0512, -0.1539],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7332, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.2170,  0.1728, -0.4144,  ..., -0.2859,  0.2553, -0.5757],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.6958, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-7.5439e-01, -4.3055e-01, -4.9393e-01,  ..., -9.2303e-02,
          -4.8730e-01,  7.2510e-01],
         [-9.4153e-01, -1.0108e+00, -3.1109e-01,  ..., -4.5091e-02,
          -2.7981e-01,  7.8753e-01],
         [ 3.1914e-02, -4.6165e-01, -3.2781e-01,  ..., -9.2262e-01,
          -3.8467e-01, -1.0849e-01],
         ...,
         [-1.8588e-01, -5.4789e-01, -4.5540e-01,  ..., -1.4188e-01,
           2.7720e-03,  4.7883e-01],
         [ 2.9502e-01, -2.2816e-01, -2.1183e-01,  ..., -3.4202e-01,
          -6.7699e-01,  5.7763e-01],
         [ 6.1267e-01,  5.6608e-01, -5.3894e-01,  ...,  1.6645e-02,
          -8.6420e-01,  3.8575e-01]],

        [[-1.1831e+00, -4.9614e-01, -1.3328e+00,  ..., -2.2881e-01,
          -6.2368e-01,  3.6930e-01],
         [-9.3619e-01, -4.5761e-01, -1.8509e-01,  ..., -1.1628e+00,
          -1.3395e+00, -4.9586e-01],
         [ 4.6760e-01, -1.8519e-01, -7.8034e-01,  ...,  2.0249e-01,
          -5.4500e-01,  1.9445e-01],
         ...,
         [-4.7560e-01, -2.0146e-01,  6.8124e-01,  ..., -3.1835e-01,
          -1.1397e+00,  9.6330e-01],
         [-2.1420e-01, -1.3353e+00, -1.5598e-01,  ..., -3.6954e-02,
          -5.8748e-01,  6.4681e-01],
         [-1.6780e-01, -1.5111e+00, -4.2193e-01,  ...,  1.6464e-01,
          -1.4834e+00,  4.1981e-01]],

        [[-1.3551e+00, -2.2303e-01, -6.5180e-01,  ..., -3.0235e-01,
           2.3292e-02,  6.7783e-02],
         [-8.3549e-01,  8.6713e-02, -4.4503e-01,  ...,  1.0189e-01,
          -4.9395e-01,  1.4137e-01],
         [ 3.0952e-01, -9.1928e-02, -4.0150e-01,  ..., -8.7283e-01,
          -1.6420e+00, -4.8504e-01],
         ...,
         [ 4.0701e-01, -3.1201e-01, -3.3850e-01,  ...,  6.7957e-01,
           1.0028e-01, -6.2235e-02],
         [-2.5664e-01, -7.1950e-01,  1.8386e-01,  ..., -4.7939e-01,
          -1.0771e+00, -4.5119e-01],
         [-4.4057e-02, -2.0461e-01, -5.2849e-01,  ...,  4.5974e-01,
          -1.7071e+00,  1.0083e+00]],

        ...,

        [[-1.5618e+00,  9.9053e-02, -5.2698e-01,  ...,  3.7605e-01,
           6.7418e-01,  1.1397e+00],
         [-8.6546e-01,  1.6217e-01, -2.5734e-02,  ..., -2.9404e-01,
          -7.9456e-01, -2.9193e-01],
         [ 3.3439e-01, -1.8892e-01, -7.5006e-01,  ..., -7.3192e-01,
          -1.3327e+00,  3.1665e-01],
         ...,
         [ 5.5487e-01, -1.0582e+00,  1.0838e-01,  ..., -5.0202e-02,
          -5.7177e-01,  6.8092e-01],
         [-1.4364e-01,  1.8621e-01, -5.9922e-01,  ..., -6.5032e-03,
          -5.1329e-01,  3.0639e-01],
         [-1.7226e-01, -4.8962e-01, -6.9394e-01,  ...,  3.0441e-01,
          -8.8782e-01,  3.8251e-01]],

        [[-1.3705e+00, -1.1414e-01, -1.6666e+00,  ...,  4.5035e-01,
          -3.6051e-01,  6.6714e-01],
         [-5.1060e-01, -5.6108e-01, -5.5780e-01,  ...,  2.3221e-01,
          -1.4162e-01,  1.6440e-02],
         [ 2.1940e-01, -1.0585e+00, -8.7184e-01,  ..., -1.4057e-01,
          -1.2583e+00,  2.2911e-01],
         ...,
         [-3.2403e-01, -4.5316e-01, -1.0162e+00,  ..., -2.9171e-01,
          -2.9584e-01, -1.0972e-01],
         [ 8.2572e-02, -4.3595e-01,  5.4633e-01,  ..., -8.0831e-05,
          -1.0396e+00,  9.5773e-01],
         [-1.0142e-01,  4.3148e-02, -8.5983e-01,  ..., -9.5620e-02,
          -1.3086e-01,  6.4366e-02]],

        [[-1.2066e+00, -6.5471e-01, -5.8071e-01,  ..., -2.3561e-01,
          -5.3742e-01,  5.2296e-01],
         [-1.3638e+00,  6.7455e-01, -8.6901e-01,  ...,  1.5640e-01,
          -1.2145e+00,  2.7977e-02],
         [-5.9084e-01, -2.9006e-01, -1.0707e-01,  ..., -4.5021e-01,
          -2.9104e-01, -7.8854e-01],
         ...,
         [-1.6831e-01, -4.0298e-01, -1.1476e-01,  ...,  4.5145e-01,
          -4.1267e-01, -6.9853e-01],
         [ 1.1052e-01, -3.1462e-01, -1.4316e-01,  ...,  3.6737e-02,
          -1.2098e+00,  4.3990e-01],
         [ 2.6762e-01, -1.7689e-01, -9.1904e-01,  ..., -2.2973e-01,
          -1.1647e+00,  6.6903e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0813,  0.2281, -0.6496,  ...,  0.3163,  0.1023,  0.0329],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 1.0997,  0.4624,  0.0484,  ...,  0.0742,  0.4910, -0.5270],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7169, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 1.1976,  0.6263, -0.7126,  ...,  0.0500,  0.9180,  0.0043],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.7102, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8204, -1.6233, -1.1199,  ...,  0.2094, -0.7266,  1.5796],
         [-1.0991, -1.2385, -0.5485,  ..., -0.7515, -0.5122,  0.5455],
         [-0.3164, -1.0032, -0.9085,  ..., -0.2020, -1.6123,  0.3881],
         ...,
         [-0.3766, -2.3278, -0.4880,  ..., -0.1232, -0.4194,  0.5680],
         [ 0.0621, -0.4358, -0.0719,  ..., -0.2487, -0.3058, -0.2423],
         [-0.1349,  0.3917, -0.0182,  ..., -0.6421, -0.4537,  0.1213]],

        [[-0.5603, -1.0958, -1.0001,  ...,  0.8488, -0.4787,  0.3349],
         [-0.6658, -1.0384, -0.2416,  ..., -1.5113, -0.1837, -0.2366],
         [-1.0508, -0.8101, -1.3569,  ..., -0.5701, -0.5795,  1.4221],
         ...,
         [ 0.1735, -1.1564, -0.3661,  ..., -0.8878,  0.3239,  0.4871],
         [ 0.3618, -0.7278,  0.1527,  ..., -0.2735, -0.5676, -0.6339],
         [-0.0492, -1.3775, -0.7955,  ..., -0.1742, -1.0576,  1.0237]],

        [[-1.3517, -0.1016, -1.3384,  ...,  0.9317, -0.2013, -0.2125],
         [-0.7711, -0.4067,  0.4773,  ..., -0.1069, -1.0259, -0.5162],
         [ 0.3955, -0.1156, -0.6876,  ...,  0.5587, -1.1634,  0.1334],
         ...,
         [ 0.4022, -1.3858, -0.6476,  ..., -0.1816, -0.0337,  0.6423],
         [ 0.0907, -0.5523,  0.2304,  ..., -0.0974, -0.9972,  0.2227],
         [ 0.3684, -0.7283, -0.8752,  ...,  0.6990, -0.3567,  1.5599]],

        ...,

        [[ 0.1339, -0.8704, -0.5530,  ..., -0.0145, -1.1591,  0.4575],
         [-0.9551, -0.9624, -0.5538,  ..., -0.2465, -0.8836,  0.7418],
         [-0.5745, -0.4062, -1.0260,  ..., -0.1112, -1.5389,  0.3257],
         ...,
         [ 0.5478, -0.7032,  0.5241,  ...,  0.2150, -0.1912,  0.1937],
         [-0.3117, -0.1308, -0.2775,  ..., -0.4038, -1.1610,  0.7919],
         [ 0.1486,  0.8121, -0.2261,  ..., -1.1117, -0.0990, -0.3733]],

        [[-0.6508, -0.9465, -0.7101,  ..., -0.3369, -1.0517,  0.9177],
         [-0.5542, -0.3153, -0.2576,  ..., -0.2673, -0.5140, -0.0372],
         [-0.3158, -0.2918, -1.6348,  ..., -0.5871, -1.0079, -0.0393],
         ...,
         [-0.0624, -0.7716, -1.2131,  ..., -0.6367, -0.0719,  0.5029],
         [ 0.8303, -0.1825,  0.6160,  ..., -0.1992, -1.2244,  0.3496],
         [-0.3157,  0.1744, -0.8604,  ...,  0.5789, -1.4838,  0.9655]],

        [[-0.8899, -1.5240, -1.2542,  ..., -0.2073, -0.1104,  0.9161],
         [-0.7413, -0.3823, -0.4737,  ...,  0.3667, -0.3526, -0.2575],
         [-0.8555, -0.5540, -0.5933,  ..., -0.8552, -1.2389,  0.0734],
         ...,
         [ 0.8314, -1.5711,  0.0743,  ..., -0.0919, -0.0467,  0.7559],
         [-0.0990,  0.0980, -0.2485,  ...,  0.2166, -1.2573,  0.1446],
         [ 0.4121, -0.5643, -0.8117,  ..., -0.2468, -0.4357,  0.4072]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.6429,  1.0084, -0.4165,  ...,  0.5837,  0.8824, -0.4564],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.2395,  0.0290, -0.2723,  ..., -0.3532,  0.6806,  0.2978],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6969, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.6215,  0.5015, -0.7071,  ...,  0.0233, -0.3795, -0.7112],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.7210, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.0851, -1.2522, -1.9529,  ...,  0.0087, -0.5837,  1.2920],
         [-1.0355, -0.5220, -0.6566,  ..., -0.7582, -0.8024, -0.1266],
         [-0.4713, -0.4959, -0.7977,  ..., -0.5456, -0.8958,  0.4811],
         ...,
         [-0.2210, -0.4092, -0.1387,  ...,  0.2604, -0.3377,  0.0466],
         [ 0.2683, -0.9884, -0.4425,  ..., -0.2390, -1.1949,  0.9269],
         [-0.7479, -0.2600, -0.2782,  ..., -0.6736, -0.8629,  0.2181]],

        [[-0.9178, -0.8132, -0.8338,  ...,  0.0850, -0.1271,  0.9973],
         [-0.5739, -1.4380, -0.1088,  ..., -0.6557, -0.7374,  0.3506],
         [-0.5770, -0.6879, -1.7938,  ...,  0.5809, -0.9825,  0.4574],
         ...,
         [-0.1841, -0.8490, -1.1667,  ..., -0.1852,  0.4708,  0.2933],
         [-0.5359, -1.3956,  0.1078,  ..., -0.1757, -0.5727,  1.0166],
         [-0.2952, -0.4523, -0.6203,  ..., -0.2368, -1.1384,  0.5135]],

        [[-1.3069, -0.8247, -1.2793,  ...,  1.2281,  0.0837,  1.0524],
         [-0.7175, -0.0587, -0.0477,  ...,  0.6038, -0.3826, -0.3229],
         [-0.3332, -0.4370, -1.3865,  ..., -0.5622, -0.2021, -0.6070],
         ...,
         [-0.2445, -0.2676, -0.7832,  ...,  0.4779,  0.6526,  0.2360],
         [-0.3378, -1.0924, -0.5756,  ...,  0.1439, -0.2328,  1.1298],
         [ 0.2167, -0.5685, -1.3419,  ..., -0.2964, -0.0483,  0.7185]],

        ...,

        [[-1.2942, -0.1313, -1.1325,  ..., -0.2807,  0.1590,  0.1379],
         [-0.8595, -0.1520, -0.1974,  ..., -0.2649, -0.8430,  0.2706],
         [-0.6326,  0.6127, -0.9787,  ..., -0.0731, -0.7055,  0.4670],
         ...,
         [ 0.3316, -1.1053, -0.3867,  ..., -0.0491, -0.3315,  1.0177],
         [-0.3661, -0.0693, -0.3854,  ...,  0.2358, -0.4906,  0.3967],
         [ 0.0202, -0.2543, -0.3241,  ..., -0.6077, -1.0784,  0.6259]],

        [[-0.6142,  0.3016, -0.4901,  ...,  0.1250, -0.0481,  0.5072],
         [-1.0309,  0.3051, -0.6175,  ...,  0.5174, -0.5630,  0.3643],
         [-0.6856, -0.7781, -0.8189,  ..., -0.6986, -0.9153,  0.6940],
         ...,
         [-0.6787, -0.6223, -0.6634,  ...,  0.3810, -0.0329,  0.4452],
         [-0.8064, -1.0388, -0.4435,  ..., -0.0352, -1.1416,  0.5083],
         [-0.1321, -1.0702, -0.3499,  ..., -0.9020, -1.0909,  0.6058]],

        [[-0.7347, -1.3451, -1.1847,  ...,  0.0703, -0.5812,  0.8685],
         [-0.8197, -0.7286, -1.1123,  ...,  0.7056, -0.9628,  0.9090],
         [ 0.2101,  0.3791, -1.2097,  ..., -0.0266, -1.3984, -0.1997],
         ...,
         [-0.2326, -0.2610, -0.4433,  ..., -0.1215, -0.5433,  1.0285],
         [ 0.4768, -0.4596, -0.1491,  ..., -0.6841, -1.3285,  0.3568],
         [-0.1252, -0.1149, -1.0019,  ..., -0.0886, -1.5679,  0.2900]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.7189, -0.2648, -0.0753,  ..., -0.3161, -0.4614, -0.2142],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2445, -0.2098, -0.7626,  ...,  0.1207, -0.1892, -0.7781],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6814, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.3831, -0.4251, -0.5104,  ...,  0.1652, -0.5045,  0.1706],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.7461, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-4.9187e-01, -1.1708e+00, -1.5288e+00,  ...,  2.8539e-01,
          -3.5920e-01,  7.7491e-01],
         [-7.7790e-01,  6.5116e-01, -2.8866e-01,  ..., -3.2467e-01,
          -6.8826e-01, -1.0373e-01],
         [-7.7307e-01, -7.2127e-01, -1.4029e+00,  ..., -5.8699e-01,
           9.4641e-02,  4.7421e-01],
         ...,
         [ 1.9119e-01, -8.2285e-01, -9.9730e-01,  ..., -2.1322e-01,
          -8.2077e-01,  9.8153e-01],
         [-7.2838e-01,  1.1341e-01, -7.6608e-02,  ...,  3.4883e-01,
          -3.7975e-01,  5.8244e-01],
         [-5.0187e-01, -5.0415e-01, -5.0234e-01,  ..., -3.1304e-01,
          -7.2980e-01,  1.1979e+00]],

        [[-1.6451e+00, -1.3765e+00, -1.6726e+00,  ...,  2.2720e-01,
          -7.5224e-01,  1.1266e+00],
         [-1.6956e+00,  2.6360e-01,  1.3703e-01,  ..., -4.2360e-01,
          -5.2407e-01, -2.2399e-01],
         [-1.0103e+00, -4.0454e-01, -1.9236e+00,  ..., -3.6797e-01,
          -1.1149e+00,  6.1440e-01],
         ...,
         [ 1.4483e+00, -1.0852e+00, -6.9763e-01,  ..., -7.3023e-01,
           3.3661e-02,  7.3963e-01],
         [-5.2857e-01, -1.1143e+00, -3.1531e-01,  ..., -6.2748e-01,
          -1.6024e+00,  8.9453e-01],
         [-6.6234e-01, -7.6816e-01, -5.0053e-01,  ..., -2.9797e-01,
          -6.6188e-01,  3.2065e-01]],

        [[-1.0776e+00, -5.2907e-01, -2.1402e+00,  ...,  5.2586e-01,
          -8.6479e-01,  6.2263e-01],
         [-1.2111e+00, -4.4510e-01, -5.8150e-01,  ...,  1.1065e-01,
          -3.8668e-01,  1.6502e+00],
         [-4.2377e-01, -9.0343e-01, -1.4251e+00,  ...,  1.0931e-01,
          -8.5413e-01,  4.2389e-01],
         ...,
         [ 2.3526e-01, -3.1301e-01, -1.4148e+00,  ...,  3.1593e-01,
          -3.3062e-01,  1.9704e-01],
         [-2.5320e-01,  1.2871e-01, -1.2934e-01,  ...,  2.0641e-01,
          -3.7313e-01,  6.9248e-01],
         [-1.1680e-01, -7.1842e-01, -6.7457e-01,  ..., -7.9840e-01,
          -1.2027e+00,  1.0485e+00]],

        ...,

        [[-1.2374e+00, -1.7074e-01, -1.1225e+00,  ...,  4.3382e-01,
           2.9604e-01,  5.4142e-01],
         [-2.3916e-01, -1.0926e+00, -3.8198e-01,  ..., -4.3628e-01,
          -2.3642e-01,  4.2552e-01],
         [ 2.2519e-01, -7.4605e-01, -1.5529e+00,  ..., -4.8419e-01,
          -1.2964e+00,  1.0249e+00],
         ...,
         [-1.6063e-03, -8.3564e-01, -6.0519e-01,  ...,  2.2215e-01,
          -1.4654e-01,  8.6116e-01],
         [ 2.7436e-02, -8.1897e-01,  3.0207e-01,  ...,  1.7550e-02,
          -7.2033e-01,  1.1445e+00],
         [ 2.1666e-02, -6.6085e-01, -7.9043e-01,  ...,  8.3287e-02,
          -1.3815e+00,  8.3248e-01]],

        [[-9.7999e-01, -6.4852e-01, -1.3807e+00,  ...,  5.8146e-01,
          -5.1199e-01,  1.3385e+00],
         [-5.8264e-01, -3.8222e-01, -4.9925e-01,  ..., -1.6415e-01,
          -1.0049e+00,  3.3862e-01],
         [ 1.4902e-01, -3.3988e-01, -1.3587e+00,  ..., -7.5508e-02,
          -8.6924e-01, -5.7109e-01],
         ...,
         [-2.2204e-01, -5.1607e-01, -1.0708e+00,  ...,  1.2231e-01,
          -7.9235e-01,  3.8354e-01],
         [-2.2958e-01, -6.5184e-01, -8.6790e-01,  ...,  3.6752e-01,
          -3.7234e-01, -5.3648e-01],
         [-8.7124e-01,  2.9544e-01, -9.2251e-01,  ...,  9.0745e-02,
          -6.1227e-01,  5.6919e-01]],

        [[-1.0305e+00, -4.2068e-01, -1.5400e+00,  ..., -6.0865e-01,
          -9.2478e-01,  6.3396e-01],
         [-7.2864e-01, -4.1018e-01, -6.4677e-01,  ..., -3.7318e-01,
          -3.4082e-01,  8.5930e-01],
         [ 5.6671e-01, -5.5790e-01, -1.2639e+00,  ...,  1.2842e-01,
          -1.5097e+00,  5.5871e-01],
         ...,
         [-4.4422e-01, -5.1365e-01, -6.8234e-01,  ...,  1.5191e-02,
          -4.7469e-01,  1.0747e+00],
         [ 9.8528e-02, -1.1526e+00, -6.3257e-01,  ...,  3.5937e-01,
          -8.8645e-01,  9.3543e-01],
         [-4.0067e-01, -2.1306e-01, -6.2023e-01,  ...,  3.2015e-01,
          -1.5395e+00,  9.4278e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.2839,  0.2308, -0.0745,  ...,  0.2409,  0.7603, -0.1479],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0713,  0.0371, -0.4028,  ..., -0.4348, -0.1797,  0.0391],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6714, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.2971, -0.4050, -0.9458,  ..., -0.0617,  0.3540, -0.1638],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.7628, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.2534, -1.0068, -1.3454,  ..., -0.1663, -0.3132,  1.0525],
         [-1.0402,  0.0884, -0.2600,  ..., -0.2509, -1.0972,  0.3293],
         [-1.1352, -0.4224, -1.2867,  ..., -0.4943, -0.8682,  0.4883],
         ...,
         [ 0.6515, -0.7142, -0.5847,  ..., -0.5390, -0.1958,  0.6804],
         [-0.2139, -1.1556, -0.1785,  ...,  0.4723, -0.5565,  0.7067],
         [ 0.0541, -0.9197, -0.0080,  ..., -0.6021, -0.5825,  0.5619]],

        [[-1.2847,  0.1782, -1.4337,  ..., -0.1999, -0.1818,  0.5182],
         [-0.5741, -0.7362, -1.5998,  ...,  0.5553, -0.5906,  0.3967],
         [ 0.2856,  0.4473, -0.6431,  ..., -0.7733, -0.6807, -0.4289],
         ...,
         [-0.2694, -0.4502, -1.5973,  ...,  0.3101,  0.1533,  0.5420],
         [-0.4299, -0.6257, -0.2284,  ..., -0.5444, -1.0977,  1.3379],
         [ 0.0068, -0.5143, -0.9439,  ..., -0.7568, -1.2003,  0.1212]],

        [[-0.8968,  0.0688, -1.4756,  ...,  1.1225, -0.8097,  1.1342],
         [-0.8852, -0.1788, -0.6501,  ...,  0.6263, -0.3198, -0.2972],
         [-0.4279, -0.7422, -1.6765,  ..., -0.1400, -0.8411, -0.2206],
         ...,
         [ 0.4551, -1.4732, -0.0626,  ..., -0.2497, -0.1768,  0.3662],
         [-0.1338, -0.2189, -0.5276,  ..., -0.0788, -1.4359,  1.0618],
         [-0.3702, -0.8928, -0.9325,  ...,  0.1508, -1.3012,  1.0584]],

        ...,

        [[-1.1845, -0.3248, -1.7419,  ...,  0.7015,  0.0609, -0.2428],
         [-0.7622, -0.5123, -0.2254,  ..., -0.5380, -0.1344,  0.2296],
         [-0.1902, -0.5366, -1.5921,  ...,  0.1099, -0.3221, -0.2189],
         ...,
         [ 0.2610, -1.1923, -0.5456,  ..., -0.7831, -0.4911,  1.2406],
         [ 0.2070, -0.8273, -0.1369,  ..., -0.5226, -1.0430,  0.9329],
         [ 0.0520, -1.0656, -1.2248,  ...,  0.4099, -0.1919,  0.8241]],

        [[-0.9117,  0.0024, -1.2624,  ...,  0.2094, -0.3161,  1.0182],
         [-0.2780, -0.1468,  0.2541,  ..., -0.0387, -0.6109,  0.3270],
         [-0.2469, -0.5227, -0.7604,  ...,  0.0817, -0.8396, -0.3078],
         ...,
         [ 0.0519, -0.6372, -0.5768,  ..., -0.9316, -0.3099,  0.1659],
         [ 0.3997, -0.4038, -0.0746,  ...,  0.0409, -0.5734,  0.8032],
         [ 0.3054,  0.5082, -0.7381,  ...,  0.2038, -0.9976,  0.3445]],

        [[-0.7657, -0.5736, -1.1190,  ...,  0.8209, -0.6001,  1.1279],
         [-0.7024, -0.5871,  0.4362,  ...,  0.0437, -0.3135,  0.4984],
         [-0.1939,  0.3858, -0.9158,  ..., -0.1089, -0.6452,  0.0897],
         ...,
         [-0.1053, -0.3219,  0.4690,  ..., -0.2009, -0.5926,  0.9146],
         [-0.2367, -0.8972, -0.2284,  ..., -0.0034, -0.4675,  0.5963],
         [ 0.5016, -0.2758, -0.2523,  ...,  0.6614, -0.3201,  0.9854]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.9967,  0.7531, -0.0147,  ...,  0.8810,  0.6223,  0.0522],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.6938,  0.5275, -0.7249,  ..., -0.2591,  0.2629, -0.8097],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6576, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.2364, -0.3905, -0.9139,  ...,  0.1764, -0.1295, -0.5109],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.7873, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-9.6109e-01, -8.3889e-01, -1.8739e+00,  ...,  4.8603e-01,
          -6.5226e-01,  9.7722e-01],
         [-4.7007e-01, -1.2667e-01, -3.1248e-01,  ..., -1.1616e+00,
          -4.8456e-01, -1.7741e-01],
         [-8.3542e-01, -3.3302e-01, -1.6241e+00,  ...,  3.4344e-01,
          -5.9978e-01,  8.2294e-01],
         ...,
         [ 7.2119e-01, -7.8063e-01, -1.7822e-01,  ..., -1.0358e+00,
          -4.7158e-01,  1.3886e+00],
         [ 1.9110e-01, -3.8444e-01, -1.4878e-01,  ..., -8.9783e-01,
          -5.1097e-01,  7.2918e-02],
         [ 8.6145e-02, -1.8953e+00, -8.4707e-01,  ..., -9.7049e-03,
          -1.0942e+00,  1.2033e+00]],

        [[-1.1572e+00, -1.7024e-01, -1.1706e+00,  ...,  1.1743e+00,
           3.8771e-01,  1.7843e+00],
         [-8.9938e-01,  2.7788e-01, -9.2690e-01,  ...,  4.3981e-02,
          -1.2354e+00, -4.9130e-01],
         [-4.1423e-01, -6.2503e-01, -1.5049e+00,  ...,  2.6374e-01,
          -6.2792e-01,  3.6626e-01],
         ...,
         [-2.8358e-01, -4.8380e-01, -2.4331e-01,  ...,  7.5176e-02,
          -1.2733e+00,  8.5587e-01],
         [-5.4284e-01, -1.2832e-01, -4.9413e-01,  ...,  5.1418e-01,
          -8.0354e-01,  7.7344e-01],
         [-3.8458e-02, -6.5602e-01, -6.4185e-01,  ...,  1.4402e-01,
          -1.5522e+00,  1.3076e+00]],

        [[-2.3067e-01, -2.8862e-01, -1.1141e+00,  ...,  3.1632e-01,
          -6.9855e-01,  5.6452e-01],
         [-6.3526e-01,  1.8367e-01, -8.6505e-01,  ...,  3.2714e-01,
          -6.1171e-01, -2.3522e-01],
         [-5.8468e-01, -5.5595e-01, -1.0284e+00,  ..., -5.0377e-01,
          -1.0364e+00,  5.6327e-01],
         ...,
         [-7.7550e-01,  1.6237e-01, -1.3450e+00,  ..., -3.5198e-01,
          -7.2918e-02,  1.2851e+00],
         [-1.0461e-01, -5.5825e-01, -4.3093e-01,  ..., -9.1448e-01,
          -2.0334e+00,  7.9269e-01],
         [ 4.4662e-01, -6.1638e-01, -9.3112e-01,  ...,  3.3333e-01,
          -1.1866e-03,  1.1749e+00]],

        ...,

        [[-9.4821e-01, -7.4867e-01, -1.1813e+00,  ...,  4.2024e-01,
          -1.2991e-01,  1.2550e+00],
         [-8.1600e-01, -6.7096e-02, -1.8575e-01,  ..., -1.2804e-01,
          -3.5530e-01,  2.9201e-01],
         [-3.8097e-01, -9.6339e-02, -1.6769e+00,  ..., -3.7164e-01,
          -3.8421e-01, -3.0220e-01],
         ...,
         [ 6.2052e-02, -1.3044e+00, -7.0869e-01,  ...,  3.7585e-01,
          -6.5043e-01,  7.6617e-01],
         [ 1.7307e-01, -1.1224e-01,  6.0788e-01,  ..., -3.0710e-01,
          -6.4148e-01, -8.0358e-01],
         [ 9.7010e-02, -1.1683e+00, -8.6634e-01,  ..., -6.5184e-01,
          -1.3756e-01,  1.1747e+00]],

        [[-1.1207e+00, -4.3256e-01, -1.4498e+00,  ..., -4.4147e-01,
          -6.3678e-01,  6.0212e-01],
         [-7.0034e-01, -4.5075e-01,  1.5407e-02,  ..., -3.6252e-01,
          -1.3028e+00, -1.2880e-01],
         [-5.5907e-01,  2.8779e-01, -7.5947e-01,  ...,  2.1811e-01,
          -6.4948e-01, -5.4031e-01],
         ...,
         [ 3.0568e-01, -5.3593e-01, -1.4051e+00,  ..., -5.4042e-01,
          -4.7907e-02,  1.4744e+00],
         [-3.1618e-01, -8.0519e-01, -4.1099e-01,  ..., -3.6256e-02,
          -3.2909e-01,  7.5968e-01],
         [-3.1904e-01,  1.6384e-02, -4.9099e-01,  ..., -1.1511e-01,
           1.1495e-02,  5.7957e-01]],

        [[-1.6955e+00, -6.6466e-01, -1.6681e+00,  ...,  3.8177e-01,
           1.4888e-01,  1.2849e+00],
         [-9.9719e-01, -8.0763e-01, -1.1945e+00,  ..., -3.1253e-01,
          -9.0581e-01,  9.5510e-01],
         [-5.7048e-02, -1.2699e+00, -1.4492e+00,  ..., -5.2570e-01,
          -2.5496e-01,  6.5651e-01],
         ...,
         [ 9.6323e-01, -8.4268e-01, -1.0600e+00,  ..., -1.0940e+00,
           1.3105e-02,  8.3974e-01],
         [-3.7017e-01, -6.2708e-01, -7.6513e-01,  ..., -3.9283e-02,
          -8.3785e-02,  1.3750e-01],
         [ 3.5081e-01, -4.7337e-01, -4.5531e-01,  ..., -9.1705e-01,
          -5.3382e-01,  7.8169e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.9863,  0.3866, -0.6985,  ...,  0.4062,  0.9577, -0.4841],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3184,  0.1451, -0.7988,  ...,  0.1558,  0.1901, -0.4714],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6458, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.0031, -0.0586, -0.5139,  ...,  0.3628, -0.4716,  0.0087],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8026, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        ...,

        [[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.2115e+00, -8.8835e-01, -1.8604e+00,  ...,  9.2867e-01,
          -5.0321e-02,  1.2098e+00],
         [-4.5301e-01, -9.2356e-01,  6.5540e-01,  ...,  1.9155e-01,
          -3.0623e-01,  1.5529e+00],
         [-4.2113e-01, -4.6876e-01, -1.3986e+00,  ..., -5.6711e-01,
          -1.3827e+00,  1.3212e+00],
         ...,
         [-3.8239e-01, -1.7909e-01, -1.1551e+00,  ..., -8.3090e-02,
           2.6672e-02,  8.5620e-02],
         [ 1.7685e-02, -1.0321e+00, -9.7919e-01,  ..., -3.1279e-01,
          -7.3793e-01, -1.6216e-01],
         [ 1.9480e-01, -1.0500e+00, -1.6059e-01,  ..., -4.5215e-01,
          -3.4254e-01,  9.6366e-01]],

        [[-1.4726e+00, -1.0676e+00, -1.1924e+00,  ..., -4.3689e-01,
           1.7208e-01,  1.3615e+00],
         [-8.4433e-01, -3.0694e-01, -7.3880e-01,  ..., -7.3011e-02,
          -1.0109e+00,  5.7498e-01],
         [-1.1261e+00, -4.6853e-01, -1.5608e+00,  ..., -6.3408e-01,
          -1.0296e+00,  7.7450e-01],
         ...,
         [ 2.1750e-01, -9.5231e-01, -7.2729e-01,  ..., -3.3961e-01,
          -1.3268e-01,  1.5908e+00],
         [ 1.2485e-01, -9.5711e-01,  1.3058e-01,  ..., -1.1401e+00,
          -1.2212e+00, -3.7987e-01],
         [-1.0416e+00, -5.0256e-01, -1.4637e+00,  ...,  1.5953e-01,
          -3.2493e-01,  1.2970e+00]],

        [[-7.8146e-01, -5.8898e-01, -6.3016e-01,  ..., -1.7402e-01,
           3.7777e-01,  3.0045e-01],
         [-2.4523e-01, -7.6196e-01, -9.8810e-01,  ...,  1.9982e-01,
          -7.3462e-01,  8.3201e-01],
         [-4.1910e-05, -5.9545e-02, -2.3691e+00,  ..., -3.2518e-01,
          -2.3960e-01, -1.0755e-01],
         ...,
         [-7.4155e-01, -1.2240e-01, -1.6088e+00,  ...,  6.7758e-01,
           1.1496e-01,  6.8114e-01],
         [-1.2756e-01, -3.0637e-01, -2.9095e-01,  ...,  1.9873e-01,
           5.7539e-02,  7.1366e-01],
         [ 1.7499e-01, -1.1375e+00, -3.9874e-01,  ..., -1.1776e+00,
          -2.4633e-01,  1.0165e+00]],

        ...,

        [[-1.4460e+00, -4.0490e-01, -1.3824e+00,  ...,  9.7384e-01,
           2.0900e-01,  8.3541e-01],
         [-9.3110e-01, -8.2991e-02, -6.9978e-02,  ..., -1.7614e-01,
          -2.2406e-01,  3.8661e-01],
         [-4.7041e-01,  3.8815e-01, -1.5868e-01,  ..., -5.0090e-01,
          -7.1325e-01,  1.3452e-01],
         ...,
         [-9.2654e-03, -1.1742e+00, -1.1364e+00,  ..., -3.6173e-01,
          -6.6411e-01,  1.6223e+00],
         [-2.4267e-01, -5.8943e-01, -5.8469e-01,  ...,  3.5298e-01,
          -5.2456e-01,  2.1600e+00],
         [-2.2996e-01, -2.5458e-01, -7.8827e-01,  ...,  2.6031e-01,
          -1.2364e+00,  1.4550e+00]],

        [[-9.3433e-02, -8.4303e-01, -7.0146e-01,  ...,  3.7263e-01,
          -4.0999e-01,  9.3722e-01],
         [-7.9958e-01, -1.1582e+00, -1.5791e-01,  ..., -7.9783e-01,
          -3.1277e-01,  8.0489e-01],
         [-7.5473e-01, -5.0907e-02, -1.6830e+00,  ..., -8.1467e-01,
          -8.1159e-01, -2.5362e-02],
         ...,
         [-2.6391e-01, -2.4433e-01, -9.0107e-01,  ..., -7.0988e-02,
          -9.3122e-02,  1.0644e+00],
         [ 1.2615e-01, -7.6334e-01, -2.2631e-01,  ..., -9.0381e-01,
          -1.6058e+00,  1.5527e+00],
         [ 1.4306e-01, -6.2943e-01, -7.8434e-01,  ...,  1.4242e-01,
          -1.0612e+00,  1.1597e+00]],

        [[-9.3328e-01, -5.9611e-01, -1.1583e+00,  ..., -5.6785e-02,
          -2.8515e-01,  1.4555e+00],
         [-1.1755e+00, -1.8650e-01, -7.0101e-01,  ..., -5.5688e-01,
           1.3541e-01,  6.2860e-02],
         [-5.5269e-01, -3.0284e-01, -1.9974e+00,  ..., -1.4627e-01,
          -8.9477e-01,  8.6991e-01],
         ...,
         [-2.3501e-01, -7.4879e-01, -1.2737e+00,  ..., -2.5006e-01,
          -4.4591e-01,  6.1176e-01],
         [-2.2246e-02, -2.1104e-01,  2.4225e-01,  ..., -3.6264e-01,
          -2.5638e-01,  5.5699e-01],
         [ 2.3094e-01, -1.6541e+00, -9.3034e-01,  ..., -7.0347e-01,
          -1.3821e-01,  8.1178e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.5835, -0.2236, -1.0128,  ...,  0.8089,  0.7435, -0.5087],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.1231, -0.1285, -0.6640,  ...,  0.0485,  0.1080, -1.3549],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6366, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.1828, -0.2753, -0.8792,  ..., -0.3646,  0.4294, -1.7021],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8164, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-7.0608e-01, -1.2464e-01, -7.0439e-01,  ...,  4.4019e-01,
           6.3997e-01,  3.1977e-01],
         [-4.8333e-01, -8.9048e-01, -1.0324e+00,  ..., -2.5031e-01,
           4.1500e-01,  4.7746e-01],
         [-4.0996e-02, -2.9421e-01, -1.5689e+00,  ..., -5.0927e-01,
           2.1202e-02,  2.2528e-01],
         ...,
         [-3.2597e-01, -1.3843e-01, -7.7034e-01,  ..., -9.4901e-02,
          -2.1619e-01,  1.1614e+00],
         [ 5.1064e-01, -6.3608e-01, -7.1766e-02,  ..., -1.1467e+00,
          -9.2698e-01,  5.9622e-01],
         [-7.2353e-02, -8.9983e-01, -1.5224e+00,  ...,  2.3448e-01,
          -8.8657e-01,  1.5334e+00]],

        [[-1.4839e+00, -2.1372e-01, -1.8422e+00,  ...,  3.0861e-01,
           9.6356e-01,  7.2012e-01],
         [-1.0327e+00,  3.7664e-01, -3.1939e-01,  ..., -1.2706e-01,
          -7.8344e-01, -2.0279e-01],
         [-8.7158e-01, -5.3788e-01, -9.2835e-01,  ..., -4.9939e-01,
          -6.1506e-01,  9.0534e-01],
         ...,
         [-5.6279e-01, -3.8680e-01, -8.0178e-01,  ..., -4.9007e-02,
           3.3414e-01,  9.3572e-01],
         [-4.2167e-01, -1.0078e-01,  2.9355e-01,  ..., -1.2337e+00,
          -1.2951e+00,  8.5504e-01],
         [-3.7488e-01, -1.0723e+00, -1.1945e+00,  ...,  2.6581e-01,
          -3.7909e-01,  1.5805e+00]],

        [[-7.8204e-01, -1.3584e+00, -1.3430e+00,  ...,  4.9696e-01,
          -7.5792e-01,  1.7345e+00],
         [-9.1247e-01,  1.9346e-03,  8.3100e-02,  ...,  1.9560e-01,
          -8.9121e-01,  8.1607e-02],
         [-7.8663e-01, -7.0416e-01, -9.5549e-01,  ..., -1.0958e+00,
          -5.4884e-01, -1.2525e-01],
         ...,
         [-1.4499e-01, -3.2913e-01, -6.4883e-01,  ..., -3.2533e-01,
           4.4532e-01,  9.5270e-01],
         [-3.7669e-01, -6.4910e-01, -4.9310e-01,  ..., -1.4738e-01,
          -5.6383e-02,  1.0072e+00],
         [ 1.8058e-01, -5.2923e-01, -2.3601e-01,  ..., -6.9484e-02,
           5.8791e-02,  7.8766e-01]],

        ...,

        [[-1.4438e+00, -3.7086e-01, -1.2432e+00,  ...,  4.2915e-01,
           4.5095e-01,  9.9582e-01],
         [-1.1282e+00, -2.8878e-01,  2.9721e-01,  ..., -9.4456e-01,
           1.6141e-01, -2.3733e-01],
         [-9.7120e-01, -9.8404e-01, -1.2680e+00,  ..., -4.5706e-01,
          -1.1832e+00,  1.0545e+00],
         ...,
         [ 2.3786e-01, -6.4875e-01, -7.1313e-01,  ...,  8.0787e-01,
           1.0027e-01,  5.1029e-01],
         [ 4.4923e-02, -3.9843e-01,  8.0414e-01,  ..., -4.6320e-01,
          -8.1383e-01,  1.6139e-01],
         [-4.4995e-01, -1.8931e-01, -4.6835e-01,  ..., -6.2653e-01,
          -1.2849e+00,  6.8286e-01]],

        [[-7.7363e-01, -1.3493e+00, -1.7425e+00,  ..., -2.1759e-01,
           2.5917e-02,  8.0488e-01],
         [-2.8040e-01, -1.7409e-01, -4.1287e-01,  ...,  1.5676e-01,
          -3.9790e-01,  9.4949e-01],
         [-7.4748e-01, -3.0255e-01, -1.9528e+00,  ...,  1.4397e-01,
          -4.7982e-02,  2.6022e-01],
         ...,
         [ 5.1261e-02, -7.0311e-03, -9.8928e-01,  ..., -5.0909e-01,
           4.6158e-01, -1.0997e-01],
         [-2.0680e-02, -4.6490e-01,  3.3569e-01,  ..., -4.5636e-01,
          -1.3688e+00,  2.6543e-01],
         [-2.6936e-01, -5.6522e-01, -4.6726e-01,  ..., -8.3881e-02,
          -1.5728e+00,  1.4157e+00]],

        [[-9.3349e-01, -4.9807e-01, -5.2500e-01,  ...,  8.4195e-02,
          -7.4160e-01,  1.1399e+00],
         [-3.3927e-01, -4.6058e-01, -8.3796e-01,  ...,  6.6678e-02,
          -3.5619e-01,  4.4192e-01],
         [-7.1382e-01, -1.2294e+00, -1.3176e+00,  ..., -1.1074e+00,
          -1.1483e+00,  8.0859e-01],
         ...,
         [ 1.9639e-01, -5.3329e-01, -8.3239e-01,  ..., -6.8858e-01,
          -3.3090e-02,  1.0328e+00],
         [-2.4559e-01, -9.2048e-01, -8.0445e-01,  ..., -5.0257e-01,
          -4.8004e-01,  1.3088e+00],
         [-8.3944e-02, -2.8153e-01, -8.2836e-01,  ...,  2.3933e-01,
          -6.7640e-01,  8.6154e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 1.1133, -0.1558,  0.1180,  ...,  1.0533,  0.1234, -0.2198],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0171, -0.6832, -0.4458,  ...,  0.6615, -0.3945, -0.4305],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6321, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.0479,  0.2216, -0.8352,  ...,  0.0934, -0.4618, -1.1671],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8234, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8797, -0.1476, -1.4590,  ...,  0.4595,  0.4281,  0.3852],
         [-1.0487, -0.0415, -0.1743,  ..., -0.5601, -0.7653,  1.6220],
         [-0.0702,  0.1110, -1.9731,  ..., -0.2956, -0.4759,  0.2779],
         ...,
         [ 0.2061, -0.1944, -0.2342,  ...,  0.3865,  0.2648,  1.0466],
         [ 0.5123, -0.0410, -0.3997,  ...,  0.5319, -0.1721,  0.0260],
         [-0.1763, -0.1103, -1.3233,  ...,  0.4286, -1.0319,  1.5109]],

        [[-0.8024, -0.1335, -0.7037,  ..., -0.1797,  0.0575,  0.4462],
         [-1.3642,  0.0086, -0.7234,  ...,  0.0507, -0.3995,  0.7671],
         [-0.6113, -0.4193, -2.1822,  ..., -0.3807, -0.4874,  1.1964],
         ...,
         [-0.7305, -0.2645, -1.2442,  ...,  0.4466,  0.0276,  0.5878],
         [-0.2357, -1.2518, -0.4476,  ...,  0.0640, -0.9546,  2.1616],
         [ 0.1635, -0.3007, -0.3037,  ..., -0.5874, -0.0777,  1.0339]],

        [[-1.2603, -0.3364, -1.5531,  ..., -0.0426,  0.4852,  0.4816],
         [-1.3174, -0.5751, -0.0651,  ...,  0.0851, -0.3528,  0.5991],
         [-1.0139,  0.0693, -1.4925,  ..., -0.6831, -0.4985, -0.0123],
         ...,
         [ 0.0818, -0.3960, -1.7472,  ..., -0.0899, -0.6991,  0.9441],
         [-0.6570, -0.5447, -0.5495,  ...,  0.2547,  0.0909,  0.8296],
         [-0.4103, -0.4857, -0.7896,  ..., -0.1297,  0.0116,  1.0497]],

        ...,

        [[-0.5770, -0.8570, -1.2737,  ...,  0.6526, -0.9420,  1.4572],
         [-1.2756, -0.1327, -0.8868,  ...,  0.0340, -0.0148,  1.2443],
         [-0.3942,  0.4047, -1.1330,  ..., -0.5730, -0.1962, -0.0185],
         ...,
         [-0.4582, -0.0105, -1.2128,  ...,  0.3804,  0.1834,  1.1826],
         [-0.5125,  0.0261, -1.5177,  ...,  0.6833,  0.2088,  0.7232],
         [ 0.4068, -0.7889, -1.5892,  ...,  0.2388,  0.0937,  0.4119]],

        [[-1.4984, -0.7517, -1.6210,  ..., -0.4429, -0.1335,  0.8256],
         [-1.0147,  0.3316, -0.2712,  ...,  0.0582, -0.5458,  0.1534],
         [-0.9608, -0.7095, -1.1639,  ..., -0.7907, -0.2596,  0.5214],
         ...,
         [-0.4199, -0.4954, -1.5919,  ..., -0.1054, -0.3166,  1.4221],
         [-1.1583,  0.4723, -0.2288,  ...,  0.3112, -0.7998, -0.0303],
         [-0.1241, -0.1624, -0.5250,  ...,  1.3187,  0.1910,  1.5163]],

        [[-1.1715, -0.4228, -1.5536,  ...,  0.3002, -0.6632,  1.4925],
         [-1.3709, -0.1903, -0.5704,  ...,  0.3502, -0.1323,  0.2261],
         [-0.3162, -0.2339, -0.9755,  ..., -0.9776, -1.2875,  0.4297],
         ...,
         [ 0.3937, -1.0906, -0.7517,  ...,  0.1116,  0.3216,  1.2938],
         [-0.6337, -0.4077, -0.7481,  ..., -0.2087, -1.0633,  0.8518],
         [ 0.5215, -0.3811, -1.1399,  ..., -0.5963, -0.1528,  1.0147]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.8846,  0.9861, -0.5996,  ...,  0.3522,  0.5268, -0.2579],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-1.4882,  0.0129, -1.1896,  ...,  0.2459, -0.3611, -0.9091],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6273, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.7726, -0.2253, -0.8795,  ...,  0.4718, -0.3396, -0.8588],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8412, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.1501, -0.2658, -1.6066,  ...,  0.0883,  0.1734,  0.6644],
         [-0.7457, -0.4366, -0.8967,  ...,  0.0159,  0.1126,  0.8907],
         [-1.0754, -0.7310, -0.9650,  ..., -0.5040, -0.5997,  1.2535],
         ...,
         [-0.5717,  0.5073, -1.0202,  ..., -0.9055, -0.0928,  0.8772],
         [ 0.1265, -0.1299, -1.2543,  ...,  0.2915, -0.2625,  0.9662],
         [-0.2056, -0.2299, -0.7879,  ..., -0.5136, -0.2894,  1.3335]],

        [[-1.5015, -0.5367, -1.5550,  ...,  0.9806,  0.4823,  0.5107],
         [-0.5261,  0.2826, -0.1770,  ..., -0.0279, -1.0305,  1.1533],
         [-0.9944, -0.0752, -1.1693,  ..., -0.6446, -0.2888,  1.0338],
         ...,
         [-0.0330, -0.6886, -0.5117,  ..., -0.1034,  0.2899,  0.7841],
         [ 0.2245, -0.7627, -0.3027,  ..., -0.2201, -0.2197,  0.6007],
         [-0.2060, -1.1787, -0.3017,  ..., -1.1118, -1.0374,  0.8855]],

        [[-1.5324, -0.9568, -1.7788,  ...,  0.3703,  0.1587,  1.2000],
         [-0.8834, -0.2155, -0.5873,  ..., -0.3614,  0.1015, -0.3506],
         [-0.5656,  0.0431, -0.9509,  ..., -0.1610, -1.1177,  0.7695],
         ...,
         [-0.3582, -0.3886, -1.0387,  ...,  0.4210,  0.1923,  0.9899],
         [-0.6604, -0.6312, -0.4334,  ..., -0.3370, -0.3950,  0.9423],
         [-0.1004, -0.7476, -1.2425,  ..., -0.0820, -0.2577,  0.7121]],

        ...,

        [[-1.5193,  0.1262, -1.0148,  ...,  0.5354,  0.4065,  1.3471],
         [-1.4151,  0.2152, -0.1903,  ..., -0.1814, -0.3236,  0.4814],
         [-0.9401, -0.6399, -0.6292,  ..., -0.8238, -1.5275,  0.7265],
         ...,
         [ 0.0272, -0.4160, -0.7117,  ..., -0.4456, -0.0892, -0.2334],
         [-0.4009, -0.2851, -1.1463,  ...,  0.4850,  0.0427,  0.4817],
         [-0.2869, -0.3438, -1.6030,  ..., -0.0414,  0.0670,  1.2204]],

        [[-1.3127,  0.1807, -1.3190,  ...,  0.4153,  0.3449,  0.8906],
         [-0.7982, -0.3741, -0.5574,  ...,  0.2820, -0.6229,  0.6658],
         [-1.2793, -0.6259, -1.5460,  ..., -0.6259, -0.6520,  0.7716],
         ...,
         [ 0.7326, -0.3614, -1.1381,  ...,  0.0976, -0.1853,  0.7790],
         [-0.4309,  0.4300,  0.1472,  ..., -0.2702, -0.3701,  0.7663],
         [-0.1445, -0.2788, -0.6794,  ...,  0.2021, -0.4682,  0.6693]],

        [[-1.6026, -0.3798, -1.5029,  ...,  0.4946,  0.4146,  1.6135],
         [-1.0213, -0.1213, -0.2029,  ..., -0.5349, -0.7776,  0.2457],
         [-0.0325, -0.4813, -1.6970,  ..., -0.7154, -0.3083,  0.4411],
         ...,
         [ 0.3197, -0.6602, -0.4349,  ..., -0.3721,  0.1361,  0.9113],
         [-0.0209, -0.5439, -0.7153,  ..., -0.3045, -0.5984,  1.4736],
         [-0.3586, -0.7937, -0.9535,  ...,  0.1238, -0.7362,  1.3027]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.3565, -0.0452, -0.4078,  ...,  1.0239,  1.0550, -0.3113],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.4863, -0.4275, -0.8752,  ...,  0.0669,  0.3904, -1.7289],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6240, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5083,  0.1912, -1.1729,  ...,  0.1185,  0.1423, -0.8508],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8570, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        ...,

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.1308, -0.2338, -1.1951,  ...,  0.7231,  0.3968,  1.9277],
         [-1.4321, -0.1938, -0.4721,  ...,  0.3830, -0.6090,  0.2884],
         [-0.0246, -1.1678, -0.8699,  ..., -0.8566, -0.4369,  1.3421],
         ...,
         [-0.0064, -0.3443, -1.2858,  ...,  0.0587,  0.8481,  0.6518],
         [-0.1910, -0.5726, -1.0686,  ...,  0.1515, -1.0677,  0.5287],
         [ 0.0406,  0.0279, -1.0646,  ..., -0.6656, -0.2816,  1.3954]],

        [[-1.2332, -0.2825, -1.1759,  ..., -0.4915,  0.0690,  1.4961],
         [-1.2950, -0.4955, -0.8176,  ..., -0.8847, -0.7619,  0.9977],
         [-1.0520,  0.2539, -1.7539,  ..., -0.1700,  0.0909,  0.6890],
         ...,
         [-0.5775,  0.4521, -0.1288,  ..., -0.2608, -0.4865,  1.5828],
         [-0.6806, -0.3236, -0.1194,  ..., -0.7176, -0.8229,  0.0729],
         [ 0.0024, -0.0204, -0.5278,  ..., -0.3550,  0.4243,  1.2436]],

        [[-2.1692, -0.6405, -1.9489,  ...,  0.0826,  0.2624,  1.6652],
         [-0.8749, -1.1524, -0.5172,  ...,  0.0196, -0.2600,  1.0593],
         [-0.2997, -0.2045, -1.3541,  ...,  0.6155,  0.2786,  0.4931],
         ...,
         [-1.0054,  0.2145, -1.4606,  ..., -0.4108,  0.3070,  0.5526],
         [-0.4977, -0.8586, -0.1470,  ..., -0.4547, -0.1671,  0.5112],
         [-0.1353, -0.1323, -0.9727,  ...,  0.6124, -0.6955,  1.9124]],

        ...,

        [[-0.7440, -0.8208, -1.0290,  ..., -0.0616,  0.3479,  0.7195],
         [-0.5379,  0.3596, -0.4299,  ...,  0.9637, -0.2111,  0.2304],
         [-0.7355,  0.1572, -1.3553,  ..., -0.3430, -0.0422,  0.4436],
         ...,
         [-0.0302, -0.9038, -0.8317,  ..., -0.9824, -0.1533,  1.2021],
         [-0.0141,  0.0589, -0.2830,  ...,  0.0860, -0.1169,  0.2287],
         [-0.3908, -0.2717, -0.5572,  ...,  0.1791, -0.2073,  2.1814]],

        [[-1.1617, -0.5001, -0.7996,  ..., -0.5535,  0.2130,  0.7895],
         [-0.9523, -0.3256, -0.1863,  ...,  0.3636, -0.6095,  0.7243],
         [-0.7500, -0.2189, -1.1329,  ..., -1.0052, -0.4350,  0.6473],
         ...,
         [ 0.2081, -0.7071, -1.0754,  ...,  0.5391, -0.1632,  0.8317],
         [-0.9800, -0.0548,  0.3049,  ..., -0.5006, -0.9658,  1.2013],
         [-0.3963,  0.4650, -0.9927,  ..., -0.3953, -0.6447,  1.2442]],

        [[-1.1984,  0.2945, -1.6399,  ...,  0.5345,  0.2324,  0.8174],
         [-0.8669, -0.6302, -0.8014,  ..., -0.5897, -0.2072,  0.6167],
         [-0.8886, -1.1725, -0.6926,  ..., -0.7832, -0.2799,  1.1347],
         ...,
         [-0.2595, -0.4193, -0.2495,  ..., -0.7917,  0.1112,  1.5435],
         [-0.2664, -0.3012, -1.0170,  ..., -0.2366, -0.2422,  1.4581],
         [ 0.2856, -0.7026, -0.1578,  ..., -0.6904, -0.0044,  1.3349]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0769, -0.1568,  0.8217,  ...,  0.9081,  1.1600,  0.3609],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.6303, -0.0446, -0.9801,  ...,  0.2897,  0.1491, -1.2453],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6227, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.0489, -0.1435, -0.5708,  ...,  0.8562, -0.4998, -0.7435],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8589, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.3785, -0.9487, -1.3423,  ..., -0.1117,  0.2923,  0.8281],
         [-1.1242,  0.3719, -0.3290,  ..., -0.4488,  0.0322,  0.3916],
         [-0.9012, -0.0217, -1.0493,  ..., -1.3741, -0.1965,  1.2433],
         ...,
         [ 0.0076, -0.4402, -1.4122,  ..., -0.3144, -0.5688,  1.9189],
         [ 0.4688, -0.8986, -0.0527,  ..., -0.4693, -0.7485,  1.2873],
         [-0.6191, -0.3480, -1.3230,  ...,  0.2372,  0.0898,  1.4158]],

        [[-0.8125, -0.0319, -1.5343,  ...,  0.6669,  0.6412,  1.6807],
         [-0.4832,  0.2242, -0.1116,  ...,  0.5076, -0.1018,  0.8009],
         [-0.1957, -0.6826, -1.3496,  ...,  0.0533, -0.2740,  1.2168],
         ...,
         [ 0.2379, -0.8331, -0.5702,  ...,  0.0231,  0.4579,  1.9463],
         [-0.4671, -0.0157, -0.5853,  ..., -0.2158,  0.3102,  0.2235],
         [-0.4026,  0.9446, -0.9410,  ..., -0.5713,  0.9882,  1.1206]],

        [[-1.4247,  0.2040, -1.8854,  ...,  0.3120,  0.3735,  0.6177],
         [-0.8452,  0.3412, -0.8529,  ...,  0.6492, -0.3149,  0.1522],
         [-0.9630, -0.0582, -0.6285,  ..., -0.6810, -0.3770,  0.4273],
         ...,
         [-0.5708, -0.1477, -1.1448,  ...,  0.3015,  0.9065,  0.9650],
         [-0.2792, -0.8981, -0.2619,  ..., -1.2509, -0.8677,  0.6217],
         [-0.1383, -0.5932, -1.2152,  ..., -0.6352, -0.3304,  1.6090]],

        ...,

        [[-1.1882, -0.3682, -1.4834,  ...,  0.6466,  0.1983,  1.3323],
         [-0.8445, -0.0721,  0.0233,  ..., -0.2333, -0.0975,  0.2554],
         [-0.2474, -0.1316, -1.3675,  ..., -0.6235, -0.4094,  0.1683],
         ...,
         [-0.1946, -0.6524, -0.9805,  ..., -0.3331,  0.2106,  1.7937],
         [-0.6086, -0.4100, -0.0633,  ..., -0.8129, -0.4750,  0.3044],
         [-0.2343, -0.4788, -0.5923,  ...,  0.2327,  0.0660,  0.9116]],

        [[-0.5461, -0.7799, -1.2060,  ...,  0.5338,  0.3588,  1.5861],
         [-0.7871,  0.3272, -0.1964,  ..., -0.1229,  0.1817,  0.2955],
         [-0.3951, -0.4355, -1.7518,  ..., -0.7085, -0.5690,  0.5131],
         ...,
         [-0.1626, -1.1282, -0.2986,  ..., -0.3928,  0.3325,  1.2704],
         [-0.6229, -0.0307, -0.4959,  ...,  0.8282, -0.1655,  1.0945],
         [ 0.1567, -1.1099, -0.5947,  ...,  0.0418, -0.7679,  1.6897]],

        [[-0.7397, -0.3285, -0.9692,  ...,  0.4132,  0.2330,  1.3143],
         [-0.4387, -0.0959, -0.9927,  ...,  0.1615, -0.0293,  0.2279],
         [-0.9902, -0.2628, -1.5085,  ..., -1.1144, -0.2859,  0.8703],
         ...,
         [-0.2173, -0.3144, -0.6428,  ..., -0.6693,  0.4125,  1.0313],
         [-0.3441, -0.4596, -0.6266,  ..., -0.5030, -0.6184,  1.5251],
         [ 0.1479,  0.1406, -0.8817,  ...,  0.5847,  0.1376,  1.0641]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 1.6893,  1.1458, -0.8528,  ...,  0.7088,  0.9754, -0.0782],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.6022,  0.5459, -0.1797,  ...,  0.5130,  0.2302, -0.5661],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6239, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.1081, -0.3450, -0.5874,  ...,  0.8220,  0.4912, -0.5193],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8722, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.8602e+00, -3.7511e-01, -1.4774e+00,  ...,  6.9155e-01,
           1.0876e+00,  9.0312e-01],
         [-1.5834e+00, -1.5651e-01, -3.2493e-01,  ..., -2.2459e-01,
           5.8872e-02,  7.9911e-01],
         [-3.9118e-01, -2.1086e-01, -1.6724e+00,  ..., -5.5809e-01,
           6.3960e-02,  6.5837e-01],
         ...,
         [-4.3363e-01, -6.4528e-01, -7.7422e-01,  ..., -8.8399e-01,
           6.2712e-01,  1.6540e+00],
         [-6.5316e-01, -2.9950e-01, -5.8667e-01,  ...,  1.8104e-01,
          -3.0580e-01,  1.1851e+00],
         [-3.2807e-01, -3.2038e-01, -1.4847e+00,  ...,  1.2753e-01,
           1.5469e-01,  1.1617e+00]],

        [[-1.6125e+00, -5.7836e-01, -2.0672e+00,  ...,  9.8227e-02,
           3.4090e-01,  8.9870e-01],
         [-9.6148e-01,  5.6415e-01,  6.7488e-02,  ...,  1.1032e-01,
          -4.4002e-01,  2.4073e-01],
         [-7.8819e-01,  9.3408e-02, -7.3178e-01,  ..., -4.9378e-01,
          -4.5119e-01,  7.4752e-01],
         ...,
         [-3.7907e-01,  2.2957e-01, -4.6802e-01,  ...,  3.1847e-01,
           9.3983e-01,  7.4348e-01],
         [ 4.0176e-02, -3.4014e-02,  2.9830e-01,  ..., -4.2921e-01,
          -8.3822e-01,  9.3164e-01],
         [-9.5997e-01,  1.2543e-03, -1.1360e+00,  ..., -2.4668e-01,
           5.4784e-01,  1.0134e+00]],

        [[-1.2968e+00, -1.4426e-02, -1.4168e+00,  ...,  8.0852e-02,
           8.0486e-02,  1.6850e+00],
         [-3.4768e-01,  3.1500e-03,  1.0443e-01,  ..., -6.1336e-01,
           8.9402e-01,  4.4663e-01],
         [-2.9254e-01, -6.4980e-01, -1.2857e+00,  ..., -1.1886e+00,
           3.4587e-01,  8.1021e-01],
         ...,
         [-5.8516e-01,  2.8567e-02, -9.0302e-01,  ..., -1.1000e-01,
           4.2686e-01,  1.1537e+00],
         [ 7.2424e-01, -4.3764e-01, -7.3568e-01,  ...,  2.5616e-01,
          -2.9841e-01, -1.8231e-01],
         [-6.2353e-01,  5.9018e-01, -3.5779e-01,  ..., -4.4021e-01,
           4.1010e-02,  6.4382e-01]],

        ...,

        [[-1.2151e+00, -3.6989e-01, -1.0625e+00,  ...,  2.2720e-01,
           7.6241e-01,  4.0944e-01],
         [-1.1597e+00,  1.9976e-01, -4.9097e-01,  ..., -4.1235e-02,
          -2.3411e-01,  2.4695e-01],
         [-4.4233e-01, -2.2371e-02, -1.6930e+00,  ...,  6.5975e-01,
           1.6549e-01,  1.1208e+00],
         ...,
         [ 1.9427e-01, -2.9934e-01, -1.0729e+00,  ..., -1.6625e-01,
           6.6522e-01,  1.2799e+00],
         [-4.9508e-01,  6.9188e-01, -6.2601e-01,  ...,  3.8918e-01,
          -4.4760e-01,  1.2227e+00],
         [-8.3942e-02,  2.1811e-01, -5.9014e-02,  ..., -4.1927e-01,
           4.7843e-01,  9.8324e-01]],

        [[-1.3813e+00, -4.2151e-01, -1.5671e+00,  ...,  1.1928e-01,
           4.0285e-02,  1.5279e+00],
         [-1.3303e+00,  4.9633e-02, -3.2316e-01,  ...,  1.8822e-01,
          -3.5006e-01,  7.2707e-01],
         [-3.1110e-01,  8.1211e-02, -1.4245e+00,  ..., -5.2970e-01,
           7.8434e-01, -8.8079e-02],
         ...,
         [-2.9803e-01, -2.8600e-01, -1.6132e-01,  ..., -6.6774e-01,
          -6.3780e-02,  1.8211e+00],
         [-4.2102e-01, -6.6449e-01, -7.7018e-01,  ...,  1.3577e-01,
           1.8821e-02,  1.2354e+00],
         [-4.0277e-01, -3.3098e-01, -5.8779e-01,  ..., -8.2796e-01,
           3.3945e-01,  1.9798e+00]],

        [[-7.9391e-01,  5.5616e-01, -9.7223e-01,  ...,  6.5997e-01,
           1.5493e-01,  1.0763e+00],
         [-7.4735e-01,  4.1581e-01,  1.0028e-01,  ..., -5.8582e-02,
          -1.1251e+00, -5.0901e-02],
         [-4.0661e-01, -1.0037e-01, -1.4452e+00,  ...,  3.1339e-01,
          -1.5467e-01,  9.6193e-01],
         ...,
         [-5.4214e-01, -2.8235e-01, -3.5896e-01,  ..., -3.7572e-01,
           5.8813e-01,  1.6253e+00],
         [-4.3448e-01,  3.4779e-02, -7.7267e-01,  ...,  5.4432e-01,
           2.7251e-01,  1.3952e+00],
         [ 2.7554e-01, -6.4665e-01, -1.2208e+00,  ..., -7.5650e-02,
          -1.2715e+00,  1.2473e+00]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.3002,  0.4376, -0.4957,  ...,  1.0613,  0.6511, -0.3295],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.9342, -0.0904, -0.2339,  ...,  0.3621, -0.1725, -0.9254],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6241, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.4865, -0.3031, -0.1516,  ...,  1.3698,  0.5345, -1.2799],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8835, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.7546e+00, -8.0873e-04, -6.2122e-01,  ...,  1.9711e-01,
           8.2057e-01,  1.5726e+00],
         [-7.2088e-01,  6.5096e-01, -2.0794e-01,  ..., -5.5646e-02,
           8.1076e-01,  5.0558e-01],
         [-4.4198e-01, -6.7684e-02, -1.3373e+00,  ..., -9.2127e-01,
           9.3864e-01,  2.9403e-01],
         ...,
         [-1.7048e-01, -6.7898e-04, -4.3820e-01,  ...,  3.4807e-01,
           3.6868e-01,  6.8973e-01],
         [ 8.1532e-02, -2.4257e-01, -1.6477e-01,  ..., -1.2875e-02,
          -7.1786e-01,  8.6233e-01],
         [ 1.8392e-01, -7.8653e-01, -2.0296e+00,  ...,  5.5683e-01,
          -2.6144e-01,  1.4234e+00]],

        [[-4.2416e-01, -9.8655e-02, -7.8523e-01,  ...,  2.1733e-02,
           1.6209e-01,  1.1460e+00],
         [-1.1591e+00, -4.5506e-02, -2.9552e-01,  ...,  2.4458e-01,
          -4.9493e-01,  1.5529e-01],
         [ 1.4015e-02, -2.6047e-01, -1.2202e+00,  ..., -4.3829e-01,
           8.6975e-01,  1.7412e+00],
         ...,
         [-3.6014e-01, -7.1898e-01, -9.2623e-01,  ..., -1.8366e-01,
           1.1902e+00,  1.3918e+00],
         [-8.8837e-01, -1.7585e-01, -9.8752e-01,  ..., -4.2606e-02,
           6.3842e-01,  2.0149e-01],
         [-8.7542e-01, -1.7176e-01,  8.7430e-02,  ..., -7.1222e-01,
           1.0376e-01,  1.3089e+00]],

        [[-7.3830e-01, -6.5782e-01, -1.3788e+00,  ...,  2.8547e-01,
           1.0253e-01,  1.2770e+00],
         [-1.2953e+00,  3.3758e-01, -1.0997e-01,  ...,  2.1328e-01,
           1.1229e+00,  4.5360e-01],
         [-1.7155e-01,  5.6248e-01, -1.0585e+00,  ..., -3.0462e-01,
           7.0518e-02, -7.1777e-02],
         ...,
         [-1.4062e-01, -6.1240e-01, -6.1853e-01,  ..., -3.0144e-01,
           7.3448e-01,  1.2092e+00],
         [-5.7744e-01,  2.8305e-01, -7.3014e-01,  ...,  2.4399e-01,
          -1.2409e+00,  9.7016e-01],
         [ 2.1937e-01, -4.6899e-01, -8.8526e-01,  ..., -4.7602e-01,
          -1.0810e-01,  7.0170e-01]],

        ...,

        [[-9.0643e-01, -2.9584e-01, -1.5310e+00,  ...,  3.3538e-01,
           2.3496e-01,  1.0682e+00],
         [-7.9543e-01, -1.0845e-01,  1.7400e-01,  ...,  3.1695e-01,
          -3.8560e-01,  1.3641e+00],
         [-1.1578e-01,  5.5648e-01, -1.2448e+00,  ...,  3.6399e-01,
           2.1477e-01,  4.2668e-01],
         ...,
         [-8.4152e-02, -3.2977e-01, -3.6986e-01,  ..., -6.8120e-01,
           9.0111e-01,  1.3346e+00],
         [-4.6008e-01,  1.2004e-01, -1.1668e-01,  ..., -9.8935e-02,
          -4.7409e-01,  1.1017e+00],
         [ 7.0011e-02, -2.7992e-01, -2.8557e-01,  ...,  3.1482e-01,
           8.9212e-02,  1.1398e+00]],

        [[-2.1415e-01,  4.0517e-01, -1.1115e+00,  ...,  9.0431e-01,
           8.4797e-01,  1.1754e+00],
         [-1.5661e+00,  4.3787e-01, -8.5301e-01,  ...,  2.8933e-01,
          -2.0826e-01,  7.9747e-01],
         [-8.9420e-01,  7.1953e-03, -1.4265e+00,  ..., -3.0117e-01,
           1.9335e-01,  4.3903e-01],
         ...,
         [ 7.3090e-02,  2.5402e-01, -9.2635e-01,  ...,  5.9034e-01,
           8.7725e-01,  8.3393e-01],
         [ 1.9971e-01,  1.2155e-01,  2.6806e-01,  ...,  8.5332e-02,
          -9.0330e-02,  9.3121e-01],
         [-5.4640e-01,  3.8269e-02, -6.6479e-01,  ..., -6.3767e-01,
          -8.2755e-01,  5.4768e-01]],

        [[-1.3082e+00,  4.4014e-01, -9.0765e-01,  ...,  8.9304e-01,
           3.9772e-01,  9.1744e-01],
         [-1.3313e-01, -4.2275e-01, -4.7098e-01,  ..., -3.8836e-02,
           2.3485e-01,  8.4167e-01],
         [ 2.3957e-01, -3.5103e-01, -1.7309e+00,  ..., -3.9612e-01,
           4.7609e-01,  4.4304e-02],
         ...,
         [ 1.4970e-01, -3.6944e-01, -5.8079e-01,  ..., -1.2092e+00,
           1.6445e-01,  1.1745e+00],
         [-8.2730e-01, -3.3773e-01, -3.0617e-01,  ...,  1.9826e-02,
          -5.5105e-02,  8.5672e-01],
         [-6.5832e-01, -5.7416e-01, -1.7121e+00,  ..., -1.9588e-01,
          -4.4673e-01,  1.7971e+00]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.8700, -0.0865,  0.0660,  ...,  0.6062,  0.2730, -1.0943],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.0025, -0.4550, -0.1650,  ...,  0.6515, -0.1107, -1.3808],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6219, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.4477,  0.3135, -0.8536,  ...,  0.8430,  0.6435, -1.2570],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8872, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636],
         [0.0000, 0.0000, 0.4585,  ..., 0.8462, 0.5555, 0.8917]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8124,  0.0660, -1.6093,  ...,  0.4280, -0.2922,  1.7693],
         [-0.8239, -0.3769, -0.9669,  ..., -0.0113, -0.0259,  0.7475],
         [-0.3365, -0.2359, -1.5882,  ...,  0.1235,  0.5331,  0.6342],
         ...,
         [-0.2472, -0.7581, -0.9850,  ..., -0.6940,  0.5229,  1.2161],
         [ 0.0427, -0.4085,  0.0144,  ...,  0.0489, -0.2126,  0.8394],
         [-0.8230,  0.3312, -0.6445,  ...,  0.0647,  0.3614,  1.4711]],

        [[-1.2231, -0.1407, -1.0847,  ...,  0.4397, -0.0188,  1.3351],
         [-1.1529,  0.4268, -0.8476,  ..., -0.5996,  0.3298,  0.3223],
         [-0.8222,  0.0644, -0.8551,  ..., -0.3961,  0.3530,  0.2393],
         ...,
         [-0.3022,  0.0591, -0.8268,  ..., -0.3442,  0.2132,  1.6342],
         [-0.5913, -0.2229, -0.5760,  ...,  0.7078, -0.2308,  1.4917],
         [ 0.0999, -0.4329, -0.5026,  ..., -0.9609,  0.5730,  1.1185]],

        [[-1.7109,  0.2100, -0.6747,  ..., -0.0867,  1.4198,  0.4101],
         [-0.9416, -0.4206, -0.1014,  ..., -0.3787,  0.6855,  0.8853],
         [-0.1646,  0.2055, -1.0864,  ..., -0.4056, -0.0183,  1.0580],
         ...,
         [-0.5883, -0.0388, -0.5546,  ..., -0.3965,  0.3951,  1.2147],
         [-0.3634, -0.2994, -0.7480,  ...,  0.1075, -0.4065,  1.0181],
         [ 0.2901, -0.4959, -0.5461,  ...,  0.3538, -0.3927,  1.6809]],

        ...,

        [[-0.7369,  0.4768, -1.3463,  ...,  0.3845,  0.8729,  1.3273],
         [-0.7793,  0.2720, -0.6163,  ...,  0.1775, -0.8792,  0.8105],
         [-0.7091,  0.3901, -0.7429,  ..., -0.2838, -0.8978,  1.0018],
         ...,
         [-0.0522, -0.0319, -0.8056,  ..., -0.5547, -0.0881,  1.3064],
         [-0.3387, -1.0747, -0.5278,  ..., -0.1143, -0.0826,  1.7069],
         [-0.6460, -0.3914, -0.6575,  ...,  0.3336,  0.3490,  1.7222]],

        [[-1.1344,  0.6066, -0.9751,  ...,  0.3076,  0.5923,  0.9979],
         [-1.0281, -0.7440, -0.0795,  ..., -0.0539,  0.6328,  1.6727],
         [-0.9170, -0.2510, -1.1720,  ...,  0.2358,  0.3023,  0.7935],
         ...,
         [-0.8830, -0.1415, -0.9993,  ...,  0.2911,  0.6918,  1.0339],
         [ 0.0827, -0.8656, -0.1503,  ..., -0.2946,  0.0456,  0.4184],
         [-0.9512,  0.8268, -0.4348,  ..., -0.3480,  0.5309,  1.0375]],

        [[-1.4730,  0.2304, -0.8124,  ...,  0.0822,  0.6269,  1.6934],
         [-1.3210, -0.3320, -0.4573,  ..., -0.1856, -0.0642,  1.1381],
         [ 0.0994, -0.1862, -1.4563,  ..., -0.0436,  0.3445,  0.9551],
         ...,
         [-0.4447,  0.4430, -1.0211,  ..., -0.3086,  0.0519,  0.8703],
         [ 0.0749,  0.2166, -0.5805,  ...,  0.2899, -0.5266,  1.2359],
         [-0.2638, -0.3488, -0.5911,  ..., -0.3049, -0.3827,  1.0864]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0416, -0.2632, -0.2588,  ...,  0.6453,  0.9751,  0.1525],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2886, -0.2241, -0.3834,  ...,  0.4843,  0.2648, -0.6822],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6282, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.2192, -0.8217, -0.4668,  ...,  1.1069,  0.0940, -0.9048],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8854, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.1307, -0.0297, -0.3880,  ..., -0.0494,  1.3338,  1.1522],
         [-1.0211,  0.3343, -1.3044,  ...,  0.2189,  0.6279,  1.0865],
         [-0.7528,  0.4941, -1.0303,  ..., -0.7141,  0.2153,  0.1461],
         ...,
         [-0.2266,  0.4312, -1.3009,  ..., -0.0339,  0.2906,  1.3057],
         [-0.0518,  0.1018,  0.2826,  ...,  0.0829,  0.1749,  0.8064],
         [ 0.0042,  0.4330, -0.8642,  ...,  0.2571,  0.1661,  1.6474]],

        [[-0.9422, -0.2933, -1.1056,  ...,  0.7814,  0.5153,  1.8433],
         [-1.1281,  0.3324, -0.4178,  ...,  0.3530,  0.3287,  1.1160],
         [-1.0307,  0.2372, -0.7036,  ..., -0.6581, -0.5113,  1.3182],
         ...,
         [-0.0065, -1.0175, -0.5520,  ..., -0.2996,  0.6813,  1.9827],
         [-0.3773,  0.9772, -0.0849,  ...,  0.9620, -0.4271,  0.4861],
         [-0.7697,  0.0424, -0.4996,  ...,  0.4504,  0.5088,  1.7916]],

        [[-0.9544, -0.0434, -0.6696,  ..., -0.0743,  0.9644,  0.9176],
         [-1.0474,  0.9723, -0.7993,  ...,  0.0834,  0.4683,  0.1127],
         [-0.3805,  0.5819, -1.0265,  ...,  0.2017,  0.6027,  0.0305],
         ...,
         [-0.7795,  0.2217, -1.0677,  ...,  0.0828,  0.5967,  0.7478],
         [-0.3456,  0.3550, -0.3681,  ..., -0.2468, -0.4209, -0.1668],
         [ 0.5207, -0.5543, -0.2175,  ..., -0.8231,  0.4612,  1.0028]],

        ...,

        [[-0.9649,  0.6196, -0.8191,  ..., -0.0089,  0.8999,  0.7545],
         [-1.0612,  1.0127, -1.2205,  ...,  0.4998,  0.0140,  0.3466],
         [-1.2591, -0.7798, -0.7336,  ..., -0.5979, -0.0495,  0.8515],
         ...,
         [ 0.0727,  0.2785, -0.5918,  ..., -0.3293,  0.9237,  1.0603],
         [-0.2511, -0.2426, -0.4194,  ...,  0.5551,  0.5442,  0.0661],
         [-0.0876,  0.4331, -0.0540,  ..., -0.5875,  0.7495,  0.3172]],

        [[-1.2554, -0.3392, -1.2279,  ...,  1.0844,  0.5881,  1.7596],
         [-1.0784, -0.0851, -0.1860,  ..., -0.1307,  0.5763,  1.2972],
         [-0.3980, -0.2988, -1.1611,  ..., -0.3021,  0.1192,  1.0500],
         ...,
         [-0.4831,  0.1658, -0.7737,  ..., -0.0260,  0.3772,  0.5398],
         [-1.2578, -0.2038, -1.2007,  ...,  0.4070, -0.0254,  1.6214],
         [ 0.3331,  0.4175, -0.1855,  ..., -0.2471,  0.8103,  0.7314]],

        [[-0.6629,  0.8474, -1.1201,  ...,  0.3019,  1.0298,  0.9631],
         [-1.1371, -0.0696, -0.1019,  ..., -0.3449,  0.5049,  1.1740],
         [-0.3070,  0.1638, -1.1250,  ..., -0.5842,  0.2628,  0.7108],
         ...,
         [-0.2442, -0.0356, -0.4809,  ..., -0.4228,  0.0421,  1.7101],
         [ 0.5897,  0.0953, -0.3081,  ...,  0.3237,  0.3664,  1.4040],
         [-0.1659, -1.0923, -0.8009,  ..., -0.0926,  0.1825,  2.3353]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 1.0528,  0.4708, -0.2178,  ...,  1.0419,  1.0549, -0.3140],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2338, -0.2875, -1.2166,  ...,  0.5645,  0.4742, -1.2000],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6377, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.3087,  0.1012, -1.1817,  ...,  0.4357, -0.2433, -1.5402],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8730, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8520, -0.2841, -0.3954,  ...,  0.4781,  0.2192,  1.7814],
         [-1.0069,  0.7887,  0.1416,  ...,  0.7078,  0.7297,  0.3472],
         [-0.8754,  0.5883, -0.6637,  ..., -0.7211,  0.4047,  1.2529],
         ...,
         [-0.3700,  0.6675,  0.2391,  ...,  0.0732,  0.9650,  0.5955],
         [-1.0688, -0.1701,  0.1969,  ...,  0.1737, -0.5413,  1.2563],
         [-1.1307,  0.4611, -0.1603,  ..., -0.5606,  0.6927,  1.3559]],

        [[-1.0274, -0.7815, -0.9096,  ..., -0.1998, -0.0806,  1.0066],
         [-0.5405,  0.1220,  0.0204,  ...,  0.1047, -0.7866,  1.2626],
         [-1.1732, -0.1478, -0.1147,  ..., -0.7105, -0.1412,  0.7766],
         ...,
         [-0.3593,  0.2556, -0.1856,  ..., -0.3779,  0.5168,  0.7372],
         [-0.2192,  0.5869,  0.0944,  ..., -0.7118, -0.4833,  0.7911],
         [-0.1643,  0.1350, -0.0441,  ...,  0.4837,  0.0731,  1.2274]],

        [[-1.2336, -0.3986, -0.6953,  ...,  0.6801,  0.2983,  2.2570],
         [-1.5444,  0.3767, -0.5178,  ..., -0.6289,  0.5695,  0.9541],
         [ 0.0302, -0.3891, -1.1355,  ..., -0.2940,  0.6279,  0.8001],
         ...,
         [-0.4295, -0.0598, -0.7458,  ..., -0.8933,  0.7200,  1.2575],
         [ 0.0791, -0.4533, -0.3812,  ..., -0.2456, -0.9741,  1.6871],
         [ 0.1843,  0.3792, -0.0130,  ...,  0.1073,  0.2681,  0.8977]],

        ...,

        [[-1.1104,  0.5965, -1.3882,  ...,  0.3509,  0.8627,  1.3104],
         [-0.9304, -0.2560, -0.1728,  ..., -0.1256,  0.0439,  1.2627],
         [-0.0529,  0.1219, -0.4497,  ..., -0.6532,  0.1573,  0.6271],
         ...,
         [-0.4281,  0.2715, -0.6668,  ...,  0.3861,  0.8596,  1.2117],
         [-0.0332, -0.1128,  0.1479,  ..., -0.8275, -0.8372,  0.8704],
         [-0.4399, -0.0291, -0.6982,  ...,  0.4360,  0.5348,  1.5520]],

        [[-0.9793,  0.2037, -1.0904,  ..., -0.3120,  0.8980,  0.4044],
         [-1.0518,  0.6898,  0.1939,  ...,  0.5927,  0.1376,  1.0536],
         [-0.0521,  0.3379, -0.4150,  ...,  0.0870, -0.1624,  1.1950],
         ...,
         [-1.0136,  0.3509, -0.4235,  ...,  0.7728,  1.7634,  0.6746],
         [-0.9724, -0.3000,  0.1059,  ..., -0.6813,  0.2204,  0.7610],
         [-0.4700, -1.3720, -0.7876,  ..., -0.1387,  0.2127,  1.6447]],

        [[-1.5695, -0.1298, -1.2012,  ...,  0.5481,  0.5449,  1.6004],
         [-1.2082,  0.3573, -0.2729,  ...,  0.5013,  0.8359, -0.1422],
         [-0.0359, -0.0658, -1.4840,  ...,  0.0683,  0.0037,  1.2532],
         ...,
         [ 0.5634, -0.1905, -0.1648,  ..., -0.3869,  0.5824,  1.3045],
         [-0.5966,  0.4745,  0.2261,  ..., -0.1539, -0.2336,  1.2189],
         [-1.3864, -0.3378, -0.7637,  ..., -0.0052,  0.5469,  1.1088]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0211,  0.5430, -0.1328,  ...,  1.3076,  0.1088, -0.6355],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6786,  0.2558, -0.0913,  ...,  0.7322,  0.3501, -0.3627],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6406, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.1397, -0.7310,  0.1565,  ...,  0.2653,  0.9584, -1.0574],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8808, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8805, -0.6113, -1.4188,  ...,  0.9047,  1.0319,  1.0552],
         [-0.6908, -0.2306, -0.2570,  ..., -0.4913,  0.6370,  1.5844],
         [-0.3869,  0.1888, -0.7622,  ..., -0.3444,  0.6991,  0.4942],
         ...,
         [ 0.2163, -0.4841, -0.5011,  ..., -0.1055,  0.4271,  1.3487],
         [-0.3087, -0.1899, -0.5389,  ...,  0.5396, -0.5480,  1.7455],
         [-0.5653, -0.0643, -0.4638,  ..., -0.0958,  0.1494,  1.8058]],

        [[-1.1908, -0.0723, -1.0168,  ...,  0.7025,  1.3944,  1.2629],
         [-1.0202,  0.2575, -0.2145,  ...,  0.0510,  0.9312,  1.7034],
         [-1.0804,  0.7329, -0.8903,  ...,  0.2370,  0.5912,  0.9445],
         ...,
         [-0.4368,  0.6302, -0.6779,  ...,  0.2679,  0.8911,  0.5415],
         [-0.1898, -0.0745,  0.3767,  ..., -0.7861, -0.5068,  1.3758],
         [-0.2492,  0.0667,  0.2215,  ..., -0.4209,  0.6487,  1.0266]],

        [[-1.0044,  0.1723, -0.2217,  ...,  0.5816,  0.3533,  1.7415],
         [-0.9366, -0.2502,  0.0239,  ..., -0.2488,  1.4982,  1.1132],
         [-0.5220, -0.1160, -0.6624,  ..., -0.6744,  0.6988,  0.7441],
         ...,
         [-0.4156, -0.2317,  0.0351,  ..., -0.6821,  1.2167,  1.1154],
         [ 0.0083,  0.4399, -0.2371,  ...,  0.0220, -0.1447,  1.0418],
         [-0.2389,  0.2538, -0.4944,  ..., -0.0313,  0.2725,  0.9027]],

        ...,

        [[-1.2293,  0.4908, -0.7760,  ...,  0.3899,  0.8073,  0.9984],
         [-1.3394, -0.1698, -0.7123,  ...,  0.2312,  1.0206,  1.1757],
         [-0.3890,  0.5958, -0.4005,  ..., -0.2394,  0.8442,  0.2470],
         ...,
         [ 0.0337, -0.5963, -1.1104,  ..., -0.3511,  0.0279,  1.4172],
         [-0.4447,  0.3688, -0.7127,  ...,  0.1146,  0.0311,  0.8472],
         [-0.3727,  0.5768, -0.6192,  ...,  0.2013,  0.0907,  1.9587]],

        [[-0.8482,  0.5761, -1.1394,  ...,  0.4464,  0.1949,  1.4649],
         [-0.6005,  0.2217,  0.3110,  ..., -0.7441,  0.7333,  0.5142],
         [-0.7412,  0.4518, -0.3212,  ...,  0.0144, -0.3116,  1.5883],
         ...,
         [-0.3518,  0.5641, -0.5140,  ..., -0.3331,  0.7483,  0.5657],
         [-0.1788,  0.2333, -0.5528,  ...,  0.8396,  0.4847,  0.8603],
         [-0.2078,  0.0533, -0.0311,  ..., -0.1153,  0.4107,  1.3782]],

        [[-0.9366, -0.0329, -0.6280,  ...,  0.1302,  0.5968,  1.0810],
         [-0.7925, -0.3960,  0.6109,  ...,  0.0413,  0.6822,  1.1069],
         [-0.2895,  0.5533, -1.0630,  ...,  0.0180,  0.2202,  0.8272],
         ...,
         [ 0.2727,  0.3067, -0.3037,  ..., -0.1198,  0.3091,  1.0301],
         [ 0.0714,  0.4123, -0.1173,  ..., -0.3045,  0.5775,  0.9381],
         [-0.5882,  1.1051, -0.6291,  ...,  0.7367,  0.8982,  1.2270]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.7212,  0.2829,  0.0641,  ...,  0.6882,  0.1784, -0.8710],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.9873, -0.0040, -1.4427,  ...,  1.1102, -0.2411, -0.8660],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6475, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.2830,  0.6766, -0.2842,  ...,  1.0495,  2.0173, -1.1545],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8869, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-8.5710e-01,  2.1017e-01, -4.0703e-01,  ...,  1.5092e-01,
           1.4138e+00,  8.1680e-01],
         [-6.4259e-01, -1.4811e-01, -3.9076e-01,  ..., -1.5321e-01,
           1.4936e+00,  1.5980e+00],
         [-1.1100e-01,  3.0670e-01, -5.5859e-01,  ..., -1.4309e+00,
           9.7965e-01,  8.9835e-01],
         ...,
         [-1.0835e+00,  8.5351e-02, -4.3928e-01,  ..., -2.1397e-01,
           1.4215e+00,  1.0393e+00],
         [-9.8812e-01,  3.3445e-01,  3.3887e-01,  ..., -4.4818e-01,
           9.6090e-01,  3.7872e-01],
         [-1.1234e+00,  7.6496e-01, -6.2945e-01,  ...,  3.2102e-01,
           1.1173e+00,  1.0545e+00]],

        [[-3.6868e-01,  7.6018e-01, -4.0588e-01,  ...,  4.1215e-01,
           9.7378e-01,  1.3672e+00],
         [-9.4359e-01,  4.4370e-01, -6.1637e-01,  ...,  1.8381e-01,
           5.4522e-03,  6.2875e-01],
         [-5.3833e-01, -8.9575e-02, -4.3137e-01,  ...,  1.5560e-01,
           9.2900e-01,  6.3357e-01],
         ...,
         [ 2.3736e-01,  1.8830e-01, -9.2211e-01,  ..., -3.5421e-01,
           8.6313e-01,  8.7395e-01],
         [ 2.8129e-01,  4.8759e-01,  4.6064e-01,  ...,  8.2223e-02,
           1.4698e-01,  1.1194e+00],
         [-1.5318e-01,  6.2490e-01, -3.0641e-01,  ...,  4.6259e-01,
           4.4077e-01,  1.3731e+00]],

        [[-1.0032e+00, -1.0781e-01, -1.5848e-03,  ...,  3.1972e-02,
           1.2138e+00,  1.9451e+00],
         [-1.3819e+00,  1.2289e+00, -4.7175e-01,  ...,  6.2914e-02,
          -4.3878e-01,  8.3335e-01],
         [-1.2144e+00,  1.7298e-02, -4.9871e-01,  ..., -3.3839e-01,
           4.1803e-01,  1.2419e+00],
         ...,
         [-4.3028e-01,  7.9219e-01, -7.2120e-01,  ...,  6.0666e-01,
           7.0205e-01,  8.6908e-01],
         [-4.6656e-01,  4.0592e-01, -7.8156e-01,  ...,  1.1737e-01,
           4.1548e-01,  5.7874e-01],
         [-3.0609e-01,  2.9057e-01, -7.5725e-02,  ..., -7.2930e-02,
           9.1939e-01,  9.9927e-01]],

        ...,

        [[-1.0726e+00,  2.2924e-01, -7.1903e-01,  ...,  9.4358e-01,
           1.0208e+00,  1.8098e+00],
         [-1.1296e+00,  1.3719e-01,  1.9592e-03,  ..., -1.9950e-01,
           2.6974e-01,  1.0614e+00],
         [-3.4435e-01, -5.5760e-02, -2.2031e-01,  ..., -8.0031e-01,
           1.6299e-01,  9.4079e-01],
         ...,
         [-3.1490e-01, -1.2678e-01, -8.9265e-01,  ..., -4.1389e-01,
           1.5172e+00,  1.1586e+00],
         [-5.0606e-01, -4.2698e-02, -2.2398e-01,  ..., -2.3343e-01,
          -1.8503e-01,  1.3097e+00],
         [-3.7710e-01,  7.7320e-01, -1.0633e-02,  ...,  2.5333e-01,
           6.8996e-02,  1.7840e+00]],

        [[-1.0413e+00,  2.3615e-01, -5.8136e-01,  ...,  3.3460e-01,
           7.9727e-01,  1.4515e+00],
         [-7.4924e-01,  8.2483e-01, -5.1811e-02,  ...,  2.0407e-02,
           6.5090e-01,  4.7230e-01],
         [-6.1060e-01,  4.7659e-02,  7.7912e-02,  ...,  2.7303e-01,
          -1.6844e-01,  5.3590e-01],
         ...,
         [ 3.3558e-01,  5.0122e-01, -2.6107e-01,  ..., -5.2105e-01,
           8.1235e-01,  9.0162e-01],
         [-1.0421e-01, -3.5292e-01, -6.6343e-02,  ..., -6.1366e-01,
           3.1955e-01,  1.1828e+00],
         [-4.7811e-01,  2.4424e-01, -2.5586e-01,  ...,  9.7563e-02,
           2.0843e-01,  1.3980e+00]],

        [[-4.3752e-01,  4.4395e-01, -1.0828e+00,  ..., -2.5264e-01,
           5.4195e-01,  6.7822e-01],
         [-1.0098e+00,  4.8253e-01, -3.3031e-01,  ..., -3.4509e-01,
           3.5865e-01,  1.0187e+00],
         [-1.0934e+00,  7.5600e-01, -8.8757e-01,  ..., -4.0101e-01,
           2.6318e-01,  1.2879e+00],
         ...,
         [-2.8286e-01,  3.8579e-01, -1.2790e-01,  ..., -1.7257e-01,
           7.6039e-01,  1.3750e+00],
         [ 1.8236e-01,  6.0361e-01, -1.3851e-01,  ..., -2.6346e-01,
          -5.6616e-02,  7.0127e-01],
         [-1.6582e-02, -2.2905e-01, -4.3462e-01,  ...,  3.6760e-01,
          -5.7918e-03,  1.4468e+00]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.4334,  0.3583, -0.2039,  ...,  1.3200,  0.2566, -0.4241],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3900,  0.0208, -0.3044,  ...,  0.3348,  0.8441, -0.8293],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6626, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.0077, -0.4211, -0.9507,  ...,  0.7062,  0.7593, -0.9681],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8663, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.3797e+00,  4.6020e-01, -5.6189e-01,  ...,  4.4155e-01,
           8.8651e-01,  1.5777e+00],
         [-1.1761e+00,  1.3415e-01, -1.7077e-01,  ...,  4.9292e-01,
           7.5931e-01,  1.7480e+00],
         [ 4.3681e-02,  1.2719e+00, -3.6576e-01,  ..., -4.1465e-03,
           3.7739e-01,  3.1099e-01],
         ...,
         [-8.9573e-01,  4.9721e-01,  2.6489e-01,  ...,  5.3906e-01,
           1.3962e+00,  1.3088e+00],
         [-2.9786e-01,  3.3836e-01, -1.8376e-01,  ...,  2.4249e-01,
           3.3012e-02,  1.2525e+00],
         [-5.2124e-02,  3.8506e-01, -6.4386e-01,  ...,  4.1507e-01,
           6.9294e-01,  1.0637e+00]],

        [[-8.4061e-01,  9.1065e-01, -7.4500e-01,  ...,  9.6305e-01,
           7.6287e-01,  1.3456e+00],
         [-2.4399e-01, -1.4763e-01,  6.9428e-01,  ...,  3.5572e-01,
           1.0691e+00,  1.3341e+00],
         [-5.6325e-01,  2.8914e-01, -3.8782e-01,  ..., -6.2964e-01,
           1.6055e-01,  1.1689e+00],
         ...,
         [ 2.4688e-01,  1.2022e-01,  1.5652e-01,  ...,  3.8837e-01,
           1.7525e+00,  1.4852e+00],
         [-8.6298e-01,  3.0072e-01, -2.7746e-01,  ...,  5.0678e-01,
           7.4428e-02,  1.2221e+00],
         [-7.0144e-01,  3.1847e-01, -6.7854e-01,  ...,  3.6727e-01,
           6.1965e-01,  1.6614e+00]],

        [[-9.1594e-01,  6.1328e-01, -1.2872e-02,  ...,  7.1818e-02,
           8.6898e-01,  1.8463e+00],
         [-8.0030e-01,  1.5643e-01,  3.7978e-01,  ..., -5.1757e-02,
           1.1351e+00,  1.0236e+00],
         [-3.3827e-01,  8.4015e-01, -2.7738e-01,  ..., -5.4594e-01,
           5.9402e-01,  3.1381e-01],
         ...,
         [ 3.3455e-01,  7.2447e-01, -1.3354e-01,  ..., -7.4209e-02,
           5.2665e-01,  1.1340e+00],
         [-7.9172e-02,  8.6030e-01, -4.1592e-01,  ...,  2.1766e-01,
           4.5864e-01,  7.3415e-01],
         [-2.4537e-01,  8.2849e-01, -2.3865e-01,  ...,  7.2315e-02,
           7.6368e-01,  8.7508e-01]],

        ...,

        [[-7.6939e-01,  1.8414e-01, -8.1521e-01,  ...,  6.7882e-01,
           1.2488e+00,  1.5727e+00],
         [-5.6511e-01, -2.8220e-01,  2.0560e-01,  ..., -5.2113e-01,
           6.9955e-02,  1.7288e+00],
         [-1.1226e+00,  2.2683e-01, -4.7262e-01,  ..., -3.3778e-01,
           9.7279e-01,  8.4676e-01],
         ...,
         [ 4.8007e-02,  6.6429e-01,  1.3989e-01,  ...,  1.8820e-01,
           1.0264e+00,  7.6670e-01],
         [-3.6006e-01,  1.1755e-01,  1.4899e-01,  ..., -4.6011e-01,
          -8.7791e-02,  1.0839e+00],
         [-4.7191e-01,  7.0727e-01, -7.9923e-01,  ..., -5.2223e-01,
          -1.2768e-01,  1.1478e+00]],

        [[-9.5731e-01,  7.5547e-03, -9.2536e-01,  ...,  1.6170e-01,
           3.0648e-01,  1.6521e+00],
         [-1.5879e+00,  4.3183e-01,  3.6504e-01,  ..., -1.0166e-01,
           9.4987e-01,  1.7802e+00],
         [-6.9579e-01,  1.1558e-01, -8.8846e-01,  ..., -4.3758e-01,
           7.4470e-01,  7.3413e-01],
         ...,
         [-3.9262e-01,  5.5662e-01,  1.0470e-02,  ...,  4.4971e-01,
           1.6904e+00,  1.1111e+00],
         [ 4.5318e-02,  9.5703e-05, -1.9665e-01,  ...,  5.8788e-01,
           3.6950e-01,  1.2056e+00],
         [ 1.5997e-02,  3.5717e-01, -1.2164e-01,  ..., -1.5740e-01,
           5.5939e-01,  1.7355e+00]],

        [[-7.6144e-01, -2.8893e-01, -6.1055e-01,  ..., -2.9087e-01,
           7.3387e-01,  1.5672e+00],
         [-8.6524e-01,  5.9499e-01,  3.4537e-01,  ...,  1.7663e-01,
           7.8591e-01,  9.7617e-01],
         [-2.4056e-01,  7.6358e-01, -9.1419e-01,  ..., -3.0330e-01,
           9.9715e-01,  7.1026e-01],
         ...,
         [-2.5451e-01,  5.0054e-01, -8.7287e-01,  ..., -3.0691e-01,
           1.0541e+00,  1.8295e+00],
         [-2.5148e-01,  1.3064e-01, -1.9861e-02,  ..., -5.3886e-01,
           1.9989e-01,  5.4255e-01],
         [ 5.0488e-01,  7.2310e-01, -2.1758e-01,  ...,  1.6698e-01,
           2.7357e-01,  4.0309e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.9596,  0.2384, -0.0620,  ...,  0.9979,  1.1595, -0.2821],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.8346, -0.3452, -0.9174,  ...,  0.6426, -0.2028, -0.6786],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6698, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.7113, -0.9663, -0.5805,  ...,  1.3014,  0.3918, -0.8994],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8792, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.6301,  0.6819, -0.1990,  ...,  0.5928,  1.2098,  1.2310],
         [-0.6275,  0.3304, -0.0665,  ...,  1.1212,  1.4061,  1.1176],
         [-0.4708,  0.2051, -0.3668,  ..., -0.6129,  0.5670,  0.5774],
         ...,
         [ 0.7535,  0.3506, -0.2072,  ...,  0.2648,  1.6638,  1.4842],
         [-0.5565,  0.1823,  0.2545,  ..., -0.3409, -0.2687,  1.3217],
         [-0.3370,  1.0378, -0.4096,  ...,  0.7819,  1.2384,  1.5959]],

        [[-0.9803,  0.3263, -1.0644,  ..., -0.0471,  0.8968,  1.0633],
         [-0.4455,  0.4090, -0.4673,  ...,  0.4087,  0.1028,  1.3215],
         [-0.7756,  0.5992, -0.4093,  ...,  0.0444,  0.4950,  0.8158],
         ...,
         [ 0.1472,  0.3396, -0.0485,  ...,  0.1640,  1.0782,  1.1962],
         [ 0.1735,  0.5323,  0.2941,  ..., -0.0591,  0.1348,  0.5739],
         [-0.5840,  0.7130, -0.2648,  ...,  0.7792,  0.1061,  1.2700]],

        [[-1.3302,  0.5570, -0.5752,  ...,  0.6679,  1.0794,  1.9979],
         [-1.9872,  0.4342,  0.0807,  ..., -0.5265,  0.1948,  1.6917],
         [-0.4987,  0.4611, -0.3266,  ...,  0.1239,  0.4464,  1.2958],
         ...,
         [-0.0178,  0.3016,  0.2772,  ...,  0.5777,  1.3664,  0.8794],
         [-0.5958,  0.1941,  0.2572,  ...,  0.3110,  0.6780,  0.3143],
         [-0.4319,  0.6976, -0.4488,  ...,  0.2020,  1.5257,  1.3090]],

        ...,

        [[-0.7269,  0.3040, -0.6390,  ...,  0.3636,  1.5579,  1.5197],
         [-0.8725, -0.0655,  0.1850,  ..., -0.5512,  0.8577,  1.1013],
         [-0.3450,  0.1876, -0.7966,  ..., -0.3449,  0.0153,  0.8191],
         ...,
         [-0.1578,  0.6085, -0.2059,  ..., -0.1098,  1.4075,  1.0778],
         [-0.7512,  0.1989, -0.1948,  ...,  0.1840,  0.9852,  0.7085],
         [ 0.4814,  0.2065, -0.3021,  ...,  0.4074,  0.9529,  1.6251]],

        [[-0.9357,  0.5365, -0.3569,  ...,  0.6827,  1.4680,  1.5006],
         [-0.7427,  0.9313, -0.3418,  ..., -0.2592,  1.0271,  0.6502],
         [-0.0221,  0.1489, -0.3328,  ..., -0.4475,  0.7035,  1.0583],
         ...,
         [-0.1725, -0.3227, -0.6644,  ..., -0.5217,  1.2251,  1.4256],
         [-0.3432, -0.5359, -0.8867,  ...,  0.4392,  0.1255,  1.0380],
         [-0.2118, -0.2364, -0.0038,  ..., -0.0427,  0.4429,  1.7428]],

        [[-1.0564,  0.5679, -0.1747,  ...,  0.4867,  1.2560,  1.4697],
         [-0.8931,  0.5190, -0.1850,  ..., -0.3875,  0.6477,  0.7727],
         [-0.7874,  0.8186, -1.1267,  ...,  0.1570,  0.6439,  1.1494],
         ...,
         [-0.2413, -0.2707, -0.1155,  ...,  0.3106,  1.1821,  1.8660],
         [-0.2653,  0.0699,  0.5786,  ..., -0.4551, -0.2239,  1.6391],
         [ 0.2809, -0.2567, -0.3230,  ..., -0.2024,  0.5528,  1.5943]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.7510,  1.0496,  0.4502,  ...,  1.0737,  0.8458, -0.8217],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0775, -0.3760, -0.6001,  ...,  1.0610,  0.3053, -0.4790],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6804, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.9771,  0.1864, -0.5924,  ...,  0.1082, -0.3801, -0.1810],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8634, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        ...,

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.5147,  0.1745, -1.3646,  ...,  0.3095,  0.6564,  1.8587],
         [-0.6423,  0.7602,  0.2168,  ...,  0.4672,  0.5941,  1.1139],
         [-0.6480,  0.8228, -0.6998,  ..., -0.0400,  1.3010,  0.6196],
         ...,
         [-0.2579,  0.5137, -0.3149,  ..., -0.1367,  1.4457,  1.4273],
         [ 0.8134,  0.5035,  0.4983,  ..., -0.2728,  0.5984, -0.2510],
         [-0.4261,  0.4809,  0.3287,  ...,  0.4688,  1.0274,  1.1989]],

        [[-0.8247,  0.8561, -0.2982,  ...,  1.1102,  0.7291,  1.1488],
         [-1.0347, -0.0154,  0.5830,  ..., -0.1034,  1.0478,  0.7635],
         [-1.0034,  0.1182, -0.3353,  ...,  0.2095,  0.6913,  0.8905],
         ...,
         [-0.0420,  1.3039, -0.0820,  ...,  0.0759,  1.0630,  0.5489],
         [ 0.0943, -0.0153,  0.0843,  ...,  0.7196,  0.4180,  1.5007],
         [ 0.0280,  0.8338, -0.1589,  ...,  0.0640, -0.0397,  1.2320]],

        [[-0.5029,  0.4836, -0.7867,  ...,  1.1192,  0.8831,  1.1060],
         [-0.9420,  0.3444,  0.3631,  ..., -0.4487,  0.2817,  0.6881],
         [-0.1996,  0.4991,  0.4041,  ..., -0.4138,  0.4648,  1.1655],
         ...,
         [-0.4250,  0.4049, -0.0585,  ..., -0.3435,  1.4817,  1.1160],
         [-0.6075,  0.5317, -0.3178,  ...,  0.5608,  0.9672,  0.3267],
         [-0.2205,  0.7038, -0.2406,  ...,  0.1758,  0.4993,  1.0550]],

        ...,

        [[-1.1796,  0.6421, -0.5042,  ...,  0.2493,  1.2407,  1.9673],
         [-0.5773,  0.6238,  0.7918,  ...,  0.4208,  1.1690,  1.3923],
         [ 0.1931,  0.6443, -0.2517,  ...,  0.1758,  1.0235,  0.4094],
         ...,
         [-0.3986,  1.1384, -0.2548,  ...,  0.4186,  2.0481,  0.2662],
         [-0.5937,  0.4231,  0.5784,  ...,  0.2728,  0.1090,  1.1276],
         [-0.6993,  0.6838,  0.0501,  ...,  0.1314,  0.9417,  1.2528]],

        [[-0.7013,  0.1135, -0.6590,  ...,  0.0134,  0.9831,  1.3720],
         [-1.0463,  0.8114,  0.2481,  ...,  0.4020,  1.2947,  1.3080],
         [-0.1167,  0.9183, -0.3173,  ..., -0.2165,  0.8212,  1.0871],
         ...,
         [-0.1245,  1.1876, -0.4182,  ...,  0.2474,  0.9972,  1.1450],
         [ 0.1279,  0.4251,  0.1803,  ..., -0.0439,  0.8545,  1.1306],
         [-0.3834,  0.5744,  0.0450,  ...,  0.1190,  0.7546,  1.5193]],

        [[-0.8657,  1.2267, -0.3955,  ...,  0.5913,  1.1972,  1.5907],
         [-0.3209,  0.3533,  0.4903,  ...,  0.4520,  0.6768,  1.3239],
         [-0.6771,  0.4650, -0.2006,  ..., -0.0042,  0.9980,  0.8718],
         ...,
         [-0.2992,  1.2846, -0.0229,  ..., -0.0067,  0.7353,  0.7299],
         [-0.1052,  0.3281,  0.7559,  ..., -0.3638,  0.5348,  1.2525],
         [ 0.0460,  0.4227,  0.4501,  ...,  0.0603,  0.8313,  0.9722]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.1017,  0.0743, -0.4823,  ...,  0.3892,  1.0155, -1.7562],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0797, -1.0096, -0.5774,  ...,  0.7045,  1.2401, -0.1039],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7036, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.7601, -0.1300, -0.9451,  ...,  1.1664,  0.7307, -0.2493],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8472, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-9.3095e-01,  2.5060e-01, -1.2514e-01,  ...,  2.4958e-01,
           1.6506e+00,  1.4629e+00],
         [-1.2513e+00,  1.1746e+00,  9.0052e-01,  ...,  3.3748e-01,
           4.8522e-01,  9.2883e-01],
         [-9.8693e-01,  4.1289e-01, -6.5430e-01,  ...,  1.0703e-01,
           5.8569e-01,  8.0010e-01],
         ...,
         [-1.4983e-01,  2.8227e-01,  1.2665e-01,  ..., -4.3224e-01,
           1.5200e+00,  1.7732e+00],
         [ 6.7560e-03,  2.7658e-01, -2.7290e-01,  ...,  3.5203e-01,
           1.0315e+00,  9.9099e-01],
         [-1.4931e-01,  1.2647e-01, -4.9117e-01,  ...,  8.1654e-01,
           1.5698e+00,  1.8818e+00]],

        [[-7.6175e-01,  9.2805e-01, -7.9756e-01,  ..., -4.0006e-01,
           1.5364e+00,  1.2362e+00],
         [-2.4654e-01,  4.0666e-01,  7.4170e-01,  ...,  8.5690e-02,
           8.0079e-01,  9.2044e-01],
         [-9.7653e-03,  6.3791e-01, -6.3670e-01,  ...,  1.6138e-01,
           4.7260e-01,  1.2773e+00],
         ...,
         [-1.0097e-01, -1.0631e-01,  9.6596e-01,  ..., -9.4163e-02,
           2.1441e+00,  1.6079e+00],
         [-2.6634e-01,  6.7529e-01, -2.5135e-01,  ...,  2.2338e-01,
           1.1968e+00,  7.2941e-01],
         [-7.4961e-03,  3.4883e-01,  3.7319e-02,  ...,  3.8151e-01,
           6.8420e-01,  1.4044e+00]],

        [[-1.1039e+00,  1.7207e-01, -2.4759e-01,  ..., -3.7353e-02,
           6.4231e-01,  8.8773e-01],
         [-8.3180e-01,  4.0068e-01, -1.2920e-01,  ...,  4.2640e-01,
           1.6400e+00,  1.0552e+00],
         [-3.9782e-01,  5.9217e-01, -2.0437e-01,  ..., -9.4949e-01,
           9.0495e-01,  1.0603e+00],
         ...,
         [ 2.0955e-01,  1.2458e+00, -8.1033e-02,  ...,  3.3143e-01,
           1.6804e+00,  8.0873e-01],
         [-4.0364e-01, -1.3853e-02, -3.4515e-01,  ...,  5.2081e-01,
           2.6252e-01,  1.3847e+00],
         [-4.4534e-01,  1.0262e+00,  1.0108e-01,  ..., -5.8178e-01,
           3.2534e-01,  1.2236e+00]],

        ...,

        [[-6.7989e-01,  1.1626e+00, -6.7569e-01,  ...,  6.0813e-01,
           1.5512e+00,  1.3987e+00],
         [-1.4070e+00,  9.8538e-01,  5.0400e-01,  ...,  5.7873e-01,
           6.5687e-01,  1.1940e+00],
         [-4.6288e-01,  2.4814e-01, -2.0139e-01,  ...,  1.4220e-01,
           1.0165e+00,  1.2616e+00],
         ...,
         [-3.7843e-01,  3.1434e-01, -7.7666e-03,  ...,  3.0326e-01,
           2.0279e+00,  1.0381e+00],
         [ 2.4978e-01, -6.0767e-01,  3.1404e-01,  ...,  6.8699e-01,
           3.6321e-01,  9.3699e-01],
         [-5.9893e-01,  1.0492e+00,  4.3415e-01,  ...,  3.9754e-01,
           6.0511e-01,  6.6654e-01]],

        [[-1.0908e+00,  6.6683e-04, -9.0960e-01,  ...,  2.5021e-01,
           1.0741e+00,  1.3729e+00],
         [-4.3190e-01,  6.3515e-01,  1.8347e-01,  ..., -2.2813e-02,
           1.1897e+00,  5.7811e-01],
         [-5.4568e-01,  2.7777e-01, -5.1232e-01,  ..., -2.0732e-01,
           1.2405e+00,  1.2848e+00],
         ...,
         [-7.0958e-01,  3.3810e-01, -4.2031e-01,  ...,  2.7301e-01,
           7.4698e-01,  1.8246e+00],
         [-5.1433e-01,  8.8346e-02,  5.2792e-01,  ..., -4.5905e-02,
           2.4745e-02,  1.4676e+00],
         [ 1.0888e-01,  4.2829e-01,  6.4997e-02,  ...,  2.0413e-01,
           8.0624e-01,  9.7592e-01]],

        [[-3.1944e-01,  4.6309e-01, -8.9758e-01,  ...,  7.5362e-01,
           1.6378e+00,  8.5463e-01],
         [-1.0500e+00,  6.5365e-01,  3.4138e-01,  ...,  7.9507e-01,
           1.1462e+00,  1.0645e+00],
         [-9.9194e-01,  7.0631e-01, -1.3855e+00,  ...,  5.2381e-01,
           9.0471e-01,  1.2632e+00],
         ...,
         [ 1.5262e-01,  4.8121e-01,  3.5151e-01,  ...,  3.9795e-01,
           1.1899e+00,  1.2416e+00],
         [-2.3274e-01, -5.5605e-02, -6.3826e-02,  ...,  5.6802e-01,
           5.2299e-01,  8.4004e-01],
         [-1.3533e-01,  7.7614e-01, -3.3740e-01,  ...,  1.2177e+00,
           8.6515e-01,  1.6582e+00]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 1.1725,  0.5683, -0.3337,  ..., -0.2606, -0.1958, -0.7296],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.3108, -0.4968, -0.4634,  ...,  0.6255,  0.1069, -0.6992],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7137, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5234,  0.1474, -0.9612,  ...,  0.6850,  0.5407, -0.3709],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8403, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.3215,  0.4705,  0.0744,  ..., -0.0670,  1.3751,  0.7643],
         [-1.1632,  0.4564,  0.3085,  ...,  0.5582,  1.3167,  1.1708],
         [-0.5759,  1.3216, -0.4566,  ..., -0.0040,  0.8241,  0.7530],
         ...,
         [ 0.1843,  1.3255,  0.2775,  ...,  0.2203,  1.8120,  0.4393],
         [-1.1538,  0.3709,  0.6192,  ..., -0.3728,  0.5900,  1.3361],
         [ 0.0376,  1.1731,  0.3256,  ...,  0.2370,  1.0051,  0.9917]],

        [[-0.6668,  0.4517, -0.0126,  ...,  0.7119,  1.4050,  1.2112],
         [-0.6752,  1.4416,  0.4661,  ...,  0.1310,  1.4981,  0.6702],
         [-0.3381,  1.2111, -0.3193,  ...,  0.0077,  0.6215,  1.1146],
         ...,
         [-0.7039,  0.4421, -0.4043,  ..., -0.0788,  1.7467,  1.4779],
         [ 0.3444,  0.6428,  0.4661,  ...,  0.2577,  1.1189,  0.2188],
         [-0.2782,  0.4555,  0.1213,  ...,  0.5019,  1.3008,  1.6625]],

        [[-1.2739,  0.7433, -0.0919,  ...,  0.5808,  1.6007,  1.2781],
         [-0.4718,  1.7829,  0.2733,  ...,  0.8119,  0.6292,  0.1376],
         [-0.4287,  0.7300, -0.0318,  ...,  0.4203,  1.2652,  0.8228],
         ...,
         [-0.3316,  0.5206, -0.0614,  ..., -0.1674,  1.4505,  0.7760],
         [-1.2647, -0.2494, -0.0226,  ...,  0.4735,  0.7587,  1.1938],
         [-0.5962,  0.6130,  0.3828,  ...,  0.2187,  1.3907,  1.6073]],

        ...,

        [[-0.6108,  0.7627, -0.3097,  ...,  0.9224,  1.2469,  1.1535],
         [-0.8671,  0.4130,  0.3084,  ...,  0.2407,  0.6567,  0.7050],
         [ 0.0406,  1.1369, -0.5594,  ...,  0.0738,  1.1664,  1.1341],
         ...,
         [-0.2079,  0.4879,  0.1802,  ...,  0.1604,  1.2395,  0.3892],
         [-0.3497,  0.5618, -0.2053,  ...,  0.3671,  1.0115,  0.9554],
         [ 0.2262,  1.3070, -0.0225,  ...,  1.1929,  1.0631,  0.7192]],

        [[-0.7443,  0.1574, -0.4748,  ..., -0.1566,  0.9276,  1.1782],
         [-0.6929,  0.4532,  0.5036,  ...,  0.8339,  1.0940,  1.4163],
         [-0.0190,  0.6991,  0.3612,  ..., -0.3700,  0.9413,  0.9818],
         ...,
         [-0.7415,  0.4417,  0.4402,  ..., -0.0682,  1.6889,  1.0750],
         [-0.3933,  0.3994,  0.6363,  ...,  0.3408,  1.3012,  0.7418],
         [-0.4288,  1.4306, -0.1463,  ...,  0.7100,  0.4550,  1.2145]],

        [[-0.9693,  0.6117, -0.2231,  ...,  0.0498,  1.1591,  1.8020],
         [-1.2811,  0.5628,  1.0225,  ...,  0.4209,  0.9720,  0.5508],
         [ 0.3172,  0.2947, -0.0807,  ..., -0.6036,  0.6828,  1.1271],
         ...,
         [-0.1822,  0.8872,  0.1131,  ..., -0.1668,  1.5380,  1.7276],
         [-0.0854, -0.5472,  0.5501,  ..., -0.0608,  1.3579,  0.5192],
         [ 0.1578,  0.9635,  0.2735,  ...,  0.3144,  1.1365,  0.9869]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.1653,  0.1368, -0.4489,  ...,  0.7040,  0.5107, -1.6740],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6633,  0.3961, -0.5606,  ...,  0.7864,  0.1512, -0.6300],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7280, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.0376, -0.4784, -0.7953,  ..., -0.0220,  0.3195, -1.2804],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8424, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.6673,  0.4509, -0.3116,  ...,  0.1188,  1.6622,  1.5211],
         [-1.0225,  0.9576,  1.2074,  ...,  0.0433,  1.0907,  1.2549],
         [-0.0864,  0.8751, -0.3622,  ...,  0.2709,  0.9866,  0.8486],
         ...,
         [-0.2678,  0.4818,  0.5298,  ...,  0.4141,  1.5492,  0.3696],
         [-0.8465,  0.3030, -0.3084,  ...,  0.7495,  0.2675,  1.4117],
         [ 0.4078,  1.3538,  0.5852,  ...,  0.4962,  1.5081,  0.8481]],

        [[-0.5927,  0.6492,  0.2173,  ...,  0.2741,  1.1108,  1.1820],
         [-0.8910,  0.7395,  0.8036,  ...,  0.0048,  1.3788,  1.1597],
         [-0.2384,  0.6798,  0.5000,  ..., -0.6903,  0.7754,  0.8401],
         ...,
         [-0.5843,  0.8149,  0.5617,  ...,  0.1500,  1.8561,  1.0414],
         [-0.6273,  0.3208,  0.3105,  ..., -0.2653,  1.0004, -0.0339],
         [-0.3768,  0.8930,  0.4393,  ...,  0.1415,  1.4677,  1.2892]],

        [[-0.6711, -0.2379,  0.0495,  ...,  0.2908,  1.4255,  1.0925],
         [-0.6783,  0.7488,  0.1128,  ...,  0.5368,  1.0263,  1.0590],
         [-0.4447,  0.3089,  0.4252,  ...,  0.1500,  0.8072,  1.6947],
         ...,
         [-0.0566,  0.1779, -0.2841,  ...,  0.0035,  1.1845,  1.8104],
         [-0.0576,  1.3159,  0.3033,  ...,  0.0413,  0.5749,  0.9629],
         [-0.0884,  0.5302,  0.1871,  ...,  0.0646,  1.1970,  1.1134]],

        ...,

        [[-0.7000,  0.0914, -0.2079,  ...,  0.3191,  1.5670,  1.5506],
         [-0.9605,  0.7400,  0.6601,  ..., -0.3867,  0.8972,  0.9934],
         [-0.1131,  0.3646, -0.0258,  ...,  0.3273,  0.7077,  1.3331],
         ...,
         [-0.2139,  0.4930,  0.7240,  ...,  0.2088,  2.0241,  1.3306],
         [-0.2187,  0.2026,  0.5557,  ...,  0.5864,  1.0659,  1.2868],
         [ 0.2514,  0.6940, -0.2571,  ...,  0.4540,  1.2346,  1.2816]],

        [[-1.1600,  0.4454,  0.0715,  ...,  0.3540,  1.7243,  1.4112],
         [-0.0403,  0.6916,  0.6341,  ...,  0.0044,  1.6967,  0.4282],
         [-1.2825,  0.7987, -0.1241,  ...,  0.1317,  0.5469,  1.1835],
         ...,
         [-0.2104,  0.9853,  0.4556,  ...,  1.1126,  2.0493,  0.8599],
         [-0.5527,  0.1245,  0.0780,  ...,  0.5734,  1.0004,  0.3604],
         [ 0.0804,  0.8188, -0.4294,  ...,  0.5195,  1.3229,  1.3237]],

        [[-0.3792,  1.2674, -0.0226,  ...,  1.0939,  2.0311,  0.3100],
         [-0.3644,  0.8349,  0.8723,  ..., -0.1826,  1.2957,  0.5594],
         [-0.4480,  0.5449, -0.2936,  ...,  0.0604,  0.9298,  1.1525],
         ...,
         [-0.7755,  0.9934,  0.2948,  ...,  0.6653,  1.9471,  0.5071],
         [-0.3657, -0.1023,  0.2360,  ...,  0.2808,  0.6907,  1.1132],
         [ 0.0577,  0.9995,  0.4136,  ...,  0.6409,  1.1912,  0.6515]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.8878, -0.2754, -0.9849,  ...,  0.8118,  0.3773, -1.3471],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2943, -0.1416,  0.2148,  ...,  1.1385,  0.5165, -0.2931],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7343, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.6697, -1.2019, -0.2874,  ...,  0.6531,  0.0290, -0.1612],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8275, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.6111,  0.4505,  0.2711,  ...,  0.4336,  1.4592,  1.1121],
         [-1.2466,  0.9363,  0.5530,  ...,  0.3342,  1.4400,  1.2139],
         [-0.3122,  0.9916,  0.2338,  ..., -0.6038,  1.4082,  1.0456],
         ...,
         [-0.0859,  0.4363,  0.7908,  ..., -0.0929,  1.7324,  1.2858],
         [-0.4120,  1.4132,  0.6872,  ...,  0.3875,  1.1420,  0.2537],
         [-0.3519,  1.2512,  0.7751,  ...,  0.3529,  0.7229,  1.5250]],

        [[-0.9945,  0.7564,  0.2648,  ...,  0.5146,  1.3566,  1.3975],
         [-0.6770,  0.2924,  1.1514,  ...,  0.4620,  0.8964,  0.7898],
         [-0.1412,  0.5713,  0.0421,  ..., -0.9496,  1.0896,  0.9363],
         ...,
         [-0.2362,  0.9512, -0.1807,  ...,  0.1766,  1.6902,  0.8657],
         [-0.1818,  0.6586,  0.9244,  ...,  0.7045,  1.4307,  1.1883],
         [-0.3231,  1.3985,  0.4424,  ...,  1.0940,  1.2368,  0.6687]],

        [[-0.5609,  0.6978, -0.0867,  ...,  0.3492,  1.7246,  1.3569],
         [-0.0101,  0.8480,  1.0431,  ...,  0.6361,  1.6079,  0.4688],
         [ 0.3421,  0.6025,  0.1014,  ..., -0.1996,  1.1419,  1.3178],
         ...,
         [ 0.2442,  0.2271,  0.3065,  ..., -0.4268,  1.0876,  1.9056],
         [-0.3094,  0.5220,  0.6529,  ..., -0.1294,  0.7877,  0.7666],
         [ 0.0149,  0.7177, -0.1758,  ..., -0.1245,  1.0651,  0.8662]],

        ...,

        [[-0.6424,  0.8630, -0.2508,  ...,  1.2730,  1.4673,  0.7973],
         [-0.1469,  0.7290,  0.8650,  ...,  0.2314,  1.1840,  1.2656],
         [-0.7597,  0.3249,  0.5272,  ..., -0.2536,  1.1435,  0.3198],
         ...,
         [ 0.0566,  0.4106,  0.2674,  ...,  0.2910,  1.6268,  0.7277],
         [ 0.2656,  0.5959,  0.5090,  ...,  0.1024,  0.9838,  0.3801],
         [-0.4724,  0.9063,  0.1319,  ...,  0.3126,  0.6443,  1.5826]],

        [[-0.2344,  0.3199,  0.2001,  ...,  0.1765,  1.1441,  1.1120],
         [-0.8451,  1.2512,  0.6821,  ...,  0.3250,  0.8248,  1.2676],
         [-0.2591,  0.4553,  0.6381,  ..., -0.0459,  0.7827,  1.6781],
         ...,
         [-0.0557,  0.4728,  1.5188,  ...,  0.0591,  1.7132,  0.9609],
         [-0.0545,  0.4260,  0.1685,  ...,  0.0390,  0.5933,  0.6291],
         [ 0.0427,  0.7912,  0.7709,  ..., -0.2053,  1.3460,  0.7764]],

        [[-1.1515,  0.4564, -0.4640,  ...,  0.4080,  1.6248,  1.3558],
         [-0.4469,  0.2961,  1.2245,  ...,  0.2019,  1.3250,  1.0100],
         [ 0.5318,  0.5985,  0.3521,  ..., -0.5144,  1.1621,  0.9719],
         ...,
         [ 0.4805,  0.3121, -0.0366,  ...,  0.7786,  1.0938,  1.6061],
         [ 0.0811,  0.3175,  0.3526,  ...,  0.4817,  1.1478,  0.2626],
         [ 0.1934,  0.7279,  0.7433,  ...,  0.0326,  1.2223,  1.2761]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.9318,  0.8706,  0.5883,  ...,  0.5851,  0.2144, -0.7742],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.4535, -0.2776, -0.4237,  ...,  0.2400,  0.4592, -0.3486],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7550, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.0364, -0.6665, -0.4692,  ...,  0.6030, -0.3570, -0.9945],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8297, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.5685,  0.8055,  0.4356,  ...,  0.6669,  1.2008,  1.3248],
         [-1.0466,  1.2329,  0.3315,  ...,  0.0741,  1.2851,  0.6568],
         [ 0.0121,  0.8968,  0.2573,  ...,  0.0813,  1.8780,  0.6409],
         ...,
         [-0.2841,  1.1967, -0.2672,  ...,  0.3205,  1.8501,  0.8845],
         [-0.4675,  0.4791,  0.2748,  ..., -0.0493, -0.2013,  1.8792],
         [ 0.3682,  0.7205,  0.3592,  ...,  0.7720,  0.9964,  0.7499]],

        [[-1.0187,  0.2230,  0.3900,  ...,  0.4024,  1.9493,  1.5484],
         [-1.1437,  1.0030,  0.4674,  ...,  0.1960,  1.4211,  1.1132],
         [-0.5663,  1.0169,  0.1144,  ..., -0.0348,  1.3586,  0.7985],
         ...,
         [-0.3343,  0.6147,  0.7647,  ...,  0.2455,  1.5821,  1.4623],
         [-0.2039,  0.7346,  0.6244,  ...,  0.0134,  1.3827,  0.2914],
         [-0.1345,  0.8793, -0.4002,  ...,  0.8028,  1.3097,  1.0139]],

        [[-0.3435,  0.5256,  0.3279,  ..., -0.0442,  1.6575,  1.6582],
         [-0.8225,  1.0209,  0.2439,  ..., -0.0299,  0.9744,  0.4320],
         [-0.6637,  0.9505,  0.4097,  ...,  0.1261,  1.5857,  0.9142],
         ...,
         [-0.1064,  0.6652,  0.8490,  ...,  0.6158,  1.6668,  0.7480],
         [-0.5838,  0.5486,  1.0289,  ..., -0.0024,  0.3619,  1.4650],
         [ 0.6664,  0.8343,  0.1119,  ...,  0.1560,  1.7645,  1.4730]],

        ...,

        [[-0.3311,  0.7112,  0.1169,  ...,  0.7601,  0.9884,  1.5101],
         [-0.5522,  0.4222,  0.9053,  ..., -0.1486,  0.8560,  1.0947],
         [-0.4612,  1.2245,  1.3445,  ..., -0.0884,  1.3271,  1.1036],
         ...,
         [-0.0108,  0.8623,  0.8532,  ...,  0.7129,  1.5056,  0.8182],
         [-0.4626,  0.5694,  0.6569,  ...,  0.0876,  0.8809,  0.9102],
         [-0.7502,  0.9950,  0.5397,  ...,  0.2578,  1.8116,  1.1231]],

        [[-1.1468,  1.3861,  0.5418,  ...,  0.5632,  1.7307,  1.1091],
         [-0.6988,  0.9819,  0.7538,  ...,  0.4264,  0.9657, -0.0741],
         [ 0.1883,  0.5314,  0.4508,  ...,  0.4533,  1.2364,  0.8383],
         ...,
         [ 0.2089,  0.2766,  0.7070,  ...,  0.8040,  1.8629,  1.9215],
         [ 0.1049,  0.4473,  0.6717,  ...,  0.4023,  1.0972,  1.0026],
         [ 0.3403,  0.5146,  0.4065,  ..., -0.1342,  0.8466,  0.9973]],

        [[-0.5172,  0.9103, -0.0381,  ...,  0.4060,  1.4540,  0.4654],
         [-0.2301,  0.4721, -0.1740,  ...,  1.0766,  1.6329,  0.6843],
         [-0.3278,  0.8343,  0.3534,  ..., -0.8676,  1.3160,  0.6356],
         ...,
         [-0.4078,  1.2331,  0.7290,  ...,  0.3119,  2.3013,  1.0992],
         [-0.1368,  0.3881, -0.0740,  ...,  0.7025,  1.2640,  1.2478],
         [ 0.0122,  0.5934,  0.4909,  ...,  0.1758,  1.2860,  1.5394]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-1.0144, -0.0608, -0.6445,  ...,  0.2198,  0.7122, -0.8985],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0232, -0.2028, -0.1453,  ...,  0.4817,  0.6040, -0.2994],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7627, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.6018,  0.9205, -0.2784,  ...,  1.3153, -0.2966, -0.6744],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8264, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]],

        ...,

        [[0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.9269e-01,  1.1238e+00, -1.9311e-01,  ...,  8.9218e-01,
           1.5075e+00,  7.6095e-01],
         [-7.7692e-01,  1.0423e+00,  5.4512e-01,  ...,  7.7735e-01,
           1.8870e+00,  1.0913e-01],
         [ 2.4941e-01,  1.1724e+00,  2.8227e-01,  ...,  3.0331e-01,
           1.9427e+00,  3.2491e-01],
         ...,
         [ 6.7974e-01,  1.0942e+00, -3.7545e-01,  ...,  7.3227e-01,
           1.2838e+00,  1.1782e+00],
         [-4.2177e-02,  1.1778e+00,  1.0596e+00,  ...,  3.9268e-01,
           1.1910e+00,  1.9688e-01],
         [ 3.0304e-01,  5.0351e-01,  5.0279e-01,  ...,  4.4372e-01,
           8.0446e-01,  4.2528e-01]],

        [[-5.3673e-01,  6.4055e-01,  9.1104e-03,  ...,  8.6997e-01,
           1.8685e+00,  1.3093e+00],
         [-1.9537e-01, -1.3875e-01,  9.2542e-01,  ...,  1.5120e-01,
           1.3789e+00,  1.0257e+00],
         [-1.6434e-03,  1.1155e+00,  3.4315e-01,  ...,  4.1336e-02,
           1.3012e+00, -1.1538e-01],
         ...,
         [-2.3334e-01,  8.2245e-01,  5.2803e-01,  ..., -3.0845e-01,
           2.0132e+00,  7.9695e-01],
         [-1.5200e-02,  4.3394e-01,  2.4019e-01,  ...,  1.0580e+00,
           1.5006e+00,  4.5890e-01],
         [-3.8147e-01,  6.4605e-01,  5.9662e-01,  ...,  7.1693e-01,
           1.2793e+00,  1.5583e+00]],

        [[-4.0106e-01,  5.0331e-01,  7.3184e-01,  ...,  2.3381e-01,
           1.0438e+00,  1.8397e+00],
         [-3.9127e-01,  2.7635e-01,  1.4564e+00,  ...,  1.8876e-01,
           2.0992e+00,  8.6387e-01],
         [-1.4534e-01,  6.1317e-01,  7.3722e-01,  ...,  3.4944e-02,
           1.2443e+00,  9.3502e-01],
         ...,
         [-4.7363e-01,  1.1255e+00,  4.7453e-01,  ...,  7.1913e-02,
           1.6346e+00,  1.7864e-01],
         [ 2.8001e-01,  2.8389e-01,  8.9719e-01,  ...,  4.2730e-02,
           1.0932e+00,  1.0720e+00],
         [ 3.7637e-01,  4.5310e-01,  7.5538e-01,  ...,  1.6714e-01,
           1.0660e+00,  1.5587e+00]],

        ...,

        [[-9.0406e-01,  1.0572e+00, -5.5803e-01,  ...,  1.1975e+00,
           1.9856e+00,  9.3331e-01],
         [-9.0578e-01,  1.0017e+00,  9.1910e-01,  ...,  3.0332e-01,
           1.3096e+00,  7.9850e-01],
         [ 6.5142e-01,  8.8333e-01,  2.9835e-01,  ..., -2.3411e-01,
           7.2942e-01,  7.4913e-01],
         ...,
         [-2.3936e-01,  4.1606e-01,  8.5736e-01,  ...,  1.9629e-01,
           1.8346e+00,  1.1354e+00],
         [-2.7507e-01,  1.5418e-01,  6.2194e-01,  ..., -9.5460e-02,
           9.0444e-01,  1.3608e+00],
         [ 7.9452e-01,  1.1361e+00,  6.0804e-01,  ...,  4.4040e-01,
           1.6360e+00,  7.5678e-01]],

        [[-4.3415e-01,  9.4159e-01,  2.1859e-01,  ...,  6.3538e-01,
           1.5264e+00,  1.0357e+00],
         [-8.8634e-01,  1.0230e+00,  1.3105e+00,  ..., -2.8759e-01,
           1.0654e+00,  3.9455e-01],
         [ 2.0788e-01,  1.4082e+00,  3.3636e-01,  ...,  9.4052e-03,
           1.0801e+00,  5.9229e-01],
         ...,
         [ 1.7264e-01,  7.7406e-01,  7.0253e-01,  ...,  1.4299e-01,
           1.7559e+00,  1.2860e+00],
         [ 3.5335e-01,  8.8338e-01,  1.4316e+00,  ...,  3.3530e-01,
           8.6108e-01,  6.4656e-01],
         [ 9.0797e-02,  7.6239e-01,  8.1346e-01,  ..., -7.6888e-02,
           1.4472e+00,  8.7937e-01]],

        [[-5.2730e-01,  9.1188e-01,  6.1534e-02,  ...,  4.7069e-01,
           1.7000e+00,  1.5572e+00],
         [-4.7432e-01,  1.5536e+00,  1.2516e-01,  ...,  1.4570e-01,
           1.2277e+00,  5.2371e-01],
         [ 5.1360e-01,  1.1057e+00,  4.3703e-01,  ..., -3.1529e-01,
           1.6100e+00,  1.2679e-01],
         ...,
         [ 2.1596e-01,  6.3732e-01,  2.6702e-01,  ...,  2.6686e-01,
           1.8684e+00,  6.5007e-01],
         [ 3.0770e-01,  1.7895e-01,  1.1938e+00,  ..., -1.8976e-01,
           4.9145e-01,  1.3266e+00],
         [ 5.3091e-01,  1.2039e+00,  7.3089e-01,  ...,  6.7622e-01,
           6.3909e-01,  7.7918e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.1870, -0.2064, -0.3613,  ...,  0.2979, -0.1694, -1.3329],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.7423,  0.6700, -0.4217,  ...,  0.9405,  0.4467,  0.0390],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7777, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5069, -1.0263, -1.2405,  ...,  0.7610,  0.4092, -0.8724],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8208, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        ...,

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-1.0934,  0.8784,  0.8571,  ...,  0.8547,  1.9220,  1.4225],
         [-0.1638,  0.7533,  0.4254,  ...,  0.6581,  2.1815,  0.9086],
         [-0.0716,  1.5348,  0.4814,  ...,  0.0181,  1.5367,  0.4540],
         ...,
         [ 0.1643,  0.5872,  0.5960,  ...,  0.1433,  1.7698,  0.7421],
         [-0.3705,  0.6593,  0.9422,  ...,  0.2339,  0.3517,  1.0450],
         [ 0.2788,  1.0983,  1.1102,  ...,  0.5423,  0.8496,  0.9627]],

        [[-0.7162,  0.8630,  0.7788,  ...,  1.2436,  1.3806,  1.5119],
         [-0.5306,  0.4292,  1.2608,  ..., -0.1946,  1.4388,  0.7309],
         [ 0.1307,  1.1882,  0.2353,  ..., -0.2359,  2.2358,  0.6343],
         ...,
         [-0.0712,  1.3468,  0.3290,  ...,  0.3368,  2.3150,  0.7290],
         [-0.3005,  0.8793,  0.9512,  ..., -0.0334,  0.5217,  1.1524],
         [-0.5035,  1.2837,  0.8194,  ...,  0.3324,  1.3298,  1.0319]],

        [[-0.7115,  0.5181,  0.4749,  ...,  0.7245,  1.8399,  1.1024],
         [-0.4065,  0.7815,  0.8390,  ...,  0.2845,  1.2480,  0.8616],
         [-0.2448,  1.0352,  0.7421,  ..., -0.2767,  1.0227,  0.7694],
         ...,
         [-0.4172,  0.7931,  0.5853,  ...,  0.5725,  2.0189,  1.5288],
         [ 0.0697,  0.2517,  1.2530,  ..., -0.0063,  1.4732,  0.4834],
         [ 0.2771,  0.5791,  0.9346,  ...,  0.4454,  1.2305,  0.9547]],

        ...,

        [[-0.4573,  1.4325,  0.8977,  ...,  1.1233,  1.6503,  0.7439],
         [-0.7536,  0.7623,  0.4814,  ...,  0.7251,  2.0599,  1.5142],
         [ 0.3683,  0.6308,  0.3928,  ..., -0.2313,  1.1270,  0.8175],
         ...,
         [ 0.2945,  0.9790,  0.4308,  ..., -0.1675,  2.0242,  1.0243],
         [-0.2775,  0.4595,  0.3288,  ...,  1.4368,  0.6359,  1.5184],
         [ 0.2830,  0.4482,  0.6786,  ...,  0.4787,  1.1806,  1.6521]],

        [[-0.2864, -0.0120,  0.8924,  ...,  0.5017,  1.4437,  1.4770],
         [-1.0007,  1.1542,  0.7680,  ..., -0.3644,  0.6113,  0.9056],
         [ 0.0361,  1.2191,  0.5433,  ..., -0.7757,  1.3285,  0.3747],
         ...,
         [-0.0653,  1.0607,  1.1795,  ...,  0.4622,  1.7967,  1.3439],
         [-0.2551,  0.8086,  1.3768,  ...,  0.6007,  1.6468,  0.2347],
         [-0.1311,  0.6446,  0.5635,  ...,  0.3855,  1.9269,  1.0898]],

        [[-0.1384,  1.1227,  0.2161,  ...,  0.1029,  1.7421,  0.5267],
         [-0.5788,  1.7324,  1.4510,  ...,  0.6286,  1.2842,  0.7137],
         [ 0.5774,  1.2758,  0.6300,  ...,  0.1989,  1.2212,  0.1405],
         ...,
         [-0.1441,  0.9161,  0.8771,  ...,  0.6550,  1.8762,  1.3572],
         [-0.1433,  0.6790,  0.6782,  ...,  0.2216,  1.4487,  0.5689],
         [-0.1179,  0.9484,  0.6837,  ...,  0.6626,  1.2734,  1.0377]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.1373, -0.2450, -0.8253,  ...,  1.0885,  0.2454, -0.0733],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6993, -0.4521, -0.4236,  ...,  0.5278, -0.3809, -1.0681],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7894, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.9907, -0.3218, -0.7654,  ...,  0.1523,  0.0341, -0.6222],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8136, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.4652,  1.3605,  0.1964,  ..., -0.1320,  1.6852,  0.5630],
         [-0.6957,  0.6292,  1.1009,  ...,  0.6878,  1.9246,  0.8662],
         [-0.0933,  1.3908,  0.4901,  ..., -0.3119,  1.3203,  0.6448],
         ...,
         [ 0.3643,  0.5945,  0.8925,  ...,  0.3853,  2.0872,  0.9131],
         [-0.1435,  1.1046,  0.7918,  ...,  0.1327,  1.1220,  0.8956],
         [ 0.6077,  1.3499,  0.7888,  ...,  0.1776,  1.0252,  0.5183]],

        [[-1.0286,  1.0400,  0.8531,  ...,  0.6940,  1.3132,  1.1860],
         [-0.5884,  0.9632,  1.5164,  ...,  0.5225,  0.9157,  0.8276],
         [-0.3676,  0.7981,  0.4212,  ...,  0.0862,  1.5745,  0.6515],
         ...,
         [-0.3093,  0.7653,  1.1625,  ...,  0.2529,  1.8145,  0.7161],
         [-0.0421,  1.0817,  0.7712,  ...,  0.1083,  0.3840,  0.7341],
         [ 0.3238,  0.7875,  0.8940,  ...,  1.0851,  1.4152,  0.7410]],

        [[-0.0387,  1.1581,  0.3425,  ...,  0.4638,  1.9242,  0.6650],
         [-0.7167,  0.5556,  1.4617,  ...,  0.2836,  1.4737,  0.9701],
         [ 0.3726,  1.4831,  0.8163,  ...,  0.1383,  1.4468,  0.3087],
         ...,
         [-0.5113,  0.6917,  0.6158,  ...,  0.3198,  2.2461,  1.4359],
         [-0.0798,  0.5777,  1.0636,  ...,  0.5175,  1.0131,  1.0616],
         [ 0.4244,  1.3271,  0.0389,  ...,  0.3973,  1.0885,  1.1837]],

        ...,

        [[-0.5046,  1.0064,  0.8349,  ..., -0.1177,  2.1738,  1.3693],
         [-0.2785,  0.7499,  1.4185,  ...,  0.7328,  2.0494,  0.5002],
         [ 0.1428,  0.9668,  1.4493,  ...,  0.3552,  0.6771,  1.2660],
         ...,
         [ 0.3163,  0.9004,  0.6445,  ...,  0.6046,  1.0405,  1.0268],
         [-0.0620,  0.8502,  0.5499,  ...,  0.4822,  1.5458,  0.8017],
         [-0.0674,  0.9516,  0.9141,  ...,  0.9063,  1.5709,  0.8425]],

        [[-0.7292,  0.9291,  0.4584,  ...,  0.7399,  1.5325,  1.2276],
         [-0.4010,  1.4077,  1.1420,  ...,  0.3801,  1.5958,  0.4294],
         [ 0.4123,  0.5992,  0.3862,  ..., -0.1113,  1.4103,  0.6946],
         ...,
         [ 0.1272,  1.0468,  1.3351,  ..., -0.1014,  1.9554,  0.8529],
         [-0.3040,  0.8159,  0.8594,  ..., -0.0986,  0.7279,  1.2120],
         [ 0.1929,  0.8675,  0.5281,  ...,  0.5504,  1.5173,  1.1346]],

        [[-0.8081,  1.2596,  0.5546,  ...,  0.6525,  1.4839,  1.3822],
         [-0.4591,  0.6641,  1.5190,  ...,  0.4773,  1.1927,  1.0939],
         [ 0.1203,  1.4357, -0.1031,  ...,  0.0276,  1.2689,  0.4317],
         ...,
         [ 0.4593,  0.5416,  1.2215,  ..., -0.1283,  1.6308,  1.4326],
         [-0.1900,  0.3058,  0.7846,  ...,  0.9295,  1.2726,  1.4611],
         [-0.3175,  0.9137,  0.4693,  ...,  0.6351,  1.6041,  0.5200]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0998,  0.4560, -0.4041,  ...,  0.9421, -0.4120, -1.8603],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.4440,  0.3280, -0.3239,  ...,  0.4763, -0.3798, -0.6727],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8001, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.3336, -0.1286, -0.3267,  ...,  0.3430, -0.6908, -0.9312],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8219, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.2265,  0.6540,  0.3921,  ...,  0.6120,  1.2520,  0.3574],
         [ 0.0097,  0.7385,  1.4378,  ...,  0.1082,  1.3554,  0.2968],
         [ 0.3616,  1.3616,  1.1239,  ...,  0.0164,  0.7717,  0.0068],
         ...,
         [-0.2358,  1.1878,  0.2646,  ...,  0.2453,  1.7365,  0.4353],
         [ 0.5991,  0.8032,  0.4784,  ...,  0.5335,  1.8517, -0.6945],
         [ 0.8994,  0.6206,  0.9125,  ...,  0.6927,  1.3574,  0.4778]],

        [[-0.4975,  1.4054,  0.6330,  ...,  1.3588,  1.9699,  0.7630],
         [ 0.0175,  0.6744,  1.3930,  ...,  0.2418,  1.5537,  0.0966],
         [-0.2485,  1.7216,  0.8534,  ..., -0.1913,  1.8068,  0.4503],
         ...,
         [-0.2000,  0.0802,  0.7144,  ...,  0.3449,  1.6850,  0.9945],
         [-0.0534,  0.6095,  1.5385,  ..., -0.0887,  0.7994,  0.8241],
         [ 0.1722,  0.6043,  0.6030,  ...,  0.4890,  1.5364,  1.2455]],

        [[ 0.0633,  0.8218,  1.1545,  ...,  0.3802,  1.9915,  1.0238],
         [-0.4219,  0.3454,  1.4129,  ...,  0.2590,  1.8136,  0.9504],
         [-0.5791,  0.6142,  0.5347,  ...,  0.6658,  1.3036,  0.7571],
         ...,
         [ 0.3455,  1.0697,  1.0237,  ...,  0.7548,  2.0895,  0.5677],
         [-0.1325,  0.6614,  0.9878,  ...,  0.3947,  1.3414,  0.5055],
         [-0.2865,  1.2544,  0.7480,  ...,  0.7639,  1.7693,  0.9161]],

        ...,

        [[-0.4123,  0.8899,  1.0174,  ...,  0.4591,  2.2148,  0.5620],
         [-0.2635,  0.5069,  0.8615,  ...,  0.5816,  1.2818,  0.5532],
         [-0.0535,  0.9623,  0.4276,  ...,  0.1236,  1.3971,  0.4503],
         ...,
         [ 0.0909,  1.4975,  1.0022,  ...,  0.4590,  2.1626,  0.3843],
         [ 0.2720,  0.5632,  0.6550,  ...,  0.6139,  0.9566,  0.7497],
         [ 0.2968,  0.8744,  0.2254,  ...,  0.1822,  1.1198,  0.9976]],

        [[-0.1138,  0.5866,  0.8458,  ...,  0.2481,  2.1195,  0.8699],
         [-0.2974,  1.1327,  0.9152,  ...,  0.6303,  2.1611,  0.2614],
         [-0.1683,  1.6594,  0.8526,  ...,  0.6744,  1.8282,  0.5355],
         ...,
         [ 0.5313,  1.3083,  1.0626,  ..., -0.0277,  1.9344,  0.2301],
         [-0.4096,  0.2587,  0.9650,  ..., -0.0080,  0.9676,  0.3103],
         [ 0.0346,  0.5610,  0.2935,  ...,  0.6192,  1.2159,  0.4446]],

        [[-0.2194,  0.7314,  0.7152,  ...,  0.9382,  1.8606,  0.5280],
         [-0.3917,  0.8337,  1.0200,  ..., -0.4599,  1.7838,  0.2052],
         [ 0.1824,  1.3794,  0.7208,  ..., -0.3999,  1.9275,  0.0962],
         ...,
         [ 0.4277,  0.8565,  0.9818,  ...,  0.3605,  2.0601,  1.2021],
         [ 0.0176,  0.8348,  1.2878,  ...,  0.9290,  1.3290,  0.0593],
         [ 0.1138,  0.8495,  0.9796,  ...,  0.4421,  1.2931,  0.9112]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.5900,  0.2188, -0.3271,  ...,  0.4269,  0.1575, -1.0790],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2047, -0.4908, -0.3459,  ...,  0.7166,  0.2201, -0.7909],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8070, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.7271, -0.9042, -0.6134,  ...,  0.3470, -0.2369, -0.2224],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8131, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636]],

        ...,

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.1313,  1.0388,  0.8419,  ...,  0.8791,  2.3206,  0.9819],
         [-0.4485,  1.5960,  1.2684,  ...,  0.8599,  1.3930,  0.4673],
         [ 0.3055,  1.2128,  0.8287,  ...,  0.3335,  1.6772,  0.5958],
         ...,
         [ 0.0081,  1.4720,  0.8699,  ...,  0.0885,  1.9454,  0.3391],
         [ 0.5491,  0.8571,  1.6278,  ..., -0.1084,  1.0824,  0.2450],
         [-0.2507,  0.8474,  1.7134,  ...,  0.3645,  1.5344,  1.1634]],

        [[-0.5350,  1.4214,  0.3121,  ...,  1.1687,  1.8786,  1.3595],
         [ 0.1034,  0.4287,  1.9221,  ...,  0.3231,  0.9789,  0.9871],
         [-0.1828,  1.2944,  0.2880,  ...,  0.8020,  2.0915,  0.3757],
         ...,
         [-0.0408,  0.3213,  0.6878,  ..., -0.2375,  2.2931,  0.9236],
         [ 0.0689, -0.1242,  0.9492,  ..., -0.0348,  0.8653,  0.5340],
         [-0.2383,  1.0477,  0.6733,  ...,  0.6531,  1.5465,  1.0485]],

        [[-0.4527,  0.8771,  0.6812,  ...,  1.1017,  1.8980,  0.9377],
         [-0.4856,  1.3693,  1.0039,  ..., -0.2261,  0.8753,  0.4199],
         [-0.2909,  1.4840,  1.1733,  ...,  0.2941,  2.0190,  0.5106],
         ...,
         [-0.4065,  1.1392,  0.7791,  ...,  0.2778,  0.7509,  1.0132],
         [ 0.2083,  0.9201,  1.0880,  ...,  0.6076,  0.7895,  0.9187],
         [-0.1938,  1.0728,  0.9733,  ...,  0.8014,  1.5221,  0.3893]],

        ...,

        [[-0.7067,  1.8826,  1.4097,  ..., -0.0296,  2.0014,  0.4555],
         [-0.5484,  0.1040,  1.5708,  ..., -0.3281,  1.2162,  0.9456],
         [ 0.3845,  1.2548,  1.2665,  ...,  0.3207,  1.7030,  0.3986],
         ...,
         [-0.1297,  1.0861,  1.5033,  ...,  0.3717,  1.1914,  0.3007],
         [ 0.0896,  0.6236,  0.7796,  ...,  0.3547,  0.4687,  0.3702],
         [-0.3249,  0.8536,  1.1797,  ...,  0.4857,  1.6296,  1.0339]],

        [[-0.0485,  0.7163,  0.9261,  ...,  0.4550,  1.8612,  0.9257],
         [-0.3723,  0.7327,  1.8290,  ..., -0.0864,  1.3257, -0.1668],
         [-0.6605,  0.9188,  1.0904,  ..., -0.0080,  1.3913,  1.0953],
         ...,
         [-0.1066,  1.0219,  1.3602,  ..., -0.0708,  2.1365,  0.6957],
         [ 0.0296,  1.2535,  1.6001,  ..., -0.0617,  1.1536,  0.2219],
         [-0.0884,  0.7262,  0.6983,  ...,  0.5732,  0.3793,  0.9865]],

        [[-0.2953,  1.0300,  0.8344,  ...,  1.0825,  1.8973,  1.0051],
         [-0.2002,  0.5042,  0.5723,  ...,  0.2727,  1.4488,  0.6079],
         [-0.0874,  0.6287,  1.2749,  ...,  0.5202,  1.9215,  0.6339],
         ...,
         [ 0.9005,  0.9473,  1.2423,  ..., -0.1846,  1.8891,  0.5786],
         [ 0.3249,  1.1883,  1.4131,  ...,  0.3382,  1.7142,  0.1069],
         [ 0.2137,  0.5700,  1.0946,  ...,  0.7361,  1.5547,  0.8047]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-1.4212, -0.9202,  0.5103,  ...,  0.6473,  0.1728, -1.4448],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3133,  0.2133,  0.0423,  ...,  1.2158,  0.2290, -0.3616],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8069, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.2409,  0.1912, -0.2198,  ...,  0.3547,  0.5610, -0.2310],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8254, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        ...,

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.8049,  1.0654,  0.8564,  ...,  1.5424,  1.6410,  0.8376],
         [-0.0728,  1.3440,  1.4342,  ..., -0.2844,  1.7497,  0.6721],
         [-0.0111,  0.9940,  1.0843,  ...,  0.1636,  1.3296,  0.8087],
         ...,
         [ 0.5249,  0.8008,  1.3454,  ...,  0.2910,  1.7379,  0.7234],
         [-0.1028,  0.6937,  0.8661,  ...,  0.9865,  1.3435,  0.6612],
         [-0.1747,  0.6693,  1.3746,  ..., -0.1735,  1.4328,  1.3463]],

        [[-0.4030,  0.5820,  1.0096,  ...,  0.7502,  1.7847,  1.4209],
         [-0.2764,  1.2890,  0.6775,  ...,  0.5803,  1.6533,  0.2465],
         [ 0.2458,  1.1399,  0.5421,  ...,  0.3178,  1.4935, -0.0249],
         ...,
         [ 0.3454,  1.2332,  1.2648,  ...,  0.3643,  1.9536,  0.3765],
         [-0.0062,  0.6511,  1.5169,  ...,  0.2078,  1.9317,  0.1750],
         [ 0.0979,  1.3656,  1.4597,  ...,  0.3091,  1.5113,  0.0537]],

        [[-0.9224,  1.1423,  0.5507,  ...,  0.9409,  2.0972,  0.6363],
         [-0.0360,  1.6684,  0.9759,  ...,  1.0269,  1.5474,  0.7426],
         [-0.0983,  1.3645,  1.0773,  ...,  0.2864,  1.5271,  0.4716],
         ...,
         [-0.1461,  1.0314,  0.8100,  ...,  0.3304,  1.6218,  0.7675],
         [-0.4397, -0.0448,  1.5576,  ...,  0.1041,  1.0776,  0.7300],
         [ 0.1309,  1.1580,  1.3145,  ...,  0.9375,  1.4435,  0.1918]],

        ...,

        [[ 0.0754,  1.5083,  1.3188,  ...,  0.8078,  2.5137, -0.1093],
         [-0.7025,  1.2266,  1.0940,  ...,  0.3399,  1.5731,  0.4778],
         [-0.3798,  1.3821,  0.7502,  ...,  0.4815,  1.3995,  0.2704],
         ...,
         [ 0.1368,  1.1434,  0.6176,  ...,  0.5846,  1.5187,  0.0761],
         [ 0.2935,  0.4487,  1.6003,  ..., -0.0075,  1.1169,  0.2833],
         [ 0.4872,  1.2249,  0.9796,  ...,  0.3165,  0.7112,  0.6696]],

        [[-0.1927,  0.7831,  0.9063,  ..., -0.0880,  1.6384,  0.4095],
         [-0.0238,  0.7868,  1.3919,  ...,  0.0663,  1.9429,  0.2956],
         [ 0.0997,  1.4864,  1.0414,  ...,  0.3464,  1.7216,  0.3739],
         ...,
         [ 0.5043,  0.6465,  1.2258,  ...,  0.1062,  1.8750,  0.5142],
         [-0.4037,  0.9846,  1.5216,  ..., -0.3710,  0.6228,  0.9594],
         [ 0.4285,  0.9270,  0.6724,  ...,  1.2405,  1.2861,  1.0055]],

        [[-0.0895,  1.4095,  1.0545,  ...,  0.8108,  1.6472,  0.4200],
         [ 0.5096,  0.7799,  1.9080,  ...,  0.4606,  1.5385,  0.1784],
         [ 0.3760,  1.1582,  1.6658,  ..., -0.2694,  1.4153,  0.5300],
         ...,
         [-0.1244,  1.1072,  1.2130,  ...,  0.3874,  1.6141, -0.1856],
         [-0.2601,  0.3869,  1.5409,  ..., -0.1639,  1.6202,  0.9747],
         [ 0.3820,  1.3817,  0.8284,  ...,  0.6973,  1.3036,  0.4598]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.6508, -1.0277, -0.8489,  ...,  0.2528, -0.9569, -1.5619],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3889,  0.3361, -0.7148,  ...,  0.2516,  0.3656, -0.5340],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8188, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.2315, -0.1600, -0.9270,  ...,  0.4118,  0.0728, -0.6163],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8109, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.2954,  1.0924,  0.5143,  ...,  0.5715,  1.9507,  0.6678],
         [-0.5251,  1.3374,  1.1474,  ...,  0.8922,  1.1560,  0.5865],
         [ 0.6935,  1.0977,  1.0312,  ...,  0.1238,  1.5540,  0.3918],
         ...,
         [ 0.2786,  0.7948,  0.7714,  ...,  0.3613,  1.6541,  0.8683],
         [ 0.4087,  0.3333,  2.1652,  ..., -0.1678,  1.2821,  0.3087],
         [-0.0479,  1.2688,  1.8047,  ...,  0.2064,  1.9953,  0.8214]],

        [[-0.5793,  1.1392,  0.8894,  ...,  0.6634,  1.7692,  0.2583],
         [-0.3258,  1.3522,  1.5426,  ...,  0.4578,  1.8740,  0.0275],
         [-0.2394,  1.4412,  1.1303,  ..., -0.1670,  1.3389,  0.7344],
         ...,
         [ 0.1408,  1.7386,  1.4771,  ...,  0.9304,  2.2508,  0.3393],
         [ 0.0145,  0.7924,  1.3822,  ...,  0.3116,  0.6755,  0.4410],
         [ 0.0816,  1.4097,  1.4934,  ...,  0.8262,  1.2549, -0.0099]],

        [[-0.7724,  1.2185,  1.4134,  ...,  0.6754,  1.8390,  1.3534],
         [-0.1371,  0.9966,  1.7615,  ...,  0.0337,  1.5363, -0.2089],
         [ 0.3219,  0.9084,  1.1393,  ...,  0.6328,  1.5053,  0.1933],
         ...,
         [ 0.3232,  1.3662,  1.0922,  ...,  0.5208,  1.8587,  0.4414],
         [ 0.2007,  1.8845,  1.2578,  ...,  0.4862,  1.0584, -0.1122],
         [ 0.1200,  0.5339,  0.7311,  ...,  0.5202,  1.7244,  1.1565]],

        ...,

        [[-0.3251,  0.7669,  1.6275,  ...,  0.3779,  1.9304,  0.9508],
         [-0.2445,  1.2604,  1.8526,  ...,  0.5621,  1.1913,  0.5634],
         [ 0.2394,  1.1185,  1.0272,  ...,  0.1854,  1.7654,  0.2689],
         ...,
         [-0.0272,  1.3672,  1.7522,  ...,  0.6710,  2.1258,  0.4030],
         [ 0.0766,  0.6350,  1.7578,  ..., -0.0511,  1.4409,  0.7388],
         [ 0.2114,  1.8355,  1.1431,  ...,  1.2117,  1.6743,  0.5615]],

        [[-0.5703,  1.0695,  1.4292,  ...,  1.3208,  1.6823,  0.7492],
         [-0.0074,  1.0437,  1.2664,  ...,  1.0383,  1.7603,  0.9980],
         [ 0.0670,  1.1228,  1.1361,  ..., -0.0268,  1.5451,  0.6438],
         ...,
         [ 0.6258,  1.3752,  1.2719,  ...,  0.0317,  1.8831,  0.2887],
         [-0.4179,  0.9374,  0.8169,  ...,  0.4241,  1.8232,  1.1498],
         [ 0.5340,  0.8436,  1.7063,  ...,  0.4864,  1.2088,  1.0910]],

        [[-0.1999,  1.1064,  0.9009,  ..., -0.0437,  1.4414,  1.4901],
         [ 0.3331,  0.4893,  1.8650,  ...,  0.4830,  1.7920,  0.9948],
         [ 0.0288,  0.9621,  0.9728,  ...,  0.0242,  1.7871,  0.8087],
         ...,
         [ 0.1184,  1.0032,  0.8192,  ...,  0.4313,  2.2342,  0.1431],
         [-0.4132,  0.9817,  1.3131,  ..., -0.0682,  0.7587,  0.6852],
         [ 0.6358,  1.2817,  1.4067,  ...,  0.8122,  1.4144,  0.8644]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-1.0412, -0.6006, -0.5449,  ...,  0.2005, -0.8551, -1.8490],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.5294, -0.2060, -0.3558,  ...,  0.8921,  0.7457, -0.8734],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8171, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.8908, -0.0526, -0.2270,  ...,  0.7817, -0.4665, -0.2552],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8229, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.0514,  0.9457,  1.0981,  ...,  0.8678,  1.8984,  0.0985],
         [-0.2653,  1.0757,  1.8072,  ...,  0.2336,  1.3649,  0.2655],
         [ 0.5914,  1.5878,  1.1133,  ...,  0.1416,  2.1091,  0.2078],
         ...,
         [ 0.7282,  1.3815,  1.6457,  ...,  0.1108,  1.8063,  0.6937],
         [ 0.0595,  1.3530,  1.4561,  ...,  0.1845,  0.2695,  0.6084],
         [ 0.2152,  1.2192,  1.1759,  ...,  1.0627,  1.4204,  1.0675]],

        [[-0.2724,  1.2315,  1.4398,  ...,  0.9529,  1.7926,  0.8753],
         [-0.6172,  0.9434,  1.9286,  ...,  0.0538,  0.9211,  0.9150],
         [-0.0872,  1.0025,  2.0424,  ...,  0.3730,  1.3572,  0.8742],
         ...,
         [ 0.5825,  1.2036,  1.5799,  ...,  1.0571,  2.6292,  0.6521],
         [ 0.6547,  0.9983,  1.7095,  ...,  0.1323,  1.3615,  0.5588],
         [-0.2731,  0.4614,  1.3994,  ...,  0.6522,  0.8512,  0.7487]],

        [[ 0.4087,  1.7405,  0.8147,  ...,  0.5902,  1.2406,  0.9393],
         [-0.1705,  0.7534,  1.1731,  ...,  0.5827,  1.4937,  0.6137],
         [ 0.3091,  1.6632,  1.0201,  ...,  0.4525,  1.8791, -0.5315],
         ...,
         [-0.2467,  0.7995,  1.2093,  ...,  0.9298,  1.8169,  0.3719],
         [-0.0622,  0.2899,  2.0516,  ..., -0.7350,  0.8656,  0.6610],
         [ 0.4577,  1.2891,  1.6956,  ...,  0.3324,  1.2948,  0.5588]],

        ...,

        [[ 0.1181,  1.0129,  0.8155,  ...,  0.7184,  1.4458,  0.4542],
         [ 0.0941,  0.7292,  1.9658,  ...,  0.3373,  1.6933,  0.4972],
         [ 0.3824,  0.9531,  1.4532,  ...,  0.2477,  1.3626,  0.6566],
         ...,
         [ 0.6454,  1.2322,  1.4995,  ...,  0.8677,  1.7643,  0.4508],
         [ 0.4725, -0.0190,  1.5544,  ..., -0.1924,  0.9929,  0.4235],
         [ 0.2945,  1.5019,  1.3290,  ...,  1.1642,  1.5347,  0.7395]],

        [[-0.5423,  1.0224,  1.6629,  ...,  0.3649,  2.0122, -0.0206],
         [-0.2098,  1.0395,  2.3554,  ...,  0.0975,  1.5277,  0.2403],
         [-0.0571,  1.1977,  1.4599,  ...,  0.3586,  1.7294, -0.2246],
         ...,
         [-0.3472,  0.3564,  0.7941,  ...,  0.0762,  2.2180,  1.3985],
         [-0.1889,  0.7926,  1.7358,  ..., -0.2698,  1.1547,  0.4647],
         [ 0.1489,  1.2295,  1.7943,  ...,  0.5784,  1.3943,  0.3977]],

        [[-1.1578,  0.9692,  1.1129,  ...,  0.8607,  1.9094,  1.0468],
         [ 0.2710,  0.4100,  1.3960,  ...,  0.6822,  2.0426,  0.3935],
         [-0.0631,  0.9798,  1.7860,  ...,  0.1265,  1.2480,  1.1853],
         ...,
         [ 0.1067,  1.2407,  1.1654,  ...,  0.1595,  1.6258,  0.8558],
         [-0.2943,  0.9161,  1.6659,  ...,  0.3189,  0.6228,  0.6061],
         [ 0.3144,  1.3819,  1.4852,  ...,  0.2823,  1.4289,  0.2292]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.0102, -0.9092, -0.6159,  ..., -0.3174, -0.8183, -1.2728],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6775,  0.0865, -0.1225,  ..., -0.1614,  0.5639,  0.6117],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8118, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.0977, -0.1354, -0.4895,  ..., -0.2945, -0.6084, -0.1740],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8235, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.5855,  1.5278,  1.5132,  ...,  0.5484,  1.5616,  0.8359],
         [ 0.0491,  1.0069,  1.5772,  ...,  0.2916,  2.0227,  0.4787],
         [ 0.1183,  0.9951,  1.4823,  ..., -0.1748,  1.6233,  0.6893],
         ...,
         [ 0.5035,  1.4741,  1.5325,  ..., -0.1619,  1.3820, -0.2125],
         [ 0.0689,  0.6433,  2.0053,  ...,  0.3389,  1.6147,  0.7056],
         [ 0.9803,  1.2801,  1.4828,  ...,  0.1060,  2.0153, -0.0723]],

        [[ 0.2783,  1.2122,  1.5440,  ...,  0.9392,  1.4079,  0.2807],
         [-0.0914,  1.4694,  1.8334,  ...,  0.9894,  1.9766,  0.4567],
         [ 0.7355,  1.7208,  2.0230,  ..., -0.0636,  1.8597,  0.3847],
         ...,
         [-0.6837,  0.8182,  1.3871,  ...,  0.6448,  2.0478,  0.9639],
         [-0.2339,  0.5201,  1.5267,  ...,  0.0392,  0.9970,  1.0854],
         [ 0.5893,  1.4968,  1.6050,  ...,  0.4535,  1.7103,  0.8214]],

        [[ 0.1237,  0.7803,  1.5737,  ...,  0.9066,  2.2692,  0.4592],
         [-0.6132,  1.1931,  1.7082,  ...,  0.3833,  2.0598,  0.3335],
         [ 0.5485,  0.9610,  1.6569,  ...,  0.3184,  1.2920,  0.5549],
         ...,
         [ 0.6387,  0.8425,  1.4664,  ...,  0.5823,  1.8949,  1.0590],
         [ 0.3848,  0.7849,  0.4663,  ...,  0.4854,  1.1289,  0.0971],
         [ 0.6934,  1.0697,  1.6662,  ...,  0.6353,  1.7347,  0.1783]],

        ...,

        [[-0.1498,  0.9603,  1.4671,  ...,  0.5402,  2.2526,  0.3840],
         [-0.0301,  0.7722,  2.0181,  ..., -0.2214,  1.5045,  0.6281],
         [ 0.3435,  0.7216,  1.2209,  ..., -0.1101,  1.0755,  0.7789],
         ...,
         [ 0.3989,  1.0830,  1.5469,  ...,  0.3467,  2.2413,  0.3377],
         [ 0.0537,  0.6816,  2.0286,  ...,  0.0382,  2.0813,  0.4145],
         [ 0.1033,  1.3402,  1.3367,  ...,  0.6387,  1.2899,  0.1999]],

        [[ 0.4516,  1.2315,  1.3391,  ...,  0.5383,  1.7886,  0.3191],
         [ 0.1294,  1.1680,  1.6647,  ...,  0.3215,  1.6286,  0.4339],
         [ 0.1612,  1.3936,  1.6021,  ...,  0.1910,  1.7041,  0.4006],
         ...,
         [ 0.5900,  0.9484,  1.5119,  ...,  0.1305,  1.7766,  0.2875],
         [ 0.2248,  0.5390,  1.4080,  ...,  0.6530,  1.5558,  0.9361],
         [ 0.0860,  0.6472,  1.3014,  ...,  0.7119,  1.6770,  0.6393]],

        [[-0.2863,  0.7577,  1.6869,  ...,  0.4248,  2.0331,  0.3307],
         [-0.0786,  1.3496,  1.6694,  ...,  0.1190,  1.4739, -0.5334],
         [ 0.1637,  1.2363,  2.0984,  ...,  0.2135,  1.5694, -0.0637],
         ...,
         [ 0.8294,  1.2408,  2.1559,  ...,  0.3995,  2.0432,  0.5006],
         [ 0.0622,  0.3401,  2.1623,  ..., -0.1933,  1.3343, -0.2162],
         [-0.0860,  1.8357,  1.8028,  ...,  0.8787,  2.0924,  0.8024]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.9668, -0.9296, -0.5026,  ..., -0.6843, -0.5031, -1.2225],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.7939, -0.1448, -0.2881,  ...,  0.7449,  0.2710,  0.4030],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8155, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.6252, -0.4373, -0.1612,  ..., -0.2718,  0.0910,  0.0532],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8186, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]],

        ...,

        [[0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636],
         [0.0000, 0.0000, 0.4585,  ..., 0.8462, 0.5555, 0.8917]],

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-3.2979e-01,  8.1202e-01,  2.1456e+00,  ...,  8.5199e-01,
           1.9005e+00,  1.0779e+00],
         [ 3.1282e-02,  1.5659e+00,  1.8969e+00,  ...,  8.4263e-01,
           2.2639e+00,  7.2560e-02],
         [ 3.4971e-01,  1.5382e+00,  1.8758e+00,  ...,  1.4226e-01,
           1.4436e+00,  5.0509e-01],
         ...,
         [ 5.4891e-01,  9.7469e-01,  1.6863e+00,  ...,  9.1010e-01,
           2.0534e+00, -1.8994e-02],
         [ 5.7107e-01,  8.4473e-01,  1.5447e+00,  ...,  1.2163e+00,
           1.2608e+00,  6.1869e-01],
         [ 1.3778e-01,  8.6088e-01,  1.0468e+00,  ...,  5.1093e-01,
           1.5830e+00,  1.0933e+00]],

        [[-2.7498e-01,  7.5043e-01,  1.4692e+00,  ...,  7.2021e-02,
           1.7024e+00,  6.7854e-01],
         [-9.5434e-02,  1.0526e+00,  1.5661e+00,  ...,  9.0080e-01,
           1.6014e+00,  1.0430e-01],
         [ 5.9733e-01,  1.2456e+00,  1.6480e+00,  ..., -1.1416e-01,
           1.9281e+00,  4.5960e-02],
         ...,
         [ 6.3891e-01,  1.2884e+00,  1.0393e+00,  ...,  2.5534e-01,
           1.8808e+00, -4.3219e-02],
         [-2.4493e-01,  6.4606e-01,  1.0934e+00,  ...,  8.6936e-01,
           1.4081e+00,  4.2842e-01],
         [ 5.5862e-01,  1.2421e+00,  2.1834e+00,  ...,  2.1139e-01,
           1.7892e+00,  5.0105e-01]],

        [[-5.3613e-01,  1.1889e+00,  2.1588e+00,  ...,  7.0902e-01,
           1.9725e+00,  8.7472e-01],
         [ 3.1365e-01,  7.8190e-01,  1.9651e+00,  ...,  4.0783e-01,
           2.2214e+00, -2.1780e-01],
         [ 1.6341e-01,  6.4132e-01,  1.8404e+00,  ...,  8.9465e-02,
           1.0809e+00,  6.7652e-01],
         ...,
         [-9.6415e-02,  1.1938e+00,  1.7669e+00,  ...,  4.6212e-01,
           1.2789e+00,  6.9214e-01],
         [ 3.4201e-01,  1.0650e+00,  1.4076e+00,  ...,  3.6883e-01,
           1.8013e+00,  2.9998e-02],
         [ 4.5609e-01,  1.7627e+00,  1.5112e+00,  ...,  4.6250e-01,
           1.4061e+00,  1.5414e-01]],

        ...,

        [[-5.6885e-02,  1.1248e+00,  1.4595e+00,  ...,  9.7625e-01,
           1.5873e+00,  5.3468e-01],
         [ 1.0352e-01,  1.4366e+00,  1.7682e+00,  ...,  8.3223e-01,
           1.8597e+00,  6.2112e-01],
         [ 2.2620e-01,  1.5341e+00,  1.3235e+00,  ...,  1.5638e-01,
           1.2548e+00,  7.0255e-01],
         ...,
         [ 9.1141e-01,  5.4499e-01,  2.0836e+00,  ..., -3.3877e-01,
           1.4171e+00,  8.9711e-01],
         [ 2.4894e-01,  5.4350e-01,  1.9161e+00,  ...,  1.6780e-01,
           1.1948e+00,  1.1083e-01],
         [ 6.8742e-01,  1.2676e+00,  2.0473e+00,  ...,  3.5637e-01,
           1.5261e+00, -3.0103e-01]],

        [[-3.0651e-01,  1.4437e+00,  1.2923e+00,  ...,  9.4021e-01,
           1.5278e+00,  7.0753e-01],
         [-5.2754e-02,  9.5926e-01,  1.9723e+00,  ...,  5.3423e-01,
           1.1492e+00,  1.2458e-04],
         [ 6.9511e-01,  1.4978e+00,  1.3406e+00,  ...,  3.9380e-01,
           1.0717e+00,  9.2198e-02],
         ...,
         [ 3.9803e-02,  2.0495e+00,  1.6403e+00,  ...,  3.3639e-01,
           1.9545e+00,  1.0923e-01],
         [ 4.6836e-02,  1.0443e+00,  1.7644e+00,  ...,  2.9942e-01,
           1.0751e+00,  1.6899e-01],
         [ 4.6705e-01,  4.7488e-01,  1.8520e+00,  ...,  5.5207e-01,
           1.3240e+00,  1.3516e+00]],

        [[-5.6245e-02,  8.6006e-01,  1.7475e+00,  ...,  1.0295e+00,
           2.0491e+00,  6.4452e-01],
         [ 6.4734e-02,  8.1002e-01,  2.2007e+00,  ...,  7.5934e-01,
           1.7579e+00,  6.6843e-01],
         [ 1.6274e-01,  1.7123e+00,  1.5620e+00,  ...,  1.4525e-01,
           1.3033e+00,  5.5845e-01],
         ...,
         [ 5.1199e-01,  8.6772e-01,  1.6652e+00,  ..., -6.2280e-02,
           1.6315e+00,  1.9474e-03],
         [ 4.0031e-01,  5.3803e-01,  9.7818e-01,  ...,  1.3648e+00,
           1.4890e+00,  5.9346e-01],
         [ 4.1351e-01,  8.8440e-01,  1.1261e+00,  ...,  8.1467e-01,
           9.2330e-01,  7.5329e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-1.6450, -0.5847, -0.4338,  ..., -0.2325, -0.2547, -0.9241],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6576, -0.9463, -0.7203,  ..., -0.1216, -0.0623, -0.2683],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8090, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.3229, -0.0454, -0.2835,  ...,  0.1524, -0.3254, -1.1191],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8314, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.4947,  1.1443,  1.7177,  ...,  0.9859,  2.4349,  0.1920],
         [ 0.1889,  1.1628,  1.5205,  ...,  0.2758,  1.5287,  0.3131],
         [-0.1775,  1.2573,  1.6609,  ..., -0.5172,  1.2565,  0.7471],
         ...,
         [ 0.3936,  1.4373,  1.8959,  ...,  1.0301,  1.4835,  0.3933],
         [ 0.7532,  1.3969,  1.6036,  ...,  0.5656,  0.7605, -0.7063],
         [ 0.6287,  0.5948,  1.2939,  ..., -0.0942,  1.4377,  0.5642]],

        [[-0.8217,  0.8992,  1.4040,  ...,  1.2667,  1.7578,  0.7438],
         [ 0.0076,  1.0645,  2.4632,  ...,  0.3370,  2.1091,  0.5367],
         [ 0.5372,  1.4579,  1.1759,  ...,  0.4830,  1.3699,  0.1419],
         ...,
         [-0.0953,  1.1241,  2.1436,  ...,  0.3334,  1.2999,  0.5346],
         [-0.0842,  0.8627,  1.7259,  ...,  0.4783,  0.5568,  0.9548],
         [ 0.5261,  1.3627,  1.4263,  ...,  0.7622,  1.2985,  0.5975]],

        [[-0.1075,  0.9022,  1.5330,  ...,  1.0445,  1.4801,  0.8921],
         [-0.1846,  1.0917,  2.2131,  ...,  0.6889,  1.5257,  0.3489],
         [-0.0181,  0.6176,  1.6316,  ...,  0.1145,  0.9597,  1.1588],
         ...,
         [ 0.1662,  1.0553,  2.0628,  ..., -0.1146,  1.8193,  0.2716],
         [ 0.3730,  0.5121,  1.7481,  ...,  0.1575,  0.9982,  0.2280],
         [ 0.7057,  0.9830,  1.7024,  ...,  0.7437,  0.9796,  1.2866]],

        ...,

        [[-0.2790,  1.4154,  1.6657,  ...,  0.8573,  1.6415,  0.8221],
         [ 0.5430,  0.9148,  1.9210,  ...,  0.3707,  2.0507,  0.1442],
         [ 0.4181,  1.3668,  1.2356,  ...,  0.0777,  1.5141, -0.2624],
         ...,
         [ 0.1779,  1.3856,  2.2441,  ...,  0.6588,  1.6958,  0.1060],
         [-0.1015,  1.1407,  1.7800,  ...,  1.0673,  1.0125,  0.4420],
         [ 0.6087,  1.2518,  1.4401,  ...,  0.4563,  1.6202,  0.5356]],

        [[-0.1115,  0.9262,  1.3809,  ...,  1.2834,  2.2436,  0.5868],
         [ 0.2720,  0.7954,  1.7870,  ...,  0.5729,  1.3773,  0.5920],
         [ 0.2160,  1.0012,  1.9179,  ...,  0.4197,  2.1400, -0.2542],
         ...,
         [ 0.1521,  0.8764,  1.3108,  ...,  1.0907,  1.8681,  0.3296],
         [-0.2163,  0.8252,  1.9747,  ..., -0.1378,  1.0187,  0.3411],
         [ 0.3350,  1.1532,  1.8045,  ...,  0.7616,  1.7432,  0.7785]],

        [[ 0.6567,  1.1394,  1.3650,  ...,  0.0552,  1.8594,  0.4782],
         [-0.3956,  1.2581,  1.3047,  ...,  0.7533,  1.3630,  0.7310],
         [ 0.4386,  1.3143,  1.2957,  ..., -0.0323,  1.3268,  0.1967],
         ...,
         [ 0.4620,  1.0862,  1.9865,  ...,  0.7085,  2.0186,  0.0733],
         [ 0.2456,  1.3670,  1.6520,  ...,  0.3464,  1.2506,  0.7661],
         [ 0.1964,  0.2569,  1.7823,  ...,  0.1582,  1.2780,  1.1898]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.7697, -0.1505, -0.0955,  ...,  0.1665, -0.1227, -0.7770],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.1015, -0.1929, -0.1795,  ..., -0.4137,  0.1958, -1.0558],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8062, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.1235, -0.2274,  0.2506,  ..., -0.2851, -0.0620, -1.0154],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8167, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-2.1354e-01,  1.1162e+00,  1.6630e+00,  ...,  1.4974e+00,
           1.9908e+00,  8.2643e-01],
         [-3.7435e-01,  1.2168e+00,  1.3837e+00,  ...,  4.5244e-01,
           1.2559e+00,  4.4407e-01],
         [ 2.4233e-01,  8.2462e-01,  1.7500e+00,  ..., -1.6486e-02,
           1.0872e+00,  6.0004e-01],
         ...,
         [ 7.5868e-02,  1.5899e+00,  1.9700e+00,  ...,  7.4142e-01,
           2.3178e+00,  3.5758e-01],
         [ 2.6306e-01,  7.1309e-01,  1.8558e+00,  ...,  4.1528e-01,
           1.0762e+00,  9.0862e-02],
         [ 1.7406e-01,  1.0599e+00,  1.5971e+00,  ...,  1.1167e+00,
           1.6262e+00,  8.4962e-01]],

        [[-1.0483e-01,  6.3876e-01,  1.7445e+00,  ..., -9.2007e-02,
           1.2709e+00,  3.1802e-01],
         [-1.7082e-01,  1.2043e+00,  1.8820e+00,  ...,  7.7385e-01,
           1.1878e+00,  8.4092e-01],
         [ 3.5988e-01,  1.5924e+00,  1.7476e+00,  ...,  1.8154e-01,
           1.4279e+00,  2.6642e-02],
         ...,
         [ 4.0212e-01,  1.5549e+00,  2.0637e+00,  ...,  8.2907e-01,
           1.6930e+00,  5.9913e-01],
         [-7.8415e-02,  1.1731e+00,  2.2223e+00,  ...,  2.1537e-01,
           8.4546e-01, -2.6674e-02],
         [ 6.2819e-01,  9.1818e-01,  2.1029e+00,  ..., -4.3130e-02,
           6.4255e-01,  6.0831e-01]],

        [[-2.3010e-01,  1.1742e+00,  2.0160e+00,  ...,  9.1541e-01,
           2.0399e+00,  3.4653e-01],
         [ 3.2299e-02,  9.3708e-01,  2.6425e+00,  ..., -3.7034e-03,
           1.6968e+00, -5.6877e-01],
         [-2.2040e-01,  1.5028e+00,  1.1730e+00,  ...,  9.1156e-01,
           1.2120e+00,  4.2600e-01],
         ...,
         [ 6.3079e-01,  1.0738e+00,  2.0666e+00,  ...,  9.7799e-01,
           1.7767e+00,  4.8323e-01],
         [ 7.7040e-01,  2.7095e-01,  1.7460e+00,  ...,  2.0025e-01,
           7.1473e-01,  7.0848e-01],
         [ 3.2828e-01,  1.1040e+00,  1.9303e+00,  ...,  9.2797e-01,
           1.6379e+00,  3.9547e-03]],

        ...,

        [[ 9.8781e-03,  1.3803e+00,  1.8598e+00,  ...,  6.9822e-01,
           1.7117e+00,  3.0320e-01],
         [ 3.0984e-01,  1.0134e+00,  2.0842e+00,  ..., -1.4757e-01,
           1.2160e+00,  2.6177e-01],
         [ 1.2625e-01,  1.2996e+00,  1.5870e+00,  ...,  4.4450e-01,
           2.4223e+00,  1.6881e-03],
         ...,
         [ 1.6076e-01,  1.4397e+00,  1.4418e+00,  ...,  1.0103e+00,
           1.7585e+00,  5.7252e-01],
         [ 4.8144e-01,  1.0510e+00,  2.3122e+00,  ...,  4.5523e-01,
           1.3455e+00, -1.0338e-01],
         [ 2.0900e-01,  9.1643e-01,  2.1943e+00,  ...,  7.6650e-01,
           1.5611e+00,  1.2336e+00]],

        [[-4.9540e-01,  1.0499e+00,  1.9391e+00,  ...,  5.8897e-01,
           2.1611e+00,  6.6604e-01],
         [-5.1087e-01,  1.3979e+00,  1.7529e+00,  ...,  9.9680e-01,
           1.0342e+00,  4.3907e-01],
         [ 5.7501e-01,  1.1942e+00,  2.3815e+00,  ...,  1.8976e-01,
           1.2832e+00,  1.2139e-01],
         ...,
         [ 1.2746e-01,  1.0034e+00,  2.4006e+00,  ...,  7.7088e-01,
           1.4682e+00,  8.5939e-01],
         [ 4.4204e-01,  1.1915e+00,  1.8248e+00,  ...,  9.4670e-01,
           1.4591e+00, -1.9150e-01],
         [ 5.8580e-01,  1.4169e+00,  1.6996e+00,  ...,  5.8287e-01,
           1.4918e+00,  5.4247e-01]],

        [[-2.9309e-01,  1.0914e+00,  1.8012e+00,  ...,  6.6568e-01,
           1.8506e+00,  1.8226e-01],
         [-6.5567e-02,  1.0339e+00,  2.0391e+00,  ...,  3.1071e-01,
           2.0352e+00, -8.7309e-02],
         [ 2.5255e-01,  9.8044e-01,  2.4108e+00,  ...,  2.7063e-01,
           1.6969e+00,  9.8948e-02],
         ...,
         [ 2.3251e-01,  6.3292e-01,  1.7912e+00,  ...,  6.4709e-01,
           1.7595e+00,  3.2073e-01],
         [ 4.4589e-01,  7.1709e-01,  1.7539e+00,  ...,  2.4002e-01,
           1.2898e+00,  2.2215e-01],
         [ 5.1402e-01,  7.7980e-01,  1.4710e+00,  ...,  1.0391e+00,
           1.5655e+00,  2.6910e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0116, -0.1711, -0.6153,  ...,  0.1017, -0.6778, -0.6657],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.2367, -0.1190, -0.1635,  ..., -0.2571,  0.0471, -0.3262],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.8010, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5557, -0.3312, -0.1563,  ..., -0.6194, -0.3550,  0.3103],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8249, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        ...,

        [[0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000],
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 3.3213e-01,  1.0399e+00,  2.1567e+00,  ...,  5.6407e-01,
           2.2469e+00,  1.3661e-02],
         [ 1.6629e-01,  1.1347e+00,  2.2222e+00,  ...,  8.4264e-01,
           1.6211e+00,  4.6260e-01],
         [ 4.5528e-01,  1.1006e+00,  2.0529e+00,  ..., -3.3847e-01,
           1.0708e+00, -4.2138e-01],
         ...,
         [ 6.4343e-02,  1.1020e+00,  1.6903e+00,  ...,  3.8580e-01,
           1.1786e+00, -2.0542e-01],
         [ 2.5373e-01,  1.4335e+00,  1.8862e+00,  ...,  6.6648e-01,
           9.6971e-01,  7.9596e-01],
         [ 5.4747e-01,  1.3819e+00,  2.1323e+00,  ...,  2.3540e-01,
           1.4890e+00,  9.4286e-02]],

        [[ 1.7509e-04,  1.0061e+00,  1.9993e+00,  ...,  4.0386e-01,
           1.7543e+00,  2.2349e-01],
         [-3.1173e-01,  1.6566e+00,  1.8603e+00,  ...,  1.0355e+00,
           1.6229e+00, -2.0951e-01],
         [ 7.7443e-01,  1.4543e+00,  1.7156e+00,  ...,  3.4177e-01,
           1.7767e+00, -3.9934e-01],
         ...,
         [ 4.3461e-01,  6.1229e-01,  2.3721e+00,  ...,  4.3810e-01,
           1.9138e+00,  4.0309e-01],
         [ 3.6759e-01,  7.8079e-01,  1.5283e+00,  ...,  9.3123e-01,
           1.2651e+00, -9.0159e-02],
         [ 6.7843e-01,  8.4871e-01,  2.3692e+00,  ...,  2.3607e-01,
           2.3300e+00, -1.9561e-01]],

        [[-1.8262e-01,  1.3353e+00,  1.6285e+00,  ...,  1.2901e+00,
           1.9485e+00,  9.5488e-02],
         [ 2.1895e-01,  1.3198e+00,  2.2163e+00,  ...,  5.2450e-01,
           1.3562e+00,  4.6496e-01],
         [ 9.0017e-01,  1.0862e+00,  1.9381e+00,  ..., -5.4142e-01,
           1.2153e+00,  3.5287e-01],
         ...,
         [ 3.9199e-01,  8.5682e-01,  1.8545e+00,  ...,  6.4854e-01,
           1.6868e+00,  3.0647e-01],
         [-9.6524e-02,  5.3908e-01,  2.1991e+00,  ...,  1.3276e-01,
           1.3169e+00, -2.8097e-01],
         [ 7.2905e-01,  6.8170e-01,  1.9568e+00,  ...,  7.9803e-01,
           1.5852e+00,  3.5138e-01]],

        ...,

        [[ 2.0813e-01,  5.1412e-01,  1.8060e+00,  ...,  8.1692e-01,
           1.7077e+00,  3.1934e-01],
         [ 3.8885e-01,  8.8137e-01,  2.3212e+00,  ...,  3.7960e-03,
           1.3669e+00,  2.4509e-01],
         [ 3.9127e-01,  8.2800e-01,  1.7886e+00,  ...,  4.2477e-01,
           1.3641e+00,  6.2172e-01],
         ...,
         [ 7.0148e-01,  1.2869e+00,  2.0053e+00,  ...,  3.2770e-01,
           1.4149e+00,  4.8151e-01],
         [ 8.4824e-01,  8.3526e-01,  2.0818e+00,  ...,  4.1390e-01,
           1.1325e+00,  2.4904e-01],
         [ 4.8184e-01,  1.8385e+00,  1.5353e+00,  ...,  9.0613e-01,
           7.0195e-01,  8.4982e-02]],

        [[ 2.8941e-01,  1.1871e+00,  1.6100e+00,  ...,  6.6778e-01,
           1.3832e+00,  5.0372e-01],
         [-1.7651e-02,  1.6815e+00,  1.5219e+00,  ...,  6.3239e-01,
           1.1978e+00,  1.2804e-01],
         [ 3.9943e-01,  9.3058e-01,  2.2241e+00,  ...,  6.2787e-01,
           1.7405e+00,  7.8770e-02],
         ...,
         [ 4.3140e-01,  1.4905e+00,  1.9846e+00,  ...,  6.1486e-01,
           1.2782e+00, -1.9785e-01],
         [ 4.9272e-01,  1.2581e+00,  1.9900e+00,  ...,  3.7623e-01,
           1.4252e+00, -5.4749e-01],
         [ 1.1332e-01,  1.3354e+00,  2.0306e+00,  ...,  6.4994e-01,
           1.4106e+00,  1.9148e-01]],

        [[-1.3515e-01,  1.2733e+00,  1.9722e+00,  ...,  1.8894e-01,
           1.9010e+00,  4.4230e-01],
         [ 5.6341e-01,  5.8018e-01,  1.9574e+00,  ...,  7.6791e-01,
           1.2825e+00,  3.4147e-01],
         [-1.2147e-01,  1.4961e+00,  1.6264e+00,  ...,  2.4315e-01,
           1.7217e+00, -1.5089e-01],
         ...,
         [ 4.5276e-01,  1.2987e+00,  1.5367e+00,  ...,  6.3307e-01,
           1.3831e+00, -1.0847e-01],
         [ 4.1219e-01,  1.0994e+00,  1.6056e+00,  ...,  1.8578e-01,
           1.1511e+00, -5.4218e-01],
         [ 6.6677e-01,  5.8227e-01,  1.6017e+00,  ...,  6.1746e-01,
           1.6482e+00,  7.0005e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.6288, -0.1428, -0.2253,  ..., -0.4851, -1.0290, -0.8329],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-1.0339, -0.1663,  0.4021,  ..., -0.2011, -0.1801,  0.0589],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7967, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([0.1207, 0.5040, 0.1153,  ..., 0.0342, 0.0894, 0.0828],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8345, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        ...,

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.1174,  1.2197,  1.9061,  ...,  1.4507,  1.6935,  0.1359],
         [ 0.3812,  1.3064,  2.3537,  ...,  1.2265,  1.0977,  0.1422],
         [ 0.4550,  1.6025,  2.2360,  ...,  0.2956,  1.6352, -0.1216],
         ...,
         [ 0.7350,  1.0727,  2.2680,  ...,  0.4232,  1.8908,  0.2009],
         [-0.1284,  0.0478,  1.8504,  ...,  0.1210,  1.0113,  0.6971],
         [ 0.5391,  0.8758,  2.1199,  ...,  0.8246,  1.5996,  0.3595]],

        [[ 0.5084,  1.4892,  1.4639,  ...,  0.4912,  1.2395,  0.1158],
         [ 0.4353,  0.6866,  2.0860,  ...,  0.6629,  1.6531,  0.4762],
         [ 0.3278,  0.7870,  1.9340,  ...,  0.9253,  1.8454,  0.3994],
         ...,
         [ 0.3666,  1.0039,  2.4925,  ...,  0.4173,  1.5471,  0.3036],
         [ 0.8031,  0.4443,  2.3554,  ...,  0.1438,  1.1759,  0.4981],
         [ 0.4227,  1.3522,  1.7817,  ...,  0.8877,  1.8701,  0.0624]],

        [[ 0.4537,  0.8202,  1.5372,  ...,  1.4597,  1.7304,  0.5118],
         [-0.0526,  0.8691,  2.1062,  ...,  0.4464,  1.7597,  0.1893],
         [ 0.4263,  1.0131,  2.2580,  ..., -0.0547,  1.5356, -0.1737],
         ...,
         [ 0.7412,  1.2868,  2.1352,  ...,  0.8407,  1.7475,  0.5698],
         [ 0.3418,  1.0582,  2.0849,  ...,  0.3850,  1.2208,  0.3504],
         [ 0.2959,  1.4347,  1.8977,  ...,  0.9286,  1.6293,  0.5845]],

        ...,

        [[ 0.1493,  1.4589,  2.1795,  ...,  0.5815,  1.5212,  0.7592],
         [ 0.1591,  1.1191,  2.0627,  ...,  1.1104,  1.2928,  0.5458],
         [ 0.2414,  1.4721,  2.2468,  ...,  0.3288,  1.6618, -0.3029],
         ...,
         [ 0.5049,  0.9047,  2.3415,  ...,  0.5098,  1.7755,  0.0709],
         [ 0.3702,  1.1974,  2.1564,  ...,  0.4942,  0.0800,  0.4650],
         [ 0.2296,  0.5620,  2.0964,  ...,  0.2973,  0.9502,  0.4467]],

        [[-0.2029,  0.9254,  1.6223,  ...,  0.2221,  1.4499,  1.0317],
         [ 0.1335,  0.6742,  2.4707,  ...,  0.5809,  1.1324,  0.6537],
         [ 0.4190,  0.6240,  1.6314,  ..., -0.1747,  1.5195,  0.4959],
         ...,
         [ 0.3815,  1.2670,  2.1500,  ...,  0.6271,  1.9743,  0.0501],
         [ 0.5546,  0.4416,  1.2990,  ...,  0.2625,  0.2379,  0.3977],
         [ 0.6439,  1.4477,  2.3057,  ...,  0.2446,  1.7628,  0.5719]],

        [[ 0.2826,  1.4200,  1.9701,  ...,  0.6080,  1.7890,  0.1719],
         [ 0.0621,  1.0903,  2.4205,  ...,  0.7455,  1.5031, -0.0447],
         [ 0.0374,  1.0018,  1.4533,  ..., -0.2694,  1.4255, -0.1290],
         ...,
         [ 0.7369,  1.3643,  2.0116,  ...,  1.1243,  2.0493,  0.1432],
         [ 0.0224,  1.3746,  2.2223,  ...,  0.7163,  1.0760,  0.4441],
         [ 0.2221,  1.8024,  2.0322,  ...,  0.8168,  1.6523,  0.1053]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0500, -0.4014, -0.9663,  ...,  0.0325, -1.2184, -0.7960],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.5541,  0.4917, -0.3057,  ..., -0.8466,  0.2755,  0.0151],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7887, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.6324, -0.4698, -0.7213,  ..., -0.3470,  0.2388,  0.1162],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8340, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803]],

        ...,

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.4636,  1.1144,  2.2192,  ...,  0.7216,  2.0978,  0.0285],
         [ 0.0232,  1.5205,  2.1072,  ...,  0.8724,  2.0901, -0.5599],
         [ 0.5655,  1.4951,  1.8289,  ...,  0.7359,  1.2985, -0.3451],
         ...,
         [ 0.3052,  1.0040,  2.4745,  ...,  0.2882,  1.6517,  0.3254],
         [ 0.7860,  0.5833,  2.1332,  ...,  0.2674,  1.3247,  0.3612],
         [ 0.6845,  1.4421,  2.6500,  ...,  0.2174,  1.1389, -0.3853]],

        [[-0.1121,  1.0213,  2.4675,  ...,  0.3438,  1.7011, -0.0048],
         [ 0.0408,  0.7729,  2.4271,  ...,  0.5034,  1.1412,  0.5996],
         [ 0.5062,  1.0910,  2.2400,  ..., -0.0759,  1.3133, -0.2918],
         ...,
         [ 1.1683,  0.7838,  1.9970,  ..., -0.2339,  1.5011, -0.1218],
         [ 0.2077,  0.5714,  1.3370,  ...,  0.5104,  1.2099, -0.4705],
         [-0.2214,  0.9469,  1.5245,  ...,  0.9979,  1.6117,  0.2103]],

        [[ 0.0532,  1.1231,  1.6347,  ...,  1.1252,  1.9693,  0.1953],
         [ 0.3752,  0.6887,  2.7079,  ...,  0.6602,  1.8085,  0.3448],
         [ 0.6106,  1.3042,  1.6938,  ...,  0.1479,  1.3375, -0.2224],
         ...,
         [ 0.5857,  0.8917,  2.6438,  ...,  0.9936,  1.5584,  0.1456],
         [ 0.4475,  0.3445,  2.2171,  ...,  0.0867,  0.9482,  0.2960],
         [ 0.2489,  1.2046,  1.8690,  ...,  0.6686,  1.3214,  0.0296]],

        ...,

        [[-0.2484,  1.0253,  1.9606,  ...,  1.4473,  2.1390,  0.6678],
         [ 0.3112,  0.8071,  2.4297,  ...,  0.2233,  1.6327,  0.2931],
         [ 0.3691,  0.6731,  2.6450,  ...,  0.5598,  1.9093, -0.0351],
         ...,
         [ 0.1484,  1.4472,  1.9496,  ...,  1.0086,  2.2186,  0.2191],
         [ 0.6748,  1.0034,  2.1020,  ...,  0.8205,  1.2904, -0.3304],
         [ 0.4648,  0.9984,  2.5273,  ..., -0.0147,  1.8604,  0.1752]],

        [[ 0.7901,  1.2279,  2.1936,  ...,  0.3703,  1.5618,  0.3811],
         [ 0.0144,  0.8486,  2.4726,  ...,  0.0738,  0.3141,  0.1582],
         [ 0.3472,  0.4350,  1.6396,  ...,  0.5818,  1.0087,  0.1171],
         ...,
         [ 0.6703,  1.5666,  2.5339,  ...,  0.6178,  1.0258, -0.1783],
         [ 0.6365,  0.5602,  2.0420,  ...,  0.5009,  1.0783,  0.1341],
         [ 0.8521,  1.7957,  1.8984,  ...,  1.0087,  1.3212, -0.1928]],

        [[ 0.1421,  0.7278,  2.5083,  ...,  0.4993,  1.3639,  0.5784],
         [ 0.1408,  1.0361,  2.2604,  ...,  0.7217,  1.8491,  0.1559],
         [ 0.5362,  1.9278,  2.2086,  ...,  0.7460,  1.3996,  0.1263],
         ...,
         [ 0.4254, -0.0463,  1.6866,  ...,  0.5352,  1.6926,  0.4052],
         [ 0.1742,  0.8099,  2.0289,  ...,  0.1678,  0.5829, -0.0134],
         [ 0.1914,  0.3441,  2.1421,  ...,  0.6464,  1.2878,  0.3098]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.1254,  0.2608, -0.1228,  ..., -0.5505, -1.2246, -0.8402],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0422,  0.1818,  0.4138,  ...,  0.3542,  0.6749, -0.4985],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7800, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.9009,  0.1287, -0.1974,  ..., -0.5022, -0.2140, -0.3365],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8336, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 1.8891e-01,  9.8729e-01,  2.0216e+00,  ...,  1.1605e+00,
           1.3793e+00,  4.0083e-01],
         [ 4.8491e-03,  8.4042e-01,  2.6413e+00,  ...,  5.9317e-01,
           1.3309e+00,  8.8073e-02],
         [ 3.2187e-01,  1.3295e+00,  2.1865e+00,  ...,  3.8321e-01,
           1.3365e+00,  1.8183e-01],
         ...,
         [ 2.7677e-01,  1.6708e+00,  2.0094e+00,  ...,  1.4810e+00,
           1.6727e+00,  1.1753e-01],
         [ 3.2775e-01,  3.4684e-01,  2.6560e+00,  ...,  7.8684e-01,
           9.9676e-01,  4.2573e-02],
         [ 2.8097e-01,  6.1848e-01,  2.0616e+00,  ...,  5.2971e-01,
           8.3186e-01,  9.3476e-01]],

        [[-4.3271e-02,  1.6446e+00,  1.4119e+00,  ...,  6.4952e-01,
           1.9268e+00,  3.7759e-01],
         [-1.8362e-01,  1.4020e+00,  2.1358e+00,  ...,  7.5825e-01,
           9.7462e-01, -5.3103e-01],
         [ 2.3875e-01,  9.9599e-01,  2.0657e+00,  ...,  4.7048e-01,
           1.9585e+00, -1.7140e-01],
         ...,
         [ 5.2774e-01,  5.7975e-01,  2.1525e+00,  ...,  6.2152e-01,
           1.1576e+00,  5.6575e-01],
         [ 9.2621e-01,  5.1406e-01,  2.5356e+00,  ...,  9.5047e-02,
           9.3157e-01,  3.4247e-01],
         [ 4.7347e-01,  1.5067e+00,  2.3218e+00,  ...,  1.8160e-01,
           1.5559e+00,  1.8394e-01]],

        [[ 1.0030e-01,  9.5100e-01,  2.0919e+00,  ...,  7.8807e-01,
           1.7619e+00,  6.6020e-01],
         [ 5.6772e-01,  1.3712e+00,  2.0264e+00,  ...,  3.2272e-01,
           1.3241e+00, -3.9862e-01],
         [ 1.3117e-01,  1.3671e+00,  1.9951e+00,  ...,  3.8724e-01,
           2.0146e+00,  9.5010e-02],
         ...,
         [ 1.2284e-01,  4.4849e-01,  2.1223e+00,  ...,  5.8084e-01,
           1.4829e+00,  7.8745e-01],
         [ 1.5804e-01,  4.3349e-01,  2.7210e+00,  ...,  5.1405e-01,
           1.0501e+00, -4.6626e-01],
         [ 1.6994e-01,  9.7371e-01,  2.1905e+00,  ...,  1.0586e+00,
           1.1504e+00,  2.8144e-01]],

        ...,

        [[ 3.5652e-01,  1.1161e+00,  2.3965e+00,  ...,  1.1389e+00,
           1.5739e+00,  1.0496e-01],
         [-9.3622e-02,  6.1883e-01,  2.3257e+00,  ...,  8.6544e-02,
           1.3971e+00,  3.1227e-02],
         [ 4.1173e-01,  1.6077e+00,  2.1187e+00,  ...,  4.9051e-01,
           1.4657e+00, -1.0202e-01],
         ...,
         [ 3.7236e-01,  1.0481e+00,  2.4745e+00,  ...,  5.4423e-01,
           1.2237e+00,  7.4449e-01],
         [ 4.8619e-01,  8.1552e-01,  2.5640e+00,  ...,  2.7904e-01,
           6.8706e-01, -5.0709e-02],
         [ 9.2205e-01,  9.0312e-01,  2.2259e+00,  ...,  3.1857e-01,
           1.1990e+00,  6.3278e-01]],

        [[ 5.9914e-01,  6.6383e-01,  2.6495e+00,  ...,  9.9781e-01,
           1.1764e+00,  2.9499e-01],
         [ 2.3683e-01,  1.3345e+00,  2.5330e+00,  ...,  6.3019e-01,
           1.4223e+00, -2.2215e-01],
         [ 6.1916e-01,  1.3579e+00,  2.5850e+00,  ...,  1.0883e-02,
           6.6011e-01,  1.4337e-01],
         ...,
         [ 1.0580e+00,  1.0225e+00,  2.5253e+00,  ...,  1.1097e-01,
           1.7908e+00,  2.5270e-03],
         [ 5.8880e-01,  6.5355e-01,  2.4657e+00,  ...,  7.3199e-01,
           9.5882e-01,  5.9531e-01],
         [ 1.9743e-01,  1.1843e+00,  2.2773e+00,  ...,  4.1825e-01,
           4.9139e-01, -1.7173e-01]],

        [[ 1.9317e-01,  6.0191e-01,  1.6017e+00,  ...,  1.2494e+00,
           2.4838e+00,  2.9824e-01],
         [ 2.2322e-01,  6.1715e-01,  1.6975e+00,  ...,  8.5760e-01,
           1.5649e+00, -3.8957e-01],
         [ 9.7247e-01,  1.4801e+00,  1.8875e+00,  ...,  1.3790e-01,
           1.5923e+00, -3.7800e-01],
         ...,
         [ 5.1158e-01,  1.0330e+00,  2.1832e+00,  ...,  1.7188e-01,
           1.4319e+00,  2.5686e-01],
         [ 7.2081e-01,  8.8338e-01,  2.0514e+00,  ..., -1.7482e-01,
           1.3541e+00,  2.0651e-01],
         [ 4.5639e-01,  1.7210e+00,  2.4022e+00,  ...,  1.0191e+00,
           1.2633e+00,  2.9626e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.1851, -0.8214,  0.6422,  ...,  0.0218, -0.6224, -0.4738],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.0934,  0.5011,  0.3388,  ..., -0.0990,  0.0164, -0.0121],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7748, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.6470, -0.6137, -0.4499,  ..., -0.0949,  0.1295, -0.4878],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8357, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.2409,  0.8635,  1.8033,  ...,  0.8027,  1.2544,  0.6053],
         [ 0.3623,  1.2668,  2.5463,  ...,  0.9190,  1.2126,  0.0834],
         [ 0.4242,  1.7109,  2.2021,  ...,  0.4418,  1.9618, -0.3220],
         ...,
         [ 0.6976,  1.0421,  2.1416,  ...,  0.9160,  0.9760,  0.3648],
         [ 0.8108,  0.9895,  2.1775,  ...,  0.5406,  1.0734, -0.0206],
         [ 0.5423,  1.6164,  2.1236,  ...,  1.1741,  1.0393,  0.2676]],

        [[ 0.7769,  0.9662,  2.4396,  ...,  0.7351,  1.4269,  0.1437],
         [ 0.0848,  1.4882,  2.3798,  ...,  0.7604,  1.2547,  0.3550],
         [ 0.3797,  1.0498,  2.3034,  ...,  0.3598,  1.8206,  0.3677],
         ...,
         [ 0.2959,  0.2970,  1.9519,  ...,  0.4720,  1.6691,  0.9775],
         [ 0.7863,  0.7409,  2.6964,  ..., -0.1842,  0.9086, -0.3461],
         [ 0.6528,  1.7610,  2.1909,  ...,  0.3414,  1.0567,  0.3158]],

        [[ 0.1913,  0.8963,  2.3513,  ...,  0.7795,  1.8742, -0.1125],
         [ 0.4407,  1.2431,  2.4102,  ..., -0.0828,  1.3175, -0.1968],
         [ 0.4269,  1.7020,  2.2109,  ...,  0.4128,  1.6309, -0.3319],
         ...,
         [ 0.0075,  1.0154,  2.5062,  ...,  0.9879,  1.3558,  0.3407],
         [ 0.3133,  0.7683,  2.3875,  ...,  0.6495,  0.8072,  0.2077],
         [ 0.6445,  1.1210,  2.2333,  ...,  1.0982,  1.2997,  0.2572]],

        ...,

        [[ 0.3250,  1.1546,  2.4407,  ...,  1.3998,  2.2038, -0.3627],
         [ 0.3030,  1.0965,  2.8920,  ...,  0.0712,  0.9731, -0.0782],
         [ 1.0991,  1.4422,  2.1158,  ...,  0.5620,  1.4212, -0.2165],
         ...,
         [-0.1553,  1.0598,  1.9719,  ...,  0.9454,  1.3037, -0.2757],
         [ 0.6414,  1.0571,  1.7583,  ...,  0.3589,  0.7107, -0.0983],
         [ 1.0600,  0.3565,  2.5368,  ...,  0.8146,  1.5316,  0.4224]],

        [[ 0.1110,  0.9746,  2.0467,  ...,  0.5839,  1.6259,  0.6699],
         [ 0.6625,  1.0614,  2.4091,  ...,  1.0385,  1.2980, -0.2365],
         [ 0.5570,  1.1272,  2.5793,  ...,  0.4235,  1.3731, -0.1411],
         ...,
         [ 0.3363,  1.3945,  2.0681,  ...,  0.9693,  2.0147,  0.0869],
         [ 0.4655,  0.2498,  2.2610,  ...,  0.2574,  0.7442,  0.4571],
         [ 0.5964,  0.6717,  2.2161,  ...,  0.3503,  1.5668,  0.3734]],

        [[-0.2201,  0.8175,  1.9340,  ...,  0.9295,  1.4634,  0.4613],
         [ 0.3384,  0.6848,  2.4638,  ...,  0.4074,  0.6375,  0.6296],
         [ 0.2190,  0.7713,  2.7590,  ...,  0.1048,  0.9110,  0.0854],
         ...,
         [ 0.6911,  1.3818,  1.9855,  ...,  0.9343,  1.9260, -0.0629],
         [ 0.5497,  0.5416,  2.5576,  ...,  0.6166,  0.9646,  0.0546],
         [ 0.6514,  1.2351,  2.2712,  ...,  0.7773,  0.9201,  0.4322]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.0860, -0.0523, -0.5994,  ..., -0.3298, -0.5705, -0.5131],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.0250,  0.0724,  0.0619,  ..., -0.1588,  0.5021,  0.2030],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7689, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.2747, -0.3625, -0.4027,  ..., -0.7118,  0.1905,  0.0360],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8425, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.1952,  1.3042,  2.1091,  ...,  1.3596,  1.6665,  0.2723],
         [ 0.2131,  1.2580,  2.6342,  ...,  0.4261,  1.1719,  0.1048],
         [ 0.4248,  1.2935,  2.1309,  ..., -0.1973,  0.9384, -0.1806],
         ...,
         [ 0.5511,  1.1043,  1.9484,  ...,  0.5894,  1.6142,  0.5851],
         [-0.0314,  0.7764,  1.6483,  ...,  0.7622,  0.8473,  0.6462],
         [ 0.7512,  0.9693,  2.5423,  ...,  0.7882,  1.1607,  0.5729]],

        [[-0.2000,  1.1938,  1.6394,  ...,  0.6128,  1.9895,  0.3251],
         [ 0.0586,  1.1948,  2.6644,  ...,  0.2430,  1.1323, -0.0189],
         [ 0.4979,  1.0519,  2.3670,  ...,  0.0942,  1.2353,  0.3710],
         ...,
         [ 0.6259,  1.4437,  2.4312,  ...,  0.0673,  1.6370, -0.2118],
         [ 0.2563,  0.9487,  2.0464,  ...,  0.4705,  0.8850,  0.0929],
         [ 0.6054,  1.1523,  2.1209,  ...,  0.8072,  1.3314,  0.0275]],

        [[ 0.1829,  1.1346,  2.6447,  ...,  0.7999,  2.0893,  0.3745],
         [ 0.3822,  1.0367,  2.3996,  ...,  0.6406,  0.9915, -0.3246],
         [ 0.2892,  1.4096,  2.3251,  ...,  0.9742,  1.4549, -0.4956],
         ...,
         [ 1.0632,  0.9701,  1.9879,  ...,  0.3747,  1.7218,  0.1643],
         [ 0.4909,  1.0781,  2.5059,  ...,  0.3316,  0.4329, -0.0111],
         [ 0.6988,  1.3857,  2.2534,  ...,  0.8573,  1.0417,  0.1114]],

        ...,

        [[ 0.4768,  1.0810,  2.2460,  ...,  1.0456,  1.1467,  0.4001],
         [-0.2863,  0.9446,  2.3053,  ..., -0.0092,  1.2639,  0.1862],
         [ 0.2912,  1.4415,  2.4316,  ...,  0.8171,  0.7873, -0.1030],
         ...,
         [ 0.1389,  1.2335,  2.7678,  ...,  0.8976,  1.6372, -0.1423],
         [ 0.8362,  0.6543,  2.6600,  ..., -0.1114,  0.4683, -0.3242],
         [ 0.9783,  0.6610,  1.9094,  ...,  0.6233,  1.0774,  0.3821]],

        [[ 0.0188,  1.1657,  2.0114,  ...,  1.2726,  1.3793,  0.4331],
         [-0.0364,  1.0682,  2.4979,  ...,  0.1581,  1.2368,  0.1142],
         [ 0.2522,  1.3398,  2.3397,  ...,  0.5852,  1.2452,  0.1911],
         ...,
         [ 0.5824,  0.8055,  1.9128,  ...,  0.5365,  1.1743,  0.0280],
         [ 1.0586,  0.8106,  2.4370,  ...,  0.2809,  0.5709,  0.1684],
         [ 0.1636,  1.1361,  2.0568,  ...,  1.0137,  1.4189,  0.5076]],

        [[ 0.5490,  1.0423,  2.9053,  ...,  0.6561,  1.2443, -0.2253],
         [ 0.4146,  1.0999,  1.9441,  ...,  0.1583,  1.1761, -0.1843],
         [ 0.5499,  1.1036,  2.6599,  ...,  0.6988,  0.9889,  0.3140],
         ...,
         [ 0.4243,  1.0522,  2.5279,  ...,  0.2200,  1.1882,  0.5268],
         [ 0.4895,  0.2414,  2.3368,  ..., -0.1404,  0.5226,  0.3319],
         [ 0.8650,  1.4762,  2.8266,  ...,  0.7368,  1.3488,  0.0754]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.1334, -0.6936, -0.0585,  ..., -0.6369, -0.7000, -0.5533],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.5982,  0.2684,  0.2574,  ...,  0.5246, -0.1334, -0.2416],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7589, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-1.1893, -0.3860,  0.3343,  ..., -0.8392, -0.5683, -0.0188],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8443, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.2209,  0.9858,  2.0726,  ...,  1.0844,  1.8439,  0.0198],
         [-0.1671,  0.4894,  2.0813,  ...,  0.3066,  0.7182, -0.1362],
         [ 0.1783,  1.0791,  2.5671,  ...,  0.6375,  0.9703,  0.3176],
         ...,
         [-0.2059,  0.7335,  2.2621,  ...,  1.0475,  1.3705,  0.3467],
         [ 0.6732,  0.6746,  2.5807,  ...,  0.0228,  0.4424, -0.2102],
         [ 0.1839,  0.2035,  1.9672,  ...,  1.3348,  1.1435,  0.3704]],

        [[-0.2922,  1.2907,  1.4757,  ...,  0.4233,  1.1395,  0.0936],
         [ 0.1457,  1.0751,  2.6398,  ...,  0.6997,  1.0860,  0.2372],
         [ 0.0508,  1.0234,  1.9658,  ...,  0.2436,  1.0663,  0.5768],
         ...,
         [ 0.6896,  1.3449,  2.6165,  ...,  0.3663,  1.5713, -0.3372],
         [ 0.7816,  1.1953,  2.6508,  ...,  0.9547,  0.4965,  0.1520],
         [ 0.1113,  1.3162,  2.0463,  ...,  0.8902,  1.3790, -0.0689]],

        [[-0.0216,  1.0203,  2.1180,  ...,  0.9518,  1.6954,  0.7041],
         [ 0.5753,  0.5687,  2.3281,  ...,  0.5681,  1.4111, -0.0598],
         [ 0.9601,  1.1687,  2.5285,  ...,  1.1584,  1.3036, -0.1836],
         ...,
         [ 0.6993,  1.8462,  2.3920,  ...,  0.3318,  1.4909, -0.7526],
         [ 0.8021,  0.5592,  2.4272,  ...,  0.5865,  0.4352,  0.1581],
         [ 0.6483,  1.5951,  2.4502,  ...,  0.8599,  0.9761, -0.2579]],

        ...,

        [[ 0.3372,  1.0437,  2.1575,  ...,  0.2810,  1.2490, -0.3543],
         [ 0.7434,  1.1257,  2.5296,  ...,  0.7440,  1.9275,  0.0262],
         [ 0.1505,  1.3690,  2.7012,  ...,  0.0436,  1.7637, -0.6286],
         ...,
         [ 0.5349,  1.5560,  2.0727,  ...,  0.6103,  1.4884, -0.5418],
         [ 0.3948,  0.4003,  2.3872,  ..., -0.0645,  0.4964,  0.4972],
         [ 0.5455,  0.9419,  2.4970,  ...,  0.9408,  1.4992,  0.1274]],

        [[ 0.2689,  1.1052,  2.5381,  ...,  0.7256,  1.3175,  0.6576],
         [ 0.2085,  0.6708,  2.8524,  ...,  0.9598,  1.5986,  0.0828],
         [ 0.3532,  1.0961,  2.1338,  ...,  0.2892,  1.1302, -0.1629],
         ...,
         [ 0.5840,  1.1385,  2.5058,  ...,  0.8391,  1.8655, -0.3641],
         [ 0.2055,  0.1615,  2.1242,  ...,  0.8284,  1.3075,  0.0385],
         [ 0.6349,  0.9834,  2.1990,  ...,  0.9227,  1.2334,  0.1998]],

        [[ 0.2080,  0.9378,  1.7681,  ...,  1.0697,  1.0453,  0.1646],
         [ 0.3916,  0.7070,  2.8749,  ...,  0.4467,  0.7423,  0.3870],
         [ 0.7673,  0.3684,  2.0647,  ...,  0.0182,  0.7094,  0.3356],
         ...,
         [ 0.8783,  0.6802,  2.5566,  ...,  0.5195,  1.6249, -0.5430],
         [ 0.3443,  0.9246,  2.8104,  ...,  0.6819,  0.4782,  0.1499],
         [ 0.8120,  0.5127,  2.5862,  ...,  0.7645,  1.1349,  0.2257]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.2389, -0.3010, -0.0683,  ..., -0.6601, -0.5578, -0.1345],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.2857,  0.0242,  0.2655,  ..., -0.6168,  0.4931,  0.0755],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7544, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.0454,  0.4202, -0.0323,  ..., -0.5866,  0.1361,  0.1306],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8340, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803]],

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-3.3390e-02,  1.4178e+00,  2.0721e+00,  ...,  1.3498e+00,
           1.5114e+00,  3.4349e-01],
         [ 3.9226e-01,  1.4796e+00,  2.3491e+00,  ...,  8.6134e-01,
           1.1648e+00, -3.9022e-01],
         [ 6.6710e-01,  8.6829e-01,  2.4580e+00,  ..., -2.3337e-01,
           9.6378e-01, -1.0452e-01],
         ...,
         [ 3.5951e-01,  1.5017e+00,  2.8598e+00,  ...,  6.6568e-01,
           1.6767e+00, -4.5710e-01],
         [ 4.9063e-01,  3.9236e-01,  2.3451e+00,  ...,  6.2934e-01,
           2.6448e-01,  6.3720e-02],
         [ 8.2545e-01,  7.0537e-01,  2.2102e+00,  ...,  6.9199e-01,
           1.0768e+00,  6.5254e-01]],

        [[ 4.9347e-01,  6.6613e-01,  2.5170e+00,  ...,  3.9421e-01,
           1.1319e+00,  3.2609e-01],
         [ 6.4848e-01,  1.2308e+00,  2.4522e+00,  ...,  1.0192e+00,
           1.3289e+00,  9.1955e-02],
         [ 5.8862e-01,  7.3305e-01,  2.5664e+00,  ..., -2.2827e-02,
           1.1741e+00,  3.2579e-01],
         ...,
         [ 5.1803e-01,  1.5517e+00,  2.1646e+00,  ...,  2.7804e-01,
           1.5710e+00, -3.3882e-02],
         [-9.8409e-02,  2.2688e-01,  2.0731e+00,  ..., -2.4900e-01,
           2.9036e-01, -2.5964e-01],
         [ 6.7356e-01,  7.3236e-01,  2.4033e+00,  ...,  4.8141e-01,
           1.2142e+00, -1.5528e-01]],

        [[ 2.2813e-01,  6.6537e-01,  2.3434e+00,  ...,  1.0373e+00,
           9.1856e-01,  2.6110e-01],
         [ 3.2924e-01,  1.0695e+00,  2.4473e+00,  ...,  2.8301e-01,
           1.1301e+00,  1.7568e-01],
         [ 6.0259e-01,  9.9261e-01,  2.4709e+00,  ...,  1.1891e-01,
           7.8991e-01, -3.4826e-01],
         ...,
         [ 7.0673e-01,  4.5081e-01,  2.7070e+00,  ...,  3.1233e-01,
           1.4140e+00,  4.6755e-02],
         [ 8.2830e-01,  4.4658e-01,  2.3058e+00,  ...,  8.4398e-02,
           1.1371e+00, -6.3696e-02],
         [ 6.6856e-02,  1.2778e+00,  2.4074e+00,  ...,  1.3821e+00,
           6.3749e-01,  4.3394e-01]],

        ...,

        [[ 2.9432e-01,  7.3414e-01,  2.4141e+00,  ...,  5.7902e-01,
           1.4127e+00,  6.1433e-01],
         [ 1.1419e-02,  7.0084e-01,  2.7042e+00,  ...,  6.9954e-01,
           1.1883e+00, -6.9212e-01],
         [ 2.6070e-01,  6.4297e-01,  2.3048e+00,  ...,  1.9435e-01,
           4.8022e-01, -7.7890e-02],
         ...,
         [ 6.1720e-01,  1.0565e+00,  1.7412e+00,  ...,  7.8003e-01,
           1.5283e+00, -1.6534e-01],
         [ 3.8190e-01,  3.5252e-01,  1.7528e+00,  ...,  7.4649e-01,
           4.9299e-01,  6.3470e-01],
         [ 9.0171e-01,  8.4706e-01,  2.3982e+00,  ...,  7.1331e-01,
           1.5001e+00,  7.3866e-03]],

        [[ 4.8247e-01,  9.3957e-01,  2.2421e+00,  ...,  9.5926e-01,
           1.2079e+00,  2.9750e-01],
         [ 3.8820e-01,  7.7921e-01,  3.0664e+00,  ...,  4.5832e-01,
           1.2633e+00, -3.5825e-02],
         [ 7.5438e-01,  1.3176e+00,  2.7436e+00,  ...,  7.1858e-01,
           9.5024e-01,  2.9280e-03],
         ...,
         [ 8.1194e-01,  1.1015e+00,  2.7129e+00,  ...,  1.8296e-01,
           1.6724e+00,  4.1546e-01],
         [ 8.9423e-01,  9.2222e-01,  2.5406e+00,  ...,  3.8253e-01,
           1.0917e+00,  1.5065e-01],
         [ 3.9315e-01,  8.1216e-01,  2.6572e+00,  ...,  3.1438e-01,
           1.2106e+00,  1.4508e-01]],

        [[ 4.0007e-01,  5.5806e-01,  2.3311e+00,  ...,  1.1284e+00,
           1.5332e+00,  4.6796e-01],
         [ 5.5096e-02,  8.9845e-01,  2.0119e+00,  ...,  5.3065e-01,
           1.2307e+00,  1.8172e-01],
         [ 3.9811e-01,  1.6525e+00,  2.4156e+00,  ...,  6.9441e-01,
           9.7608e-01, -3.0049e-01],
         ...,
         [ 5.8315e-01,  1.2709e+00,  2.5148e+00,  ...,  1.3993e+00,
           1.1113e+00, -2.0089e-01],
         [ 7.4435e-01,  4.9470e-01,  2.1294e+00,  ...,  3.3659e-02,
           8.0562e-01,  8.0461e-02],
         [ 4.3699e-01,  7.4574e-01,  2.5166e+00,  ...,  9.1695e-01,
           9.0615e-01,  2.1529e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.6284,  0.1952,  0.3206,  ..., -0.3381, -0.8749, -0.7061],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.7801,  0.2119, -0.2226,  ..., -0.3223, -0.5625, -0.2558],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7465, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.3497,  0.3105, -0.0188,  ..., -0.8230, -0.5509,  0.5059],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8400, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.4396,  0.9214,  2.3541,  ...,  0.6519,  1.4355, -0.1981],
         [ 0.2440,  1.3044,  2.7076,  ...,  0.8082,  0.8016,  0.4381],
         [ 1.1004,  0.9277,  2.6534,  ..., -0.2506,  0.7394, -0.0647],
         ...,
         [ 0.6616,  0.9858,  2.0846,  ...,  1.0248,  1.3876, -0.1484],
         [ 0.6634,  0.6171,  2.5348,  ...,  0.5320,  0.8528, -0.2051],
         [ 0.4479,  1.4253,  2.0988,  ...,  0.7270,  1.0673,  0.5147]],

        [[-0.3417,  1.4680,  2.4637,  ...,  0.2694,  1.8485, -0.3591],
         [ 0.1139,  1.3241,  2.5956,  ...,  0.7095,  0.6897, -0.6388],
         [ 0.4727,  1.1908,  2.2048,  ...,  0.8028,  1.0403,  0.4441],
         ...,
         [ 0.6821,  0.9313,  2.3998,  ...,  0.3037,  1.2068, -0.0728],
         [ 0.5549,  0.2756,  2.3847,  ...,  0.3898,  0.8360, -0.3355],
         [ 0.8934,  0.7140,  2.4759,  ...,  0.2406,  0.7634,  0.0211]],

        [[ 0.1620,  1.0042,  2.3915,  ...,  0.8850,  1.7185,  0.2749],
         [-0.0083,  1.2561,  2.8213,  ...,  0.2607,  0.5529,  0.2525],
         [ 0.4310,  0.8996,  2.5185,  ...,  0.3694,  1.3317,  0.4460],
         ...,
         [ 0.1851,  0.8341,  2.8982,  ...,  0.7369,  1.5512,  0.2272],
         [ 1.0775,  0.5467,  2.3750,  ...,  0.7523,  0.3615, -0.0595],
         [ 0.8381,  1.0303,  2.6404,  ...,  0.6455,  1.1045, -0.2730]],

        ...,

        [[ 0.5402,  1.1442,  2.4570,  ...,  0.7363,  1.4575, -0.1318],
         [-0.3494,  1.0022,  2.6564,  ...,  0.4639,  0.6143,  0.3473],
         [ 0.9688,  1.0995,  2.3241,  ..., -0.0374,  0.9845, -0.3336],
         ...,
         [ 0.4381,  1.4173,  2.6164,  ...,  0.6417,  1.3083,  0.1056],
         [ 0.4819,  0.2608,  1.7553,  ...,  0.4739,  0.3591, -0.2035],
         [ 0.7758,  1.5612,  2.7901,  ...,  0.9343,  1.3880, -0.0833]],

        [[ 0.3032,  0.8361,  2.7631,  ...,  0.6018,  0.8879,  0.4539],
         [ 0.4709,  1.0162,  2.5556,  ...,  0.5961,  0.5660,  0.1870],
         [ 0.7337,  0.9248,  2.5720,  ...,  0.4178,  1.3352,  0.2953],
         ...,
         [-0.0371,  1.4399,  2.3534,  ...,  0.8418,  1.3065, -0.1357],
         [ 0.8261,  0.3753,  2.2497,  ...,  0.7240,  0.6699, -0.2112],
         [ 1.0000,  0.7000,  2.7396,  ...,  0.1470,  0.8315,  0.1051]],

        [[ 0.5581,  1.0160,  2.3089,  ...,  1.4413,  1.8575,  0.2219],
         [-0.1048,  1.3127,  2.8898,  ...,  0.5095,  0.7674, -0.5153],
         [ 0.6866,  0.9794,  2.6237,  ...,  0.8053,  1.0846,  0.5344],
         ...,
         [ 0.7824,  0.9484,  2.8152,  ...,  1.0606,  1.4851,  0.1546],
         [ 0.9247, -0.1451,  2.6498,  ..., -0.2548,  0.7127, -0.1235],
         [ 1.0572,  0.4703,  2.5033,  ...,  0.8241,  1.0860, -0.1567]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.5149, -0.4949,  0.2927,  ..., -0.4762, -0.4791,  0.2574],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3668,  0.2465, -0.3451,  ..., -0.2928, -0.0189, -0.0536],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7337, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.4315, -0.2587, -0.1854,  ..., -0.4740, -0.8001,  0.1363],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8377, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138],
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887]],

        [[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        ...,

        [[0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000]],

        [[0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877],
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 3.7283e-01,  1.2346e+00,  2.4499e+00,  ...,  1.1466e+00,
           1.1357e+00,  2.0659e-01],
         [ 5.5952e-01,  8.9031e-01,  2.3262e+00,  ...,  4.7034e-01,
           6.8273e-01, -1.2516e-01],
         [ 4.6166e-01,  8.2372e-01,  2.7846e+00,  ...,  1.1124e-01,
           1.8185e-01,  5.6752e-01],
         ...,
         [ 1.0699e+00,  4.3360e-01,  2.9912e+00,  ...,  4.8955e-02,
           1.3722e+00, -1.3002e-02],
         [ 7.7225e-01,  1.6328e-01,  2.4170e+00,  ...,  2.9986e-01,
           9.8092e-01,  2.3512e-01],
         [ 2.5475e-01,  1.2981e+00,  2.1348e+00,  ...,  7.2476e-01,
           6.5658e-01,  3.4123e-01]],

        [[-1.3160e-01,  1.5747e+00,  2.2548e+00,  ...,  1.1596e+00,
           1.2203e+00,  2.2410e-01],
         [ 6.2760e-01,  1.0807e+00,  2.1121e+00,  ...,  6.9574e-01,
           7.8742e-01, -1.1350e-01],
         [ 6.8651e-01,  1.3566e+00,  2.5121e+00,  ...,  3.2739e-01,
           8.1803e-01, -2.1789e-01],
         ...,
         [ 5.9868e-01,  9.5877e-01,  2.7829e+00,  ...,  4.2804e-01,
           1.0322e+00,  5.8883e-01],
         [ 6.6016e-01,  1.7064e-01,  1.5460e+00,  ...,  9.7079e-01,
           1.1356e+00,  4.9764e-02],
         [ 5.4405e-01,  1.1334e+00,  2.6374e+00,  ...,  7.3646e-01,
           8.0842e-01, -9.0635e-02]],

        [[ 1.3167e-01,  8.7631e-01,  2.3289e+00,  ...,  1.1334e+00,
           1.1651e+00,  6.2360e-02],
         [ 9.3401e-01,  5.3411e-01,  2.7149e+00,  ...,  9.2791e-01,
           1.1708e+00,  3.6402e-01],
         [ 4.8893e-01,  8.3617e-01,  2.5433e+00,  ...,  8.1401e-01,
           4.9354e-01,  4.0994e-01],
         ...,
         [ 5.9382e-01,  1.2661e+00,  2.1903e+00,  ...,  4.3211e-01,
           1.0854e+00, -5.0742e-03],
         [ 1.3617e-01,  9.1599e-02,  2.2673e+00,  ...,  8.2129e-01,
           4.1274e-01,  2.3091e-01],
         [ 1.6973e-01,  1.4344e+00,  2.2335e+00,  ...,  8.9147e-01,
           9.6474e-01, -8.6585e-02]],

        ...,

        [[ 1.5243e-01,  9.8118e-01,  2.1942e+00,  ...,  1.0015e+00,
           1.5578e+00, -8.2779e-02],
         [ 7.8687e-01,  1.5123e+00,  2.7875e+00,  ...,  8.5191e-01,
           4.8036e-01, -3.1945e-01],
         [ 8.9916e-01,  1.1929e+00,  2.5874e+00,  ...,  1.9848e-01,
           4.5139e-01, -2.6173e-01],
         ...,
         [ 6.5135e-01,  3.9428e-01,  2.6470e+00,  ...,  8.5761e-01,
           1.3275e+00,  1.9121e-01],
         [ 6.0104e-01,  3.1853e-01,  2.1041e+00,  ...,  4.9383e-02,
           4.9010e-01, -2.8240e-01],
         [ 1.0781e+00,  6.6748e-01,  2.3574e+00,  ...,  8.0202e-01,
           1.2587e+00, -2.0871e-01]],

        [[ 6.8479e-01,  8.2981e-01,  2.2063e+00,  ...,  7.4853e-01,
           8.5554e-01,  3.0011e-01],
         [ 1.9763e-01,  1.1364e+00,  2.4546e+00,  ...,  1.4440e-01,
           1.2485e+00,  2.4302e-01],
         [ 4.5976e-01,  1.0074e+00,  2.5459e+00,  ...,  4.7784e-01,
           1.2398e+00,  2.0687e-01],
         ...,
         [ 5.5404e-01,  1.7558e+00,  2.5670e+00,  ...,  5.6386e-01,
           1.0486e+00,  2.9006e-01],
         [ 5.6964e-01,  6.4754e-01,  2.4985e+00,  ...,  8.1400e-01,
           7.7164e-01, -2.7970e-02],
         [ 1.0835e+00,  6.5302e-01,  2.9123e+00,  ...,  6.9180e-01,
           1.0830e+00,  1.6764e-01]],

        [[ 6.0339e-01,  8.0165e-01,  2.7940e+00,  ...,  7.4947e-01,
           1.5440e+00,  3.2914e-01],
         [ 2.9981e-04,  1.3372e+00,  2.6127e+00,  ...,  1.0939e+00,
           1.1321e+00,  1.4894e-01],
         [ 6.5575e-01,  1.2129e+00,  2.7972e+00,  ...,  1.2849e-01,
           9.3691e-01, -3.6255e-01],
         ...,
         [ 5.1950e-01,  1.0579e+00,  2.8651e+00,  ...,  8.5468e-02,
           1.3501e+00,  6.1445e-01],
         [ 2.4313e-01,  5.6689e-01,  2.8058e+00,  ...,  3.5757e-01,
           3.1298e-01,  6.7234e-01],
         [ 2.3754e-01,  1.1546e+00,  2.6889e+00,  ...,  9.4798e-01,
           1.4387e+00,  5.0009e-02]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.4717, -0.0142,  0.2331,  ..., -0.2586, -0.1964,  0.3843],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.4533,  0.2207,  0.1295,  ..., -0.3152, -0.2213, -1.0903],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7319, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.3354, -0.2340, -0.7123,  ..., -0.5751, -0.5729, -0.0164],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8499, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         ...,
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.2924,  0.4046,  2.0776,  ...,  0.5449,  1.2884,  0.6077],
         [ 0.5809,  0.6241,  2.4726,  ...,  0.8802,  1.2967,  0.2683],
         [ 0.5283,  1.0733,  2.9437,  ...,  0.0182,  0.8030,  0.4551],
         ...,
         [ 1.0176,  0.6052,  2.6571,  ...,  0.3508,  1.0444, -0.4300],
         [ 0.5185,  0.0908,  2.6755,  ...,  0.7202,  0.4413,  0.3484],
         [ 0.3762,  1.2055,  2.5033,  ...,  1.0726,  0.9419,  0.3612]],

        [[ 0.2339,  1.0005,  2.2011,  ...,  1.0475,  1.7335,  0.1543],
         [ 1.0691,  1.0012,  2.2366,  ...,  0.5961,  0.9555, -0.4909],
         [ 0.5033,  1.2969,  2.8057,  ...,  0.5995,  1.3590, -0.3920],
         ...,
         [ 0.7181,  0.5913,  2.7488,  ...,  0.5646,  1.5030,  0.0778],
         [ 0.5968,  0.7730,  2.5558,  ...,  0.0863,  0.5075,  0.1605],
         [ 0.3845,  1.3797,  2.8437,  ...,  0.3719,  0.4200,  0.0454]],

        [[ 0.1184,  1.1385,  2.2009,  ...,  1.3620,  1.0954,  0.4472],
         [ 0.4034,  0.5968,  2.7923,  ...,  0.9309,  0.5264, -0.2983],
         [ 0.4465,  0.1230,  2.4707,  ...,  0.0350,  1.8672, -0.4921],
         ...,
         [ 0.8195,  0.8166,  2.3058,  ...,  0.2957,  1.6441,  0.2528],
         [ 0.2779,  0.6551,  2.0309,  ...,  0.7662,  0.0630,  0.2115],
         [ 0.9565,  0.7686,  3.0622,  ...,  0.4246,  0.2743,  0.1640]],

        ...,

        [[ 0.2120,  0.8200,  2.5740,  ...,  0.5755,  0.9659,  0.5063],
         [ 0.7614,  0.6343,  2.8125,  ...,  0.8687,  0.9014,  0.0216],
         [ 0.4763,  0.9685,  2.8719,  ...,  0.7316,  0.8076,  0.1002],
         ...,
         [ 1.1555,  1.0689,  2.4268,  ...,  0.5244,  1.6930, -0.0347],
         [ 0.7272,  0.4193,  2.2230,  ...,  0.4546,  0.6731,  0.4797],
         [ 0.8434,  0.9416,  2.5173,  ...,  0.4345,  0.4593, -0.0612]],

        [[ 0.1403,  0.5732,  2.3454,  ...,  0.8739,  1.3605,  0.3607],
         [ 0.2080,  0.5892,  2.5558,  ...,  0.4975,  1.0610, -0.1357],
         [ 1.0394,  1.5195,  1.9216,  ...,  0.7806,  0.6100,  0.1610],
         ...,
         [ 0.6300,  1.2319,  3.2793,  ...,  0.8633,  0.9147,  0.1011],
         [ 0.7004,  0.4681,  2.2466,  ...,  0.4081,  0.9837, -0.2984],
         [ 0.7134,  1.0120,  2.7785,  ...,  0.6633,  0.4744,  0.5417]],

        [[ 0.5151,  0.7765,  2.9918,  ...,  0.7457,  1.5368,  0.4247],
         [ 0.8067,  1.4157,  2.4028,  ...,  1.1754,  0.7817,  0.0367],
         [ 0.3661,  1.2450,  2.3677,  ...,  0.7266,  1.2467,  0.0144],
         ...,
         [ 1.1045,  1.3895,  2.5911,  ...,  0.4663,  0.8579, -0.1121],
         [ 0.4434,  0.1263,  2.6163,  ...,  0.6070,  0.2066,  0.3303],
         [ 0.8401,  1.1467,  2.4728,  ...,  0.6990,  0.8284,  0.0037]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.5138, -0.0367,  0.2037,  ..., -0.3047,  0.0291, -0.3893],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.6280,  0.1803, -0.2883,  ..., -0.3462, -0.2391, -0.1086],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7216, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5968, -0.4538, -0.2546,  ..., -0.0456, -0.5562, -0.4842],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8395, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000]],

        ...,

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.8065,  0.6740,  2.8735,  ...,  0.5895,  0.7787,  0.3211],
         [ 0.5691,  0.6985,  2.5739,  ...,  0.3589,  1.6425, -0.7361],
         [ 0.6319,  0.9255,  2.1800,  ...,  0.3828,  1.1747,  0.0356],
         ...,
         [ 0.5710,  0.8108,  2.8127,  ...,  0.7480,  0.9698,  0.4442],
         [ 0.7587,  0.6489,  2.6657,  ...,  0.1750,  0.3412,  0.5261],
         [ 0.7404,  0.6544,  2.3704,  ...,  0.5857,  0.6240, -0.2937]],

        [[ 0.1692,  0.8641,  2.3659,  ...,  1.0680,  0.9292,  0.3807],
         [ 0.1854,  1.1329,  2.4616,  ...,  0.7607,  0.3369,  0.2928],
         [ 0.9124,  1.1485,  2.6408,  ...,  0.0561,  0.7399, -0.0895],
         ...,
         [ 0.6753,  0.7470,  2.7023,  ...,  0.5621,  1.0918,  0.4907],
         [ 0.5655,  0.7981,  2.8775,  ...,  0.2170,  0.5008, -0.9634],
         [ 0.5062,  0.5601,  1.9977,  ...,  1.0500,  1.3143,  0.2057]],

        [[ 0.5913,  0.5236,  2.7768,  ...,  0.7808,  1.0085,  0.0897],
         [ 1.0130,  1.0283,  2.8965,  ...,  0.8434,  0.6546,  0.0651],
         [ 0.5719,  1.2645,  2.5921,  ...,  1.0466,  0.6082, -0.0750],
         ...,
         [ 0.8716,  1.0752,  2.8346,  ...,  0.0373,  1.3845, -0.2160],
         [ 0.2315,  0.9723,  2.4074,  ...,  0.3872,  0.1553, -0.1411],
         [ 0.7135,  1.3491,  2.9127,  ...,  0.4743,  0.6450,  0.8234]],

        ...,

        [[ 0.5331,  0.6416,  2.5624,  ...,  0.9111,  1.0590,  0.0707],
         [ 0.2530,  1.2008,  2.5699,  ...,  0.4753,  1.0534,  0.2845],
         [ 0.6604,  0.7551,  2.9464,  ...,  0.0709,  0.2965,  0.0829],
         ...,
         [ 0.7155,  0.8840,  2.4853,  ...,  0.3324,  1.0931,  0.0658],
         [ 0.8639,  0.8824,  2.2058,  ...,  1.0585,  0.7888, -0.0031],
         [ 0.9629,  0.2828,  2.3335,  ...,  0.5938,  0.4918,  0.2129]],

        [[ 0.3334,  1.0888,  2.5107,  ...,  0.7107,  0.8752,  0.2631],
         [ 0.6143,  1.2957,  2.6943,  ...,  1.0510,  0.6633, -0.0830],
         [ 0.8299,  1.4096,  2.7107,  ...,  0.5149,  0.8222,  0.1967],
         ...,
         [ 0.5588,  1.4008,  2.7318,  ...,  0.7991,  0.8286, -0.0175],
         [ 0.8598,  0.7003,  2.1050,  ...,  0.7337,  0.8087,  0.0234],
         [ 0.9979,  0.9287,  2.5760,  ...,  0.2507,  0.5166,  0.4681]],

        [[ 0.1851,  0.9204,  2.4307,  ...,  0.9231,  1.6507,  0.3368],
         [-0.0488,  1.0160,  2.6491,  ...,  1.0383,  0.3168, -0.3791],
         [ 0.7129,  0.5520,  2.6243,  ...,  0.2558,  1.2610,  0.2837],
         ...,
         [ 0.6029,  1.3390,  2.8857,  ...,  0.6842,  1.1973, -0.3329],
         [ 0.5028,  0.8888,  2.0260,  ...,  1.1214,  0.9129,  0.7659],
         [ 0.6789,  1.0733,  2.8184,  ...,  0.7762,  0.7319, -0.0273]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.6805, -0.0581,  0.0071,  ..., -0.0606, -0.2487,  0.2763],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.5373,  0.2287, -0.1705,  ..., -0.5270, -0.2901, -0.4859],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7125, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.6070, -0.2559, -0.5022,  ..., -0.4386,  0.1578, -0.5667],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8408, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000],
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 3.4112e-01,  4.1085e-01,  2.1919e+00,  ...,  9.0471e-01,
           1.2427e+00,  3.3982e-01],
         [ 8.9342e-01,  9.6470e-01,  2.6210e+00,  ...,  2.9588e-01,
           1.0077e+00, -2.3177e-01],
         [ 9.8789e-01,  1.3810e+00,  2.4576e+00,  ...,  6.5215e-01,
           1.1383e+00, -2.8450e-01],
         ...,
         [ 7.3428e-01,  7.5633e-01,  2.4463e+00,  ...,  1.0779e+00,
           9.6479e-01,  6.1584e-01],
         [ 5.9333e-01,  5.8496e-01,  2.6557e+00,  ...,  3.1989e-01,
           3.1623e-01, -2.8818e-02],
         [ 7.8412e-01,  9.8210e-01,  2.5698e+00,  ...,  1.1503e+00,
           5.9959e-01,  6.0836e-01]],

        [[ 5.2672e-01,  1.1151e+00,  2.4594e+00,  ...,  9.2475e-01,
           1.1266e+00, -2.4616e-01],
         [ 5.5271e-01,  3.8043e-01,  2.7177e+00,  ...,  5.4857e-01,
           2.6629e-01,  1.0348e-01],
         [ 7.8633e-01,  8.6746e-01,  2.8971e+00,  ...,  6.3289e-01,
           7.2256e-01,  2.0838e-01],
         ...,
         [ 6.5834e-01,  9.1197e-01,  2.8013e+00,  ...,  8.3025e-01,
           1.2772e+00,  8.3701e-02],
         [ 8.7669e-01, -1.2043e-01,  2.4582e+00,  ...,  3.5265e-01,
           3.5228e-01,  4.7685e-01],
         [ 7.8022e-01,  4.2063e-01,  2.1820e+00,  ...,  3.9219e-01,
           1.4778e+00,  2.1741e-02]],

        [[ 2.5177e-01,  1.0513e+00,  2.4188e+00,  ...,  2.2807e-01,
           5.8566e-01,  5.4506e-01],
         [ 8.8110e-02,  5.1422e-01,  2.0437e+00,  ...,  7.8123e-01,
           7.2496e-01, -1.1721e-01],
         [ 6.4933e-01,  1.3663e+00,  2.7129e+00,  ...,  2.0867e-01,
           8.0037e-01, -2.9380e-01],
         ...,
         [ 3.8943e-01,  7.1959e-01,  2.5584e+00,  ...,  5.8276e-01,
           1.4201e+00,  3.5751e-02],
         [ 2.9304e-01,  1.1142e+00,  2.3828e+00,  ...,  8.9120e-01,
           5.8504e-01,  1.5438e-01],
         [ 1.2406e+00,  5.2047e-01,  2.3729e+00,  ...,  4.8946e-01,
           7.0905e-01,  9.9727e-02]],

        ...,

        [[ 1.1628e-02,  7.3732e-01,  2.4379e+00,  ...,  9.6806e-01,
           1.3581e+00, -1.6872e-02],
         [ 6.9454e-01,  8.0872e-01,  2.9108e+00,  ...,  8.9105e-01,
           1.1189e+00, -4.6692e-02],
         [ 2.9794e-01,  7.3361e-01,  2.4591e+00,  ...,  3.1565e-01,
           3.6349e-01,  2.3681e-01],
         ...,
         [ 5.4745e-01,  9.4824e-01,  3.1313e+00,  ...,  2.9171e-01,
           1.2357e+00, -7.5518e-03],
         [ 6.6773e-01,  9.3828e-01,  2.3185e+00,  ...,  2.7922e-01,
           2.8828e-01,  2.1959e-01],
         [ 9.1653e-01,  5.0634e-01,  2.3612e+00,  ...,  3.9929e-01,
           5.5204e-01,  1.0937e-01]],

        [[-9.8479e-02,  8.3435e-01,  2.3147e+00,  ...,  1.0851e+00,
           1.2139e+00, -1.7152e-01],
         [ 2.0802e-01,  7.0575e-01,  2.9608e+00,  ...,  1.1157e+00,
           7.0584e-01,  4.5303e-01],
         [ 6.4813e-01,  6.9630e-01,  3.0455e+00,  ...,  1.7617e-01,
           1.2235e+00, -1.2712e-01],
         ...,
         [ 1.0984e+00,  7.4212e-01,  2.7036e+00,  ...,  1.0514e+00,
           1.0292e+00,  2.5980e-01],
         [ 3.0970e-02,  5.3527e-01,  2.1653e+00,  ...,  6.8646e-01,
           1.0880e+00, -4.3879e-01],
         [ 7.4412e-01,  9.1726e-01,  2.6761e+00,  ...,  9.8418e-01,
           1.0071e+00,  1.4459e-01]],

        [[ 3.7996e-01,  5.0547e-01,  2.3311e+00,  ...,  8.6407e-01,
           1.1993e+00,  6.2662e-01],
         [ 4.0591e-01,  3.6903e-01,  2.0962e+00,  ...,  7.3748e-01,
           3.4599e-01,  6.1283e-01],
         [ 7.2023e-01,  7.9283e-01,  2.4975e+00,  ...,  5.4632e-01,
           1.3665e+00, -1.7524e-01],
         ...,
         [ 9.5794e-01,  8.9268e-01,  3.1318e+00,  ...,  4.9213e-01,
           1.1455e+00, -6.1627e-02],
         [ 2.0370e-01,  1.5231e-01,  2.5692e+00,  ..., -1.8587e-01,
           3.3827e-01,  7.3968e-05],
         [ 7.9914e-01, -4.3482e-02,  2.4547e+00,  ...,  9.5709e-01,
           4.1422e-01,  7.8227e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([-0.2511, -0.1250,  0.3365,  ..., -0.3177,  0.0702,  0.2165],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.2148, -0.2297, -0.2600,  ..., -0.4647, -0.7579, -0.2797],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7015, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5084, -0.1172,  0.2426,  ..., -0.5848, -0.4352,  0.0987],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8333, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000],
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390],
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 4.3917e-01,  1.0955e+00,  2.7555e+00,  ...,  1.0003e+00,
           7.6028e-01, -1.9104e-03],
         [ 6.7499e-01,  1.8092e-01,  2.6742e+00,  ...,  2.7509e-01,
           1.1242e+00, -1.7704e-02],
         [ 2.6668e-01,  9.1921e-01,  2.7094e+00,  ...,  4.7576e-01,
           4.6568e-01, -2.1511e-01],
         ...,
         [ 6.9962e-01,  6.6240e-01,  2.7931e+00,  ...,  7.5987e-01,
           1.1331e+00,  6.2445e-01],
         [ 5.7646e-01,  5.9408e-01,  2.6985e+00,  ...,  3.3471e-01,
           3.0056e-01,  9.5945e-02],
         [ 5.4211e-01,  1.2121e+00,  2.2684e+00,  ...,  7.8346e-01,
           4.9518e-01, -9.3200e-02]],

        [[ 3.1190e-02,  6.2289e-01,  2.1356e+00,  ...,  6.9066e-01,
           8.4224e-01, -5.4826e-02],
         [ 1.0023e-01,  1.1230e+00,  2.7272e+00,  ...,  7.4303e-01,
           2.5160e-01,  9.1908e-02],
         [ 9.3879e-01,  6.5030e-01,  2.4192e+00,  ...,  4.8769e-01,
           9.3818e-01, -3.1053e-02],
         ...,
         [ 5.0615e-01,  1.5427e+00,  2.4573e+00,  ...,  1.8925e-01,
           1.2853e+00,  7.0609e-02],
         [ 9.5457e-01,  2.8341e-01,  2.7737e+00,  ...,  6.9414e-01,
           3.3682e-01, -2.6347e-01],
         [ 9.2473e-01,  5.9715e-01,  2.2336e+00,  ...,  1.0134e+00,
           6.7793e-01,  1.6967e-01]],

        [[ 7.0303e-01,  5.3243e-01,  2.2666e+00,  ...,  2.4579e-01,
           1.5033e+00, -5.4904e-01],
         [ 5.2611e-01,  5.0979e-01,  2.8818e+00,  ...,  4.2956e-01,
           8.0194e-01, -2.8838e-01],
         [ 5.2333e-01,  4.7893e-01,  2.8685e+00,  ...,  4.1803e-01,
           4.9748e-01, -1.6840e-01],
         ...,
         [ 1.2262e+00,  8.6080e-01,  2.9389e+00,  ...,  4.5253e-01,
           1.2714e+00,  3.7338e-01],
         [ 4.9493e-01,  7.2252e-01,  2.7230e+00,  ...,  4.9043e-01,
           3.7945e-01,  2.0614e-03],
         [ 2.5878e-01,  6.6460e-01,  2.5909e+00,  ...,  7.3299e-01,
           8.6986e-01,  1.4586e-02]],

        ...,

        [[ 7.6102e-01,  5.1549e-01,  2.7237e+00,  ...,  4.4117e-03,
           4.0231e-01,  5.2159e-01],
         [ 2.8292e-02,  4.1841e-01,  2.6676e+00,  ...,  1.0790e+00,
           5.0568e-01,  3.5915e-01],
         [ 6.9176e-01,  1.1454e+00,  2.6191e+00,  ...,  1.3679e-01,
           7.4802e-01,  2.7055e-01],
         ...,
         [ 5.1841e-01,  6.7051e-01,  2.7832e+00,  ...,  6.2703e-01,
           7.3281e-01,  2.2261e-01],
         [ 2.9065e-01,  1.1129e+00,  2.3545e+00,  ...,  1.2388e+00,
           8.0303e-01, -9.3234e-02],
         [ 5.9033e-01,  4.7407e-01,  2.4925e+00,  ...,  5.6559e-01,
           5.4604e-01,  4.4739e-01]],

        [[ 6.3544e-01,  8.1186e-01,  2.4280e+00,  ...,  9.1914e-01,
           7.8235e-01,  4.7135e-01],
         [ 3.2096e-01,  5.5023e-01,  2.9865e+00,  ...,  6.5168e-01,
           7.8439e-01,  2.1482e-01],
         [ 4.3640e-01,  1.2216e+00,  2.6665e+00,  ...,  6.0255e-01,
           6.3516e-01, -4.3172e-01],
         ...,
         [ 9.4676e-01,  1.0400e+00,  2.8317e+00,  ...,  9.3294e-01,
           6.8012e-01,  4.6398e-01],
         [ 3.0911e-01,  4.3523e-01,  2.6245e+00,  ...,  3.2648e-01,
           2.3565e-01, -1.3396e-01],
         [ 3.0017e-01,  7.0481e-01,  2.3100e+00,  ...,  6.0840e-01,
           9.6289e-01,  2.0000e-01]],

        [[ 5.2599e-01,  1.1624e+00,  2.3759e+00,  ...,  9.2452e-01,
           6.3282e-01, -2.5146e-01],
         [ 1.0045e+00,  5.8234e-01,  2.8544e+00,  ...,  3.7418e-01,
           9.6300e-01, -2.3870e-01],
         [ 9.6523e-01,  7.4355e-01,  2.6968e+00,  ...,  8.2726e-01,
           8.3446e-01,  9.0231e-02],
         ...,
         [ 1.1844e+00,  6.8795e-01,  2.8325e+00,  ...,  7.8704e-02,
           8.3971e-01,  2.6162e-01],
         [ 6.6786e-01,  2.1601e-01,  3.0050e+00,  ...,  6.5020e-01,
           5.1517e-01, -7.8736e-03],
         [ 1.0673e+00,  8.3372e-01,  2.5379e+00,  ...,  7.7122e-01,
           9.0444e-01,  1.9049e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.5257,  0.0335,  0.2923,  ..., -0.7077, -0.8064, -0.5507],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.1630, -0.1931,  0.0728,  ..., -0.5205,  0.4364,  0.2310],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.7047, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.4782,  0.0540,  0.1120,  ..., -0.6798,  0.1796, -0.5938],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8397, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4862,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.4585,  ..., 0.4615, 0.0000, 1.0000],
         [0.0000, 0.3905, 0.5046,  ..., 0.4615, 0.0359, 1.0000],
         [0.0000, 0.1277, 0.5108,  ..., 0.5000, 0.1634, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.5007,  0.3967,  2.3185,  ...,  0.4788,  1.2286,  0.7288],
         [ 0.0700,  0.8250,  2.6811,  ...,  0.7041,  0.2026,  0.7559],
         [ 0.9158,  0.9029,  2.7213,  ...,  0.9445,  0.8876,  0.3935],
         ...,
         [ 0.7427,  1.1084,  2.4881,  ...,  0.6609,  0.4942, -0.0637],
         [ 0.7069,  0.3789,  2.5210,  ..., -0.1361,  0.0071, -0.1902],
         [ 0.7203,  0.1270,  2.4120,  ...,  0.8518,  0.9724,  0.9257]],

        [[ 0.6325,  0.4059,  2.7275,  ...,  1.0374,  1.0575,  0.0500],
         [ 0.3050,  1.0335,  2.5283,  ...,  0.4328,  0.0079,  0.2657],
         [ 0.0826,  1.2222,  2.7302,  ...,  0.0977,  0.9266, -0.1577],
         ...,
         [ 0.8516,  0.9118,  2.4487,  ...,  0.2920,  0.0106,  0.4310],
         [ 1.0139,  0.3764,  2.4756,  ...,  0.4783,  0.3707,  0.1854],
         [ 0.5318,  0.6237,  2.4379,  ...,  0.5080,  0.6306,  0.3215]],

        [[ 0.8059,  0.6585,  2.4200,  ...,  0.1652,  0.4504,  0.8607],
         [ 0.2006,  0.7451,  2.9201,  ...,  0.2491,  0.4384, -0.0762],
         [ 0.8932,  0.9249,  2.9957,  ...,  0.6970,  0.9207,  0.1846],
         ...,
         [ 0.1622,  0.8567,  2.4739,  ...,  0.5796,  1.2804,  0.7659],
         [ 0.5530,  0.2896,  2.4551,  ...,  0.3321, -0.0109,  0.4016],
         [ 0.8048,  0.5207,  3.3999,  ...,  0.6060,  0.5799,  0.7364]],

        ...,

        [[ 0.7972,  0.6777,  3.0727,  ...,  0.8451,  0.6576,  0.5963],
         [ 0.5003,  0.3194,  2.4184,  ...,  0.7267,  0.3442, -0.1867],
         [ 0.8575,  1.0212,  2.5517,  ...,  0.6617,  0.6298,  0.6267],
         ...,
         [ 1.0153,  0.5077,  2.5568,  ...,  0.6485,  0.8953,  0.4107],
         [ 1.2094,  0.8154,  2.2985,  ...,  0.5516,  0.4594, -0.3190],
         [ 1.1729,  0.7068,  2.3099,  ...,  0.5442,  0.7523, -0.0490]],

        [[ 0.4364,  0.8179,  3.1280,  ...,  0.4397,  0.9986, -0.1137],
         [ 0.6659,  0.9085,  2.4271,  ...,  0.8625,  0.6030, -0.1992],
         [ 0.6431,  1.3106,  2.4109,  ...,  0.2204,  0.9842, -0.0391],
         ...,
         [ 0.4900,  0.8336,  2.4142,  ...,  0.8764,  1.0153,  0.4693],
         [ 0.0508,  0.9536,  1.9688,  ...,  0.3283,  0.5075, -0.1448],
         [ 1.0227,  0.4633,  2.6435,  ...,  0.9710,  0.7107,  0.4114]],

        [[ 0.2697,  0.6267,  2.6844,  ...,  0.8717,  0.9082,  0.1180],
         [ 0.7480,  0.8337,  2.9948,  ...,  0.6568,  0.1148,  0.2880],
         [ 0.6691,  0.3832,  2.0476,  ...,  0.9072,  1.0581,  1.2297],
         ...,
         [ 0.9342,  0.6625,  3.0188,  ...,  0.6075,  0.7363,  0.3214],
         [ 0.7761,  0.2543,  2.2406,  ...,  0.1530,  0.4343,  0.1058],
         [ 0.4143,  0.6829,  2.4568,  ...,  0.4722,  0.3572, -0.1130]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.1329,  0.4945,  0.1416,  ..., -0.6682, -0.2593,  0.8167],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.4414,  0.1871, -0.0784,  ..., -0.4560,  0.2067, -0.1846],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6929, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.4535, -0.1957, -0.2481,  ...,  0.1246, -0.0487,  0.2466],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8399, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000],
         [0.0000, 0.2591, 0.4646,  ..., 0.5769, 1.0000, 1.0000]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000],
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         ...,
         [0.0000, 0.3978, 0.6677,  ..., 0.1538, 0.3605, 0.4803],
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.6423, 0.0000,  ..., 0.1538, 0.7004, 0.0000],
         [0.0000, 0.0255, 0.2277,  ..., 0.5769, 0.6297, 0.6636],
         [0.0000, 0.0000, 0.4585,  ..., 0.8462, 0.5555, 0.8917]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 4.9293e-01,  5.1085e-01,  2.7235e+00,  ...,  2.2182e-01,
           8.0152e-01,  6.1935e-01],
         [ 4.8454e-01, -3.6187e-02,  2.6427e+00,  ...,  3.3748e-01,
           6.6237e-01,  1.4633e-01],
         [ 1.0610e+00,  1.0447e+00,  2.7141e+00,  ..., -7.9503e-03,
           4.8776e-01, -2.3104e-02],
         ...,
         [ 1.0482e+00,  3.8318e-01,  2.7907e+00,  ...,  6.5543e-01,
           8.9091e-01,  2.0645e-01],
         [ 8.3812e-01,  7.0063e-01,  2.2916e+00,  ...,  4.9464e-01,
          -2.8228e-01,  5.8532e-01],
         [ 1.3660e+00,  2.3706e-01,  2.9404e+00,  ...,  4.3236e-01,
           5.6767e-01, -2.8032e-01]],

        [[ 6.4758e-01,  3.8725e-01,  2.6157e+00,  ...,  5.0528e-01,
           1.8911e-01,  2.7907e-01],
         [ 4.4842e-01,  3.1892e-01,  2.6905e+00,  ...,  5.8485e-01,
           5.3983e-01,  3.2105e-01],
         [ 4.7449e-01,  4.0505e-01,  2.5635e+00,  ...,  3.8716e-01,
          -1.0787e-01,  9.6974e-01],
         ...,
         [ 7.0406e-01,  7.5140e-01,  2.8173e+00,  ...,  5.3351e-01,
           9.1320e-01,  7.1003e-02],
         [ 5.7667e-01, -3.3428e-01,  2.5420e+00,  ...,  3.4384e-02,
           1.7226e-01,  3.9496e-01],
         [ 1.0549e+00,  9.9178e-01,  2.9336e+00,  ...,  7.2667e-01,
           5.3935e-01, -5.5218e-02]],

        [[ 2.3078e-01,  6.0761e-01,  2.6861e+00,  ...,  7.3434e-01,
           4.5858e-01,  4.0558e-01],
         [ 9.0542e-01,  5.6928e-01,  3.0354e+00,  ...,  4.0339e-01,
           5.4278e-01,  3.8297e-01],
         [ 4.8386e-01,  8.6048e-01,  2.8152e+00,  ...,  5.6300e-01,
           6.1494e-01,  4.6541e-01],
         ...,
         [ 1.0079e+00,  1.1742e+00,  2.6771e+00,  ...,  5.3443e-01,
           2.3994e-01,  1.9968e-01],
         [ 1.0032e+00,  3.2821e-01,  2.7422e+00,  ...,  5.5884e-01,
           1.6876e-02,  4.5275e-01],
         [ 9.1556e-01,  1.1517e+00,  2.1915e+00,  ...,  7.4911e-01,
           5.1473e-01,  4.4204e-01]],

        ...,

        [[ 2.5293e-01,  7.9692e-01,  2.7574e+00,  ...,  2.7589e-01,
           6.1000e-01,  1.9468e-01],
         [ 5.1171e-02,  9.9158e-01,  2.5888e+00,  ...,  5.4602e-01,
           7.1061e-01, -1.1297e-01],
         [ 6.9982e-01,  7.9539e-01,  2.9941e+00,  ...,  2.3836e-01,
           4.8079e-01, -2.0548e-01],
         ...,
         [ 8.8614e-01,  1.1123e+00,  2.4660e+00,  ...,  6.1345e-01,
           5.5490e-01,  5.2227e-02],
         [ 4.9164e-01,  5.3198e-01,  2.5983e+00,  ...,  7.3267e-01,
           2.7422e-01,  5.1328e-01],
         [ 9.9401e-01,  3.6405e-01,  3.0686e+00,  ...,  2.8898e-01,
           6.0476e-01,  5.4077e-01]],

        [[ 5.4260e-01,  8.2261e-01,  2.5324e+00,  ...,  5.0561e-01,
           1.0056e+00, -9.7143e-02],
         [ 8.2112e-01,  5.4944e-01,  2.6360e+00,  ...,  9.6734e-01,
           6.3829e-01, -8.0223e-02],
         [ 6.4216e-01,  6.7258e-01,  2.6703e+00,  ...,  3.3289e-01,
           6.2319e-01,  1.6566e-01],
         ...,
         [ 8.0006e-01,  8.1177e-01,  2.7678e+00,  ...,  8.2378e-01,
           8.9217e-01,  3.9753e-01],
         [-2.0040e-02,  6.3755e-01,  1.9129e+00,  ...,  1.1238e+00,
           1.4399e-03,  6.0174e-01],
         [ 1.1131e+00,  1.2831e+00,  2.9339e+00,  ...,  9.3665e-01,
           3.5885e-01,  5.6387e-01]],

        [[ 2.8052e-01,  7.2732e-01,  2.6137e+00,  ...,  1.0691e+00,
           9.9507e-01,  4.5534e-01],
         [ 5.9290e-01,  8.4682e-01,  2.8100e+00,  ...,  4.4218e-01,
           3.9267e-01,  5.7037e-01],
         [ 6.7261e-01,  1.0975e+00,  2.4655e+00,  ...,  2.2610e-01,
           9.5327e-01, -2.2057e-01],
         ...,
         [ 8.5779e-01,  9.1806e-01,  2.6564e+00,  ...,  5.3593e-01,
           7.3635e-01,  1.2982e-01],
         [ 7.8451e-01,  2.5518e-01,  2.4090e+00,  ..., -6.7130e-01,
           1.2636e-01, -2.1092e-01],
         [ 8.1131e-01,  9.7156e-01,  2.6237e+00,  ...,  1.0543e+00,
           3.8932e-01,  7.4458e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.4970,  0.1842, -0.4060,  ..., -0.5940,  0.2040,  0.2697],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.2413,  0.6522, -0.1128,  ..., -0.1276, -0.3965,  0.0477],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6907, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.5597, -0.4926, -0.0893,  ..., -0.7574, -0.2031, -0.0713],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8403, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.5438, 0.5015,  ..., 0.5385, 0.9704, 1.0000],
         [0.0000, 0.7044, 0.5323,  ..., 0.5769, 0.8484, 1.0000],
         [0.0000, 0.4124, 0.5477,  ..., 0.6154, 0.7363, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2701, 0.5108,  ..., 0.5000, 0.2865, 1.0000],
         [0.0000, 0.4161, 0.4677,  ..., 0.5000, 0.4277, 1.0000],
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000]],

        [[0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2628, 0.2954,  ..., 0.0769, 0.5766, 0.3305],
         [0.0000, 0.3686, 0.4277,  ..., 0.0769, 0.7303, 0.2431],
         [0.0000, 0.5036, 0.2246,  ..., 0.1154, 0.8618, 0.0877]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 7.2676e-01,  5.7546e-01,  2.2371e+00,  ...,  6.8103e-01,
          -1.1612e-01,  3.2103e-01],
         [ 2.9752e-01,  6.6856e-01,  2.0741e+00,  ...,  7.2842e-01,
           2.6689e-01,  3.7808e-01],
         [ 5.0171e-01,  9.1658e-01,  2.5596e+00,  ...,  5.9689e-01,
           9.7601e-02,  3.9324e-01],
         ...,
         [ 8.6322e-01,  4.9167e-01,  2.7700e+00,  ...,  7.0558e-01,
           6.9192e-01,  2.7108e-01],
         [ 4.8656e-01,  2.3576e-01,  2.4217e+00,  ..., -4.7326e-02,
           1.6940e-01,  7.1029e-01],
         [ 7.4455e-01,  1.1236e+00,  2.8610e+00,  ...,  6.7258e-01,
           6.3960e-01,  3.6810e-01]],

        [[ 3.4628e-01,  5.5062e-01,  2.7378e+00,  ...,  8.4661e-01,
           2.1126e-01,  1.7319e-01],
         [ 7.6021e-01,  6.9962e-01,  2.9393e+00,  ...,  7.8807e-01,
           7.1022e-01,  1.5531e-01],
         [ 7.9190e-01,  4.1771e-01,  2.4394e+00,  ...,  1.1311e-03,
           9.1185e-01, -6.6332e-01],
         ...,
         [ 8.4439e-01,  8.5516e-01,  2.1513e+00,  ...,  3.6214e-01,
           4.4633e-01, -4.3086e-01],
         [ 1.4149e-01, -4.5801e-01,  2.0281e+00,  ...,  8.6359e-01,
           3.6885e-02,  2.5232e-01],
         [ 8.3255e-01,  5.5967e-01,  2.6298e+00,  ...,  5.0803e-01,
           5.4658e-01, -8.3207e-02]],

        [[ 6.2524e-01,  7.0834e-01,  2.8084e+00,  ...,  1.9514e-01,
           6.5846e-01,  4.6133e-01],
         [ 8.3620e-01,  1.5444e-01,  2.2460e+00,  ...,  5.6878e-01,
           8.7692e-01,  4.3303e-01],
         [ 7.6383e-01,  2.3194e-01,  2.8823e+00,  ...,  9.1877e-01,
           5.5457e-01,  3.4997e-01],
         ...,
         [ 1.0472e+00,  7.9533e-01,  2.5067e+00,  ...,  6.2292e-01,
           1.3971e+00,  3.9147e-01],
         [ 8.2048e-01,  5.1846e-01,  2.6692e+00,  ..., -1.8000e-02,
           1.8233e-01,  1.8465e-01],
         [ 6.8282e-01,  7.2721e-01,  2.2484e+00,  ...,  7.9065e-01,
           5.6150e-01,  1.1258e-01]],

        ...,

        [[ 4.0541e-01,  8.8318e-01,  2.8247e+00,  ...,  7.2427e-01,
           7.5001e-01,  3.2090e-01],
         [ 7.9833e-01,  3.5218e-01,  2.3543e+00,  ...,  9.0005e-01,
           4.8178e-01,  1.8266e-01],
         [ 7.4339e-01,  1.1414e+00,  2.8644e+00,  ...,  5.2337e-01,
           3.5026e-01,  1.5810e-01],
         ...,
         [ 6.2861e-01,  3.7686e-01,  2.6584e+00,  ...,  3.9054e-01,
           5.8747e-01,  4.9794e-01],
         [ 5.9538e-01,  1.9557e-01,  2.4625e+00,  ...,  4.3039e-01,
           2.1743e-01,  6.1338e-01],
         [ 8.8481e-01,  9.3272e-01,  3.0755e+00,  ...,  8.4405e-01,
           7.0100e-01,  5.4700e-02]],

        [[ 6.1712e-01,  9.2229e-01,  2.2715e+00,  ...,  6.1619e-01,
           8.6469e-01,  8.9789e-01],
         [ 6.4114e-01,  2.2959e-01,  2.4762e+00,  ...,  7.5013e-01,
           9.1124e-01,  6.7713e-02],
         [ 7.7718e-01,  7.2721e-01,  2.5682e+00,  ...,  8.7971e-02,
          -1.8558e-02,  8.1620e-01],
         ...,
         [ 3.2226e-01,  5.5326e-01,  2.2873e+00,  ...,  8.0202e-01,
           6.1040e-01,  3.4509e-01],
         [ 6.1413e-01,  4.8351e-01,  2.4964e+00,  ...,  4.9505e-01,
           3.3610e-01, -6.9063e-02],
         [ 7.4539e-01,  5.9528e-01,  2.1018e+00,  ...,  7.8897e-01,
           6.9946e-01,  1.3540e-01]],

        [[ 5.1558e-01,  1.1350e-01,  3.0334e+00,  ...,  4.8364e-01,
           4.8324e-01,  5.5808e-01],
         [ 5.3383e-01,  9.5424e-01,  2.2283e+00,  ...,  8.6383e-01,
           3.2684e-01,  4.6247e-01],
         [ 3.7053e-01,  3.5369e-01,  2.5417e+00,  ...,  5.6830e-01,
           3.7974e-01,  6.1461e-01],
         ...,
         [ 8.3067e-01,  5.8207e-01,  2.8761e+00,  ...,  2.6443e-01,
           6.9001e-01,  3.2410e-01],
         [ 1.2141e+00,  2.0236e-01,  2.4436e+00,  ...,  3.7349e-01,
           1.2838e-02,  3.5470e-01],
         [ 1.2967e+00,  9.5363e-01,  2.8133e+00,  ...,  8.5749e-01,
          -2.7946e-02,  5.2212e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.3919,  0.5178,  0.7659,  ..., -0.3388, -0.4865, -0.0961],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.3032,  0.5392,  0.1829,  ..., -0.6873, -0.5049, -0.0183],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6815, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.0215, -0.4139, -0.1730,  ..., -0.2811, -0.6345,  0.0047],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8545, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000]],

        [[0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000],
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.2628, 0.4862,  ..., 0.6538, 0.5994, 1.0000],
         [0.0000, 0.4343, 0.4615,  ..., 0.6538, 0.5688, 1.0000],
         [0.0000, 0.4526, 0.4985,  ..., 0.6538, 0.5332, 1.0000]],

        ...,

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        [[0.0000, 0.4015, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3285, 0.3200,  ..., 0.0385, 0.2379, 0.3887],
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 0.8252,  0.5189,  2.7687,  ..., -0.3969,  0.3947, -0.0344],
         [ 0.4964,  0.1539,  2.6438,  ...,  0.3560, -0.3467,  0.7012],
         [ 0.7304,  0.1234,  2.1451,  ...,  0.2223,  0.2220,  1.0783],
         ...,
         [ 1.2703,  0.6458,  2.4564,  ...,  0.4634,  0.7412,  0.1221],
         [ 0.4514, -0.0660,  1.9180,  ..., -0.0725,  0.3177, -0.0261],
         [ 0.7317, -0.0377,  2.6072,  ...,  0.1191, -0.1331,  0.1461]],

        [[ 0.4941,  0.4709,  2.0984,  ...,  0.7383,  0.4128,  0.2615],
         [ 0.5243,  0.7176,  2.2571,  ...,  0.8011,  0.4605, -0.1996],
         [ 0.3271,  0.3797,  2.4572,  ...,  0.4627,  0.6853,  0.0525],
         ...,
         [ 0.8786,  0.5374,  2.4927,  ...,  1.0451,  0.8537, -0.0127],
         [ 0.4274,  0.2221,  2.3289,  ...,  0.5766, -0.0309,  0.4416],
         [ 0.7630,  0.2516,  2.6270,  ...,  0.6412, -0.1535,  0.7340]],

        [[ 0.4522,  0.6599,  2.2605,  ...,  0.4533,  0.7188,  0.6551],
         [ 0.3115,  0.7924,  2.7036,  ...,  0.3459,  0.1062, -0.0935],
         [ 0.6315,  0.8623,  2.6733,  ...,  0.7963,  0.3605,  0.5321],
         ...,
         [ 0.9553,  0.6121,  2.9813,  ...,  0.0494,  1.0904, -0.0540],
         [ 0.1467,  0.4739,  2.1718,  ...,  0.7916,  0.0551,  0.5513],
         [ 0.4946,  0.8040,  2.2610,  ...,  0.5610,  0.2548,  0.2870]],

        ...,

        [[ 0.0250,  0.9680,  1.9669,  ...,  1.2739,  0.2780,  0.6652],
         [ 0.2854,  0.4834,  2.5133,  ...,  0.7405,  0.4859, -0.0048],
         [ 0.8817,  0.8719,  2.5978,  ...,  0.4848, -0.1144,  0.2501],
         ...,
         [ 0.7919,  0.2763,  2.3226,  ...,  0.6629,  0.7634,  0.1153],
         [ 0.9391,  0.6198,  2.7534,  ...,  0.2830,  0.0167,  0.1536],
         [ 0.8654,  1.0603,  2.0199,  ...,  0.9357,  0.8139, -0.0205]],

        [[ 0.6811,  0.1471,  2.4335,  ...,  0.2547,  0.7704,  0.2534],
         [ 0.9478,  0.6627,  2.9129,  ...,  0.2748,  0.0895, -0.5194],
         [ 0.1788,  0.9179,  2.8428,  ...,  0.2855, -0.2059, -0.1648],
         ...,
         [ 0.8059,  0.8884,  2.2481,  ...,  0.7852,  0.7518,  0.4045],
         [ 0.8852,  1.0299,  2.5480,  ...,  0.4274, -0.4242,  0.3999],
         [ 0.7389,  0.7559,  2.6901,  ...,  0.8985,  0.2530,  0.2726]],

        [[ 0.3303,  0.4889,  2.5416,  ...,  0.8244,  0.6071,  0.7884],
         [ 0.4524,  0.5330,  2.5884,  ...,  0.8751, -0.0372,  0.5845],
         [ 0.6842,  0.8573,  2.0616,  ...,  0.3084,  0.4010,  0.0192],
         ...,
         [ 1.1163,  0.9111,  3.0038,  ...,  0.2890,  0.7401,  0.1475],
         [ 0.7147,  0.0276,  2.1440,  ...,  0.1203,  0.3411, -0.1268],
         [ 1.0574,  0.4751,  2.4447,  ...,  1.0368,  0.2663,  0.2933]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.2495,  0.5177,  0.3436,  ..., -0.8996, -0.1029,  0.5482],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3670, -0.0043,  0.0264,  ..., -0.3360, -0.6008,  0.0479],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6837, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.2883,  0.2045,  0.3015,  ..., -0.7433, -0.4801, -0.2637],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8562, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.5046,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.4862,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.4307, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000]],

        [[0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.4615, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3723, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000]],

        [[0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5552, 1.0000],
         [0.0000, 0.3723, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3650, 0.1815,  ..., 0.0385, 0.2048, 0.3682],
         [0.0000, 0.3796, 0.2646,  ..., 0.0000, 0.3160, 0.3503],
         [0.0000, 0.3066, 0.3015,  ..., 0.1154, 0.4415, 0.3390]],

        [[0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4985,  ..., 0.5000, 0.5550, 1.0000]]])
fake_data torch.Size([64, 50, 17]) tensor([[[-0.0794,  0.2409,  2.0860,  ...,  0.6369,  0.7283,  0.9475],
         [ 0.9435,  0.2008,  3.1775,  ...,  0.5325,  0.5150, -0.1720],
         [ 0.7889,  0.8131,  2.7939,  ...,  0.8326,  0.4626,  0.2500],
         ...,
         [ 0.8479,  0.0666,  2.8828,  ...,  0.5630,  0.7031,  0.9758],
         [ 0.9535, -0.1190,  2.3507,  ...,  0.5031, -0.6195,  0.8726],
         [ 1.0079,  0.1688,  3.0219,  ...,  0.3064,  0.4940,  0.5979]],

        [[ 0.1005,  0.4446,  2.2454,  ...,  0.5288,  0.5856,  0.4750],
         [ 0.0587,  0.9792,  2.5143,  ...,  0.2936, -0.0296, -0.1238],
         [ 0.6737,  0.3061,  2.9120,  ...,  0.0419,  0.5577,  0.3340],
         ...,
         [ 0.0108,  0.6552,  2.3852,  ...,  0.3888,  0.6992, -0.0346],
         [ 0.0814,  0.4506,  2.4653,  ...,  0.2714, -0.0612,  0.1026],
         [ 0.7600,  0.6726,  2.2851,  ...,  0.9661,  0.2465,  0.3654]],

        [[ 0.5014,  0.1106,  2.8271,  ...,  0.7873,  0.8099,  0.4639],
         [ 0.8735,  0.7677,  2.0054,  ...,  0.8679, -0.0905, -0.4887],
         [ 1.0374,  0.6965,  2.5607,  ...,  0.7922,  0.4491,  0.1667],
         ...,
         [ 0.5601,  0.7699,  2.2504,  ...,  0.4069,  0.8336,  0.4921],
         [ 0.8149,  0.1576,  2.3067,  ...,  0.1927, -0.2587,  0.9447],
         [ 1.0505,  0.1888,  2.2075,  ...,  0.2302,  0.1323,  0.4760]],

        ...,

        [[ 0.4997,  0.2891,  2.3533,  ...,  1.1279,  0.4971,  0.6361],
         [ 0.4884,  0.4766,  2.4189,  ...,  0.4703, -0.0258,  0.6130],
         [ 0.4616,  0.1268,  2.3804,  ...,  0.2862, -0.2268,  0.0629],
         ...,
         [ 0.8332,  0.2275,  2.6580,  ...,  0.0077,  0.9161,  0.7219],
         [ 0.7234,  0.5482,  2.4686,  ...,  0.3127,  0.0222,  0.2992],
         [ 0.6403,  0.7439,  2.3511,  ...,  0.9654,  0.3155,  0.5026]],

        [[ 0.7082,  0.9425,  2.7372,  ...,  0.9965,  0.7657,  0.3675],
         [ 0.3290,  0.1622,  2.3595,  ...,  0.8637,  0.7403,  0.3080],
         [ 1.2409,  0.6015,  2.6961,  ...,  0.7532,  0.3457,  0.5374],
         ...,
         [ 0.7143,  0.2702,  2.9567,  ...,  0.6067,  0.4841,  1.0089],
         [ 0.7529,  0.4174,  2.5755,  ...,  0.6228, -0.2057,  0.4893],
         [ 0.4263,  0.6213,  2.8446,  ...,  0.6539,  0.0035,  0.9609]],

        [[ 0.4653,  0.5041,  2.1829,  ...,  0.5232,  0.0986,  1.0969],
         [ 0.6153,  0.3062,  2.7535,  ...,  0.8865,  0.2441,  0.3901],
         [ 0.3653,  0.3669,  2.3462,  ...,  0.3991,  0.6533,  0.1180],
         ...,
         [ 0.8659,  0.7935,  2.4234,  ...,  0.7920,  0.1967,  0.2748],
         [ 0.9034, -0.1063,  2.3221,  ...,  0.1325,  0.0602,  0.1075],
         [ 1.3330,  0.2702,  2.4803,  ...,  0.7339,  0.0810,  0.6533]]],
       grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.0065,  0.2558,  0.2240,  ..., -0.5067, -0.9297,  0.3819],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([ 0.1537,  0.4313, -0.0066,  ...,  0.0069, -0.4611,  0.4178],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6741, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([ 0.2331, -0.4262, -0.0368,  ..., -0.5777, -0.2555,  0.4243],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8611, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Size of real_batch: torch.Size([64, 50, 17]) tensor([[[0.0000, 0.3796, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3540, 0.5169,  ..., 0.6538, 0.5304, 1.0000],
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000]],

        [[0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3394, 0.4677,  ..., 0.5000, 0.5756, 1.0000],
         [0.0000, 0.3504, 0.5169,  ..., 0.5000, 0.7241, 1.0000],
         [0.0000, 0.3029, 0.4769,  ..., 0.5385, 0.8878, 1.0000]],

        [[0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4862,  ..., 0.4615, 0.5549, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000],
         [0.0000, 0.4015, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.4615, 0.5550, 1.0000]],

        ...,

        [[0.0000, 0.3942, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3942, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.4854, 0.5262,  ..., 0.5000, 0.3844, 1.0000],
         [0.0000, 0.4197, 0.5323,  ..., 0.4615, 0.2657, 1.0000],
         [0.0000, 0.3358, 0.4646,  ..., 0.4615, 0.1192, 1.0000]],

        [[0.0000, 0.3869, 0.5046,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.5000, 0.5550, 1.0000],
         ...,
         [0.0000, 0.3869, 0.4923,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3723, 0.4985,  ..., 0.4615, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.4985,  ..., 0.4615, 0.5549, 1.0000]],

        [[0.0000, 0.3796, 0.4862,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3796, 0.5108,  ..., 0.5000, 0.5550, 1.0000],
         [0.0000, 0.3869, 0.5108,  ..., 0.4615, 0.5550, 1.0000],
         ...,
         [0.0000, 0.2847, 0.6246,  ..., 0.6538, 0.5279, 1.0000],
         [0.0000, 0.4380, 0.9200,  ..., 0.6538, 0.5216, 1.0000],
         [0.0000, 0.5839, 1.0000,  ..., 0.4231, 0.5155, 0.7138]]])
fake_data torch.Size([64, 50, 17]) tensor([[[ 6.9113e-02,  5.5266e-01,  2.4378e+00,  ...,  6.0961e-01,
           8.3327e-01,  7.6194e-01],
         [ 7.3064e-01, -9.3226e-02,  2.8298e+00,  ...,  1.1672e+00,
           9.2464e-04,  5.9004e-01],
         [ 7.7499e-01,  5.3316e-01,  2.9730e+00,  ..., -2.4490e-01,
           2.2512e-01, -9.3640e-02],
         ...,
         [ 7.2164e-01,  3.3509e-01,  2.6860e+00,  ...,  5.7870e-01,
           2.3859e-01,  4.7163e-01],
         [ 2.8956e-01,  3.3512e-01,  2.4395e+00,  ...,  6.3190e-01,
          -2.5601e-02, -8.8491e-02],
         [ 7.2007e-01,  2.5790e-01,  2.2672e+00,  ...,  3.4430e-01,
           5.5903e-02,  5.2565e-01]],

        [[ 7.3591e-01,  6.3620e-01,  2.4089e+00,  ...,  5.6338e-01,
           1.7214e-01,  6.4436e-01],
         [ 3.8618e-01,  3.1556e-01,  3.1372e+00,  ...,  4.1297e-01,
           9.9748e-02,  5.7938e-01],
         [ 6.4478e-01,  7.4178e-01,  2.6614e+00,  ..., -2.7666e-01,
          -1.5141e-01,  5.3560e-01],
         ...,
         [ 4.0710e-01,  8.8025e-01,  2.5089e+00,  ...,  4.7621e-01,
           9.0631e-01, -2.6334e-01],
         [ 7.0863e-01,  2.3842e-02,  1.7649e+00,  ...,  7.4977e-01,
           3.4074e-01,  2.4938e-01],
         [ 9.0804e-01,  2.3948e-01,  2.4652e+00,  ..., -3.3325e-02,
           2.8003e-02,  6.5163e-02]],

        [[ 7.1556e-01,  1.0126e+00,  2.8051e+00,  ...,  9.3495e-01,
           4.9574e-01,  7.4225e-01],
         [ 2.1987e-01,  4.0148e-01,  2.5578e+00,  ...,  9.7027e-01,
           5.3957e-01,  7.6189e-01],
         [ 6.9454e-01,  6.6906e-01,  2.4259e+00,  ...,  5.9150e-01,
           3.2493e-01,  4.7542e-01],
         ...,
         [ 1.0485e+00,  7.0438e-01,  2.7970e+00,  ...,  3.2730e-01,
           4.6926e-01,  2.7124e-01],
         [ 6.3498e-01, -1.6329e-01,  2.4928e+00,  ...,  1.3429e-01,
          -1.5034e-01,  4.5577e-01],
         [ 1.2210e+00,  2.7897e-01,  2.4846e+00,  ...,  6.3570e-01,
           1.7941e-01,  5.7244e-01]],

        ...,

        [[ 7.5563e-01,  3.3818e-01,  2.2874e+00,  ...,  1.0279e+00,
           3.1183e-01,  2.6940e-01],
         [ 1.7561e-01,  2.9711e-01,  2.3094e+00,  ...,  1.5110e-01,
           4.4911e-01,  4.2606e-01],
         [ 8.2407e-01,  8.1630e-01,  2.6195e+00,  ...,  5.2364e-01,
           4.3723e-01, -1.7321e-02],
         ...,
         [ 8.8208e-01,  6.4164e-01,  2.5307e+00,  ...,  5.9844e-01,
           1.0319e-01,  7.1090e-01],
         [ 4.5252e-01, -3.8694e-01,  2.4970e+00,  ..., -7.2152e-02,
          -7.7985e-01,  4.5642e-01],
         [ 8.8274e-01,  8.6913e-01,  2.4138e+00,  ...,  8.9084e-01,
           8.9233e-01,  1.0506e-01]],

        [[ 2.0567e-01,  6.9941e-01,  2.4902e+00,  ...,  5.9135e-01,
           2.4604e-01,  3.7990e-01],
         [ 7.8219e-01,  3.1685e-01,  2.5432e+00,  ...,  1.0940e+00,
           1.4013e-01,  6.2679e-01],
         [ 6.9548e-01,  5.4501e-01,  2.5919e+00,  ...,  8.0407e-01,
           3.5937e-01,  5.8642e-01],
         ...,
         [ 4.4543e-01,  5.9556e-01,  2.6943e+00,  ..., -3.6600e-01,
           5.1172e-01,  2.0970e-02],
         [ 1.5780e-01,  4.7594e-01,  1.9906e+00,  ...,  4.3399e-01,
          -4.3038e-02,  5.8631e-01],
         [ 9.7971e-01,  7.8992e-01,  2.7150e+00,  ..., -1.7943e-01,
           4.0949e-01, -2.4316e-01]],

        [[ 4.1325e-01,  9.1446e-01,  2.7748e+00,  ...,  5.9976e-01,
           2.8811e-01,  3.2974e-01],
         [ 2.4035e-01,  2.1732e-01,  1.9970e+00,  ...,  7.4406e-01,
           6.6033e-01,  6.0603e-02],
         [ 1.1139e+00,  7.3771e-01,  2.9055e+00,  ...,  5.4106e-01,
          -8.9599e-02,  7.5140e-01],
         ...,
         [ 1.1935e+00,  6.7701e-02,  2.4083e+00,  ...,  4.9415e-02,
           3.9867e-01,  9.2265e-01],
         [ 3.9953e-01,  6.0873e-01,  2.4223e+00,  ...,  7.7719e-01,
           3.3786e-02,  1.1759e-01],
         [ 9.4625e-01,  7.2392e-01,  2.6320e+00,  ...,  8.5393e-01,
          -2.9856e-02,  4.5922e-01]]], grad_fn=<ViewBackward0>)


 disc_real torch.Size([3200]) tensor([ 0.4937,  0.2652,  0.2208,  ..., -0.2874, -0.1779,  0.0077],
       grad_fn=<ViewBackward0>)


 disc_fake torch.Size([3200]) tensor([-0.3380, -0.3986, -0.1695,  ..., -0.5658, -0.6033, -0.6309],
       grad_fn=<ViewBackward0>)


 loss_disc tensor(0.6708, grad_fn=<DivBackward0>)


 output torch.Size([3200]) tensor([-0.2285, -0.3478, -0.4924,  ..., -0.5540, -0.1080, -0.0626],
       grad_fn=<ViewBackward0>)


 loss_gen tensor(0.8682, grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
Epoch [1/1] 	 Discriminator Loss: 0.0839 	 Generator Loss: 0.1085
Saving synthetic data:
/home/ymax29os/.local/lib/python3.9/site-packages/torch/nn/modules/transformer.py:307: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
[1m[34mDiscriminative Score: 0.5000[0m
/home/ymax29os/GANs/ams_project-2/transformer_GAN/metrics/predictive_metric.py:41: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  ori_data = torch.tensor(ori_data, dtype=torch.float32).to(device)
/home/ymax29os/.local/lib/python3.9/site-packages/torch/nn/modules/loss.py:101: UserWarning: Using a target size (torch.Size([10, 1])) that is different to the input size (torch.Size([10, 1, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.l1_loss(input, target, reduction=self.reduction)
[1m[34mPredictive Score: 0.6497[0m
