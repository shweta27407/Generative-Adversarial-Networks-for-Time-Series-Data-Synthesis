/home/ymax29os/ams_project-2/transformer_GAN/transformer_model.py:95: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler()
/home/ymax29os/.local/lib/python3.9/site-packages/torch/amp/grad_scaler.py:132: UserWarning: torch.cuda.amp.GradScaler is enabled, but CUDA is not available.  Disabling.
  warnings.warn(
Size of real_batch: torch.Size([64, 50, 22])
/home/ymax29os/ams_project-2/transformer_GAN/transformer_model.py:135: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
/home/ymax29os/.local/lib/python3.9/site-packages/torch/amp/autocast_mode.py:265: UserWarning: User provided device_type of 'cuda', but CUDA is not available. Disabling
  warnings.warn(
/home/ymax29os/ams_project-2/transformer_GAN/transformer_model.py:151: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Size of real_batch: torch.Size([64, 50, 22])
Epoch [1/1] 	 Discriminator Loss: 0.0811 	 Generator Loss: 0.1084
Saving synthetic data:
/home/ymax29os/.local/lib/python3.9/site-packages/torch/nn/modules/transformer.py:307: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Traceback (most recent call last):
  File "/home/ymax29os/ams_project-2/transformer_GAN/main.py", line 93, in <module>
    discriminative_score = discriminative_score_metric(transformer_discriminator, real_data, synthetic_data, device)
  File "/home/ymax29os/ams_project-2/transformer_GAN/metrics/discriminative_metric.py", line 54, in discriminative_score_metric
    loss.backward()
  File "/home/ymax29os/.local/lib/python3.9/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/home/ymax29os/.local/lib/python3.9/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/ymax29os/.local/lib/python3.9/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
